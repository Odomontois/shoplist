// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__53197__delegate = function (args){
return console.log.apply(console,(function (){var G__53196 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__53196) : cljs.core.into_array.call(null,G__53196));
})());
};
var G__53197 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__53198__i = 0, G__53198__a = new Array(arguments.length -  0);
while (G__53198__i < G__53198__a.length) {G__53198__a[G__53198__i] = arguments[G__53198__i + 0]; ++G__53198__i;}
  args = new cljs.core.IndexedSeq(G__53198__a,0);
} 
return G__53197__delegate.call(this,args);};
G__53197.cljs$lang$maxFixedArity = 0;
G__53197.cljs$lang$applyTo = (function (arglist__53199){
var args = cljs.core.seq(arglist__53199);
return G__53197__delegate(args);
});
G__53197.cljs$core$IFn$_invoke$arity$variadic = G__53197__delegate;
return G__53197;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__53201 = x;
return goog.isString(G__53201);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__53203 = x__$1;
return goog.typeOf(G__53203);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3731__auto__ = ty;
if(cljs.core.truth_(and__3731__auto__)){
return ty.cljs$lang$type;
} else {
return and__3731__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__53205 = obj;
return goog.typeOf(G__53205);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__53207 = Symbol;
return goog.typeOf(G__53207);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4630__auto___53209 = len;
var i_53210 = (0);
while(true){
if((i_53210 < n__4630__auto___53209)){
(new_arr[i_53210] = (arr[i_53210]));

var G__53211 = (i_53210 + (1));
i_53210 = G__53211;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__53212 = (i + (1));
i = G__53212;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__53221__delegate = function (array,i,idxs){
var G__53218 = aget;
var G__53219 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__53220 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__53218,G__53219,G__53220) : cljs.core.apply.call(null,G__53218,G__53219,G__53220));
};
var G__53221 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__53222__i = 0, G__53222__a = new Array(arguments.length -  2);
while (G__53222__i < G__53222__a.length) {G__53222__a[G__53222__i] = arguments[G__53222__i + 2]; ++G__53222__i;}
  idxs = new cljs.core.IndexedSeq(G__53222__a,0);
} 
return G__53221__delegate.call(this,array,i,idxs);};
G__53221.cljs$lang$maxFixedArity = 2;
G__53221.cljs$lang$applyTo = (function (arglist__53223){
var array = cljs.core.first(arglist__53223);
arglist__53223 = cljs.core.next(arglist__53223);
var i = cljs.core.first(arglist__53223);
var idxs = cljs.core.rest(arglist__53223);
return G__53221__delegate(array,i,idxs);
});
G__53221.cljs$core$IFn$_invoke$arity$variadic = G__53221__delegate;
return G__53221;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__53224 = null;
if (arguments.length > 2) {
var G__53225__i = 0, G__53225__a = new Array(arguments.length -  2);
while (G__53225__i < G__53225__a.length) {G__53225__a[G__53225__i] = arguments[G__53225__i + 2]; ++G__53225__i;}
G__53224 = new cljs.core.IndexedSeq(G__53225__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__53224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__53234__delegate = function (array,idx,idx2,idxv){
var G__53230 = aset;
var G__53231 = (array[idx]);
var G__53232 = idx2;
var G__53233 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__53230,G__53231,G__53232,G__53233) : cljs.core.apply.call(null,G__53230,G__53231,G__53232,G__53233));
};
var G__53234 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__53235__i = 0, G__53235__a = new Array(arguments.length -  3);
while (G__53235__i < G__53235__a.length) {G__53235__a[G__53235__i] = arguments[G__53235__i + 3]; ++G__53235__i;}
  idxv = new cljs.core.IndexedSeq(G__53235__a,0);
} 
return G__53234__delegate.call(this,array,idx,idx2,idxv);};
G__53234.cljs$lang$maxFixedArity = 3;
G__53234.cljs$lang$applyTo = (function (arglist__53236){
var array = cljs.core.first(arglist__53236);
arglist__53236 = cljs.core.next(arglist__53236);
var idx = cljs.core.first(arglist__53236);
arglist__53236 = cljs.core.next(arglist__53236);
var idx2 = cljs.core.first(arglist__53236);
var idxv = cljs.core.rest(arglist__53236);
return G__53234__delegate(array,idx,idx2,idxv);
});
G__53234.cljs$core$IFn$_invoke$arity$variadic = G__53234__delegate;
return G__53234;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__53237 = null;
if (arguments.length > 3) {
var G__53238__i = 0, G__53238__a = new Array(arguments.length -  3);
while (G__53238__i < G__53238__a.length) {G__53238__a[G__53238__i] = arguments[G__53238__i + 3]; ++G__53238__i;}
G__53237 = new cljs.core.IndexedSeq(G__53238__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__53237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__53244 = (function (a,x){
a.push(x);

return a;
});
var G__53245 = [];
var G__53246 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__53244,G__53245,G__53246) : cljs.core.reduce.call(null,G__53244,G__53245,G__53246));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__53247__i = 0, G__53247__a = new Array(arguments.length -  2);
while (G__53247__i < G__53247__a.length) {G__53247__a[G__53247__i] = arguments[G__53247__i + 2]; ++G__53247__i;}
  args = new cljs.core.IndexedSeq(G__53247__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__53248){
var obj = cljs.core.first(arglist__53248);
arglist__53248 = cljs.core.next(arglist__53248);
var s = cljs.core.first(arglist__53248);
var args = cljs.core.rest(arglist__53248);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj53250 = {};
return obj53250;
})();


cljs.core.IFn = (function (){var obj53252 = {};
return obj53252;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53298 = x__4387__auto__;
return goog.typeOf(G__53298);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53300 = x__4387__auto__;
return goog.typeOf(G__53300);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53302 = x__4387__auto__;
return goog.typeOf(G__53302);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53304 = x__4387__auto__;
return goog.typeOf(G__53304);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53306 = x__4387__auto__;
return goog.typeOf(G__53306);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53308 = x__4387__auto__;
return goog.typeOf(G__53308);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53310 = x__4387__auto__;
return goog.typeOf(G__53310);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53312 = x__4387__auto__;
return goog.typeOf(G__53312);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53314 = x__4387__auto__;
return goog.typeOf(G__53314);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53316 = x__4387__auto__;
return goog.typeOf(G__53316);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53318 = x__4387__auto__;
return goog.typeOf(G__53318);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53320 = x__4387__auto__;
return goog.typeOf(G__53320);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53322 = x__4387__auto__;
return goog.typeOf(G__53322);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53324 = x__4387__auto__;
return goog.typeOf(G__53324);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53326 = x__4387__auto__;
return goog.typeOf(G__53326);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53328 = x__4387__auto__;
return goog.typeOf(G__53328);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53330 = x__4387__auto__;
return goog.typeOf(G__53330);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53332 = x__4387__auto__;
return goog.typeOf(G__53332);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53334 = x__4387__auto__;
return goog.typeOf(G__53334);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53336 = x__4387__auto__;
return goog.typeOf(G__53336);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53338 = x__4387__auto__;
return goog.typeOf(G__53338);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__53340 = x__4387__auto__;
return goog.typeOf(G__53340);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj53342 = {};
return obj53342;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3731__auto__ = value;
if(and__3731__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3731__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4387__auto__ = (((value == null))?null:value);
return (function (){var or__3743__auto__ = (cljs.core._clone[(function (){var G__53346 = x__4387__auto__;
return goog.typeOf(G__53346);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._clone["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj53348 = {};
return obj53348;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._count[(function (){var G__53352 = x__4387__auto__;
return goog.typeOf(G__53352);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._count["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj53354 = {};
return obj53354;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._empty[(function (){var G__53358 = x__4387__auto__;
return goog.typeOf(G__53358);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._empty["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj53360 = {};
return obj53360;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._conj[(function (){var G__53364 = x__4387__auto__;
return goog.typeOf(G__53364);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._conj["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj53366 = {};
return obj53366;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._nth[(function (){var G__53372 = x__4387__auto__;
return goog.typeOf(G__53372);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._nth["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._nth[(function (){var G__53374 = x__4387__auto__;
return goog.typeOf(G__53374);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._nth["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj53376 = {};
return obj53376;
})();


cljs.core.ISeq = (function (){var obj53378 = {};
return obj53378;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._first[(function (){var G__53382 = x__4387__auto__;
return goog.typeOf(G__53382);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._first["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._rest[(function (){var G__53386 = x__4387__auto__;
return goog.typeOf(G__53386);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._rest["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj53388 = {};
return obj53388;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._next[(function (){var G__53392 = x__4387__auto__;
return goog.typeOf(G__53392);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._next["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj53394 = {};
return obj53394;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._lookup[(function (){var G__53400 = x__4387__auto__;
return goog.typeOf(G__53400);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._lookup["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._lookup[(function (){var G__53402 = x__4387__auto__;
return goog.typeOf(G__53402);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._lookup["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj53404 = {};
return obj53404;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__53408 = x__4387__auto__;
return goog.typeOf(G__53408);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._assoc[(function (){var G__53412 = x__4387__auto__;
return goog.typeOf(G__53412);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._assoc["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj53414 = {};
return obj53414;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._dissoc[(function (){var G__53418 = x__4387__auto__;
return goog.typeOf(G__53418);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj53420 = {};
return obj53420;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._key[(function (){var G__53424 = x__4387__auto__;
return goog.typeOf(G__53424);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._key["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._val[(function (){var G__53428 = x__4387__auto__;
return goog.typeOf(G__53428);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._val["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj53430 = {};
return obj53430;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._disjoin[(function (){var G__53434 = x__4387__auto__;
return goog.typeOf(G__53434);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj53436 = {};
return obj53436;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._peek[(function (){var G__53440 = x__4387__auto__;
return goog.typeOf(G__53440);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._peek["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._pop[(function (){var G__53444 = x__4387__auto__;
return goog.typeOf(G__53444);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._pop["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj53446 = {};
return obj53446;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._assoc_n[(function (){var G__53450 = x__4387__auto__;
return goog.typeOf(G__53450);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj53452 = {};
return obj53452;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._deref[(function (){var G__53456 = x__4387__auto__;
return goog.typeOf(G__53456);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._deref["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj53458 = {};
return obj53458;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._deref_with_timeout[(function (){var G__53462 = x__4387__auto__;
return goog.typeOf(G__53462);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj53464 = {};
return obj53464;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._meta[(function (){var G__53468 = x__4387__auto__;
return goog.typeOf(G__53468);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._meta["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj53470 = {};
return obj53470;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._with_meta[(function (){var G__53474 = x__4387__auto__;
return goog.typeOf(G__53474);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj53476 = {};
return obj53476;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._reduce[(function (){var G__53482 = x__4387__auto__;
return goog.typeOf(G__53482);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._reduce["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._reduce[(function (){var G__53484 = x__4387__auto__;
return goog.typeOf(G__53484);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._reduce["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj53486 = {};
return obj53486;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._kv_reduce[(function (){var G__53490 = x__4387__auto__;
return goog.typeOf(G__53490);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj53492 = {};
return obj53492;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._equiv[(function (){var G__53496 = x__4387__auto__;
return goog.typeOf(G__53496);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._equiv["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj53498 = {};
return obj53498;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._hash[(function (){var G__53502 = x__4387__auto__;
return goog.typeOf(G__53502);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._hash["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj53504 = {};
return obj53504;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._seq[(function (){var G__53508 = x__4387__auto__;
return goog.typeOf(G__53508);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._seq["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj53510 = {};
return obj53510;
})();


cljs.core.IList = (function (){var obj53512 = {};
return obj53512;
})();


cljs.core.IRecord = (function (){var obj53514 = {};
return obj53514;
})();


cljs.core.IReversible = (function (){var obj53516 = {};
return obj53516;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._rseq[(function (){var G__53520 = x__4387__auto__;
return goog.typeOf(G__53520);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._rseq["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj53522 = {};
return obj53522;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._sorted_seq[(function (){var G__53526 = x__4387__auto__;
return goog.typeOf(G__53526);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._sorted_seq_from[(function (){var G__53530 = x__4387__auto__;
return goog.typeOf(G__53530);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._entry_key[(function (){var G__53534 = x__4387__auto__;
return goog.typeOf(G__53534);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._comparator[(function (){var G__53538 = x__4387__auto__;
return goog.typeOf(G__53538);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._comparator["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj53540 = {};
return obj53540;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3731__auto__ = writer;
if(and__3731__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3731__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4387__auto__ = (((writer == null))?null:writer);
return (function (){var or__3743__auto__ = (cljs.core._write[(function (){var G__53544 = x__4387__auto__;
return goog.typeOf(G__53544);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._write["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3731__auto__ = writer;
if(and__3731__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3731__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4387__auto__ = (((writer == null))?null:writer);
return (function (){var or__3743__auto__ = (cljs.core._flush[(function (){var G__53548 = x__4387__auto__;
return goog.typeOf(G__53548);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._flush["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj53550 = {};
return obj53550;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._pr_writer[(function (){var G__53554 = x__4387__auto__;
return goog.typeOf(G__53554);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj53556 = {};
return obj53556;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3731__auto__ = d;
if(and__3731__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3731__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4387__auto__ = (((d == null))?null:d);
return (function (){var or__3743__auto__ = (cljs.core._realized_QMARK_[(function (){var G__53560 = x__4387__auto__;
return goog.typeOf(G__53560);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj53562 = {};
return obj53562;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._notify_watches[(function (){var G__53566 = x__4387__auto__;
return goog.typeOf(G__53566);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._add_watch[(function (){var G__53570 = x__4387__auto__;
return goog.typeOf(G__53570);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._remove_watch[(function (){var G__53574 = x__4387__auto__;
return goog.typeOf(G__53574);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj53576 = {};
return obj53576;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._as_transient[(function (){var G__53580 = x__4387__auto__;
return goog.typeOf(G__53580);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj53582 = {};
return obj53582;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._conj_BANG_[(function (){var G__53586 = x__4387__auto__;
return goog.typeOf(G__53586);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._persistent_BANG_[(function (){var G__53590 = x__4387__auto__;
return goog.typeOf(G__53590);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj53592 = {};
return obj53592;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._assoc_BANG_[(function (){var G__53596 = x__4387__auto__;
return goog.typeOf(G__53596);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj53598 = {};
return obj53598;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__53602 = x__4387__auto__;
return goog.typeOf(G__53602);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj53604 = {};
return obj53604;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__53608 = x__4387__auto__;
return goog.typeOf(G__53608);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._pop_BANG_[(function (){var G__53612 = x__4387__auto__;
return goog.typeOf(G__53612);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj53614 = {};
return obj53614;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__53618 = x__4387__auto__;
return goog.typeOf(G__53618);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj53620 = {};
return obj53620;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._compare[(function (){var G__53624 = x__4387__auto__;
return goog.typeOf(G__53624);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._compare["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj53626 = {};
return obj53626;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._drop_first[(function (){var G__53630 = x__4387__auto__;
return goog.typeOf(G__53630);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj53632 = {};
return obj53632;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._chunked_first[(function (){var G__53636 = x__4387__auto__;
return goog.typeOf(G__53636);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._chunked_rest[(function (){var G__53640 = x__4387__auto__;
return goog.typeOf(G__53640);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj53642 = {};
return obj53642;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._chunked_next[(function (){var G__53646 = x__4387__auto__;
return goog.typeOf(G__53646);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj53648 = {};
return obj53648;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._name[(function (){var G__53652 = x__4387__auto__;
return goog.typeOf(G__53652);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._name["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._namespace[(function (){var G__53656 = x__4387__auto__;
return goog.typeOf(G__53656);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._namespace["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj53658 = {};
return obj53658;
})();


cljs.core.IReset = (function (){var obj53660 = {};
return obj53660;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._reset_BANG_[(function (){var G__53664 = x__4387__auto__;
return goog.typeOf(G__53664);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj53666 = {};
return obj53666;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._swap_BANG_[(function (){var G__53676 = x__4387__auto__;
return goog.typeOf(G__53676);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._swap_BANG_[(function (){var G__53678 = x__4387__auto__;
return goog.typeOf(G__53678);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._swap_BANG_[(function (){var G__53680 = x__4387__auto__;
return goog.typeOf(G__53680);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._swap_BANG_[(function (){var G__53682 = x__4387__auto__;
return goog.typeOf(G__53682);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj53684 = {};
return obj53684;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._vreset_BANG_[(function (){var G__53688 = x__4387__auto__;
return goog.typeOf(G__53688);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj53690 = {};
return obj53690;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._iterator[(function (){var G__53694 = x__4387__auto__;
return goog.typeOf(G__53694);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._iterator["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__53697 = (4294967295);
var G__53698 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__53697,G__53698) : Math.imul.call(null,G__53697,G__53698));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__53701 = a;
var G__53702 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__53701,G__53702) : Math.imul.call(null,G__53701,G__53702));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__53703 = (i + (2));
var G__53704 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__53703;
h1 = G__53704;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj53706 = {};
return obj53706;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__53707 = (i + (1));
var G__53708 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__53707;
hash = G__53708;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj53712 = {};
return obj53712;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__53715 = o;
if(G__53715){
var bit__4417__auto__ = (G__53715.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4417__auto__) || (G__53715.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__53716 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__53716) : Math.floor.call(null,G__53716));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3731__auto__ = cljs.core.not(a.ns);
if(and__3731__auto__){
return b.ns;
} else {
return and__3731__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__53723 = a.ns;
var G__53724 = b.ns;
return goog.array.defaultCompare(G__53723,G__53724);
})();
if(((0) === nsc)){
var G__53725 = a.name;
var G__53726 = b.name;
return goog.array.defaultCompare(G__53725,G__53726);
} else {
return nsc;
}
}
} else {
var G__53727 = a.name;
var G__53728 = b.name;
return goog.array.defaultCompare(G__53727,G__53728);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4164__auto__ = self__._hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__53730 = null;
var G__53730__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__53730__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__53730 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__53730__2.call(this,self__,coll);
case 3:
return G__53730__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__53730.cljs$core$IFn$_invoke$arity$2 = G__53730__2;
G__53730.cljs$core$IFn$_invoke$arity$3 = G__53730__3;
return G__53730;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args53729){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args53729)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__53734 = x;
if(G__53734){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto__ = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return G__53734.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__53734.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__53734);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__53734);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__53736 = value;
if(G__53736){
var bit__4424__auto__ = (G__53736.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4424__auto__) || (G__53736.cljs$core$ICloneable$)){
return true;
} else {
if((!G__53736.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__53736);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__53736);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__53738 = coll;
if(G__53738){
var bit__4417__auto__ = (G__53738.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4417__auto__) || (G__53738.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__53740 = coll;
if(G__53740){
var bit__4417__auto__ = (G__53740.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4417__auto__) || (G__53740.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__53742 = coll;
if(G__53742){
var bit__4417__auto__ = (G__53742.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4417__auto__) || (G__53742.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__53744 = coll;
if(G__53744){
var bit__4417__auto__ = (G__53744.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4417__auto__) || (G__53744.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__53749__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__53750 = y;
var G__53751 = cljs.core.first(more);
var G__53752 = cljs.core.next(more);
x = G__53750;
y = G__53751;
more = G__53752;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__53749 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__53753__i = 0, G__53753__a = new Array(arguments.length -  2);
while (G__53753__i < G__53753__a.length) {G__53753__a[G__53753__i] = arguments[G__53753__i + 2]; ++G__53753__i;}
  more = new cljs.core.IndexedSeq(G__53753__a,0);
} 
return G__53749__delegate.call(this,x,y,more);};
G__53749.cljs$lang$maxFixedArity = 2;
G__53749.cljs$lang$applyTo = (function (arglist__53754){
var x = cljs.core.first(arglist__53754);
arglist__53754 = cljs.core.next(arglist__53754);
var y = cljs.core.first(arglist__53754);
var more = cljs.core.rest(arglist__53754);
return G__53749__delegate(x,y,more);
});
G__53749.cljs$core$IFn$_invoke$arity$variadic = G__53749__delegate;
return G__53749;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__53755 = null;
if (arguments.length > 2) {
var G__53756__i = 0, G__53756__a = new Array(arguments.length -  2);
while (G__53756__i < G__53756__a.length) {G__53756__a[G__53756__i] = arguments[G__53756__i + 2]; ++G__53756__i;}
G__53755 = new cljs.core.IndexedSeq(G__53756__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__53755);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__53757 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__53757) : cljs.core.es6_iterator_seq.call(null,G__53757));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__53758 = (n + (1));
var G__53759 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__53760 = cljs.core.next(coll__$1);
n = G__53758;
hash_code = G__53759;
coll__$1 = G__53760;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__53761 = (n + (1));
var G__53762 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__53763 = cljs.core.next(coll__$1);
n = G__53761;
hash_code = G__53762;
coll__$1 = G__53763;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__53764 = o;
return goog.getUid(G__53764);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__53766 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__53766) : cljs.core.deref.call(null,G__53766));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__53773 = val;
var G__53774 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__53773,G__53774) : f.call(null,G__53773,G__53774));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__53779 = nval;
var G__53780 = (n + (1));
val = G__53779;
n = G__53780;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__53775 = val__$1;
var G__53776 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__53775,G__53776) : f.call(null,G__53775,G__53776));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__53781 = nval;
var G__53782 = (n + (1));
val__$1 = G__53781;
n = G__53782;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__53777 = val__$1;
var G__53778 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__53777,G__53778) : f.call(null,G__53777,G__53778));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__53783 = nval;
var G__53784 = (n + (1));
val__$1 = G__53783;
n = G__53784;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__53791 = val;
var G__53792 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__53791,G__53792) : f.call(null,G__53791,G__53792));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__53797 = nval;
var G__53798 = (n + (1));
val = G__53797;
n = G__53798;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__53793 = val__$1;
var G__53794 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__53793,G__53794) : f.call(null,G__53793,G__53794));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__53799 = nval;
var G__53800 = (n + (1));
val__$1 = G__53799;
n = G__53800;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__53795 = val__$1;
var G__53796 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__53795,G__53796) : f.call(null,G__53795,G__53796));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__53801 = nval;
var G__53802 = (n + (1));
val__$1 = G__53801;
n = G__53802;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__53804 = x;
if(G__53804){
var bit__4424__auto__ = (G__53804.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4424__auto__) || (G__53804.cljs$core$ICounted$)){
return true;
} else {
if((!G__53804.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__53804);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__53804);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__53806 = x;
if(G__53806){
var bit__4424__auto__ = (G__53806.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4424__auto__) || (G__53806.cljs$core$IIndexed$)){
return true;
} else {
if((!G__53806.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__53806);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__53806);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__53807 = coll__$1;
var G__53808 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__53807,G__53808) : cljs.core.equiv_sequential.call(null,G__53807,G__53808));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__53809 = o;
var G__53810 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__53809,G__53810) : cljs.core.cons.call(null,G__53809,G__53810));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__53813 = coll__$1;
var G__53814 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__53813,G__53814) : cljs.core.equiv_sequential.call(null,G__53813,G__53814));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__53815 = cljs.core.List.EMPTY;
var G__53816 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__53815,G__53816) : cljs.core.with_meta.call(null,G__53815,G__53816));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__53817 = f;
var G__53818 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__53817,G__53818) : cljs.core.seq_reduce.call(null,G__53817,G__53818));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__53819 = f;
var G__53820 = start;
var G__53821 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__53819,G__53820,G__53821) : cljs.core.seq_reduce.call(null,G__53819,G__53820,G__53821));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__53822 = o;
var G__53823 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__53822,G__53823) : cljs.core.cons.call(null,G__53822,G__53823));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__53824 = sn;
s = G__53824;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__53829__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__53830 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__53831 = cljs.core.first(xs);
var G__53832 = cljs.core.next(xs);
coll = G__53830;
x = G__53831;
xs = G__53832;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__53829 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__53833__i = 0, G__53833__a = new Array(arguments.length -  2);
while (G__53833__i < G__53833__a.length) {G__53833__a[G__53833__i] = arguments[G__53833__i + 2]; ++G__53833__i;}
  xs = new cljs.core.IndexedSeq(G__53833__a,0);
} 
return G__53829__delegate.call(this,coll,x,xs);};
G__53829.cljs$lang$maxFixedArity = 2;
G__53829.cljs$lang$applyTo = (function (arglist__53834){
var coll = cljs.core.first(arglist__53834);
arglist__53834 = cljs.core.next(arglist__53834);
var x = cljs.core.first(arglist__53834);
var xs = cljs.core.rest(arglist__53834);
return G__53829__delegate(coll,x,xs);
});
G__53829.cljs$core$IFn$_invoke$arity$variadic = G__53829__delegate;
return G__53829;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__53835 = null;
if (arguments.length > 2) {
var G__53836__i = 0, G__53836__a = new Array(arguments.length -  2);
while (G__53836__i < G__53836__a.length) {G__53836__a[G__53836__i] = arguments[G__53836__i + 2]; ++G__53836__i;}
G__53835 = new cljs.core.IndexedSeq(G__53836__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__53835);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__53837 = cljs.core.next(s);
var G__53838 = (acc + (1));
s = G__53837;
acc = G__53838;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__53840 = coll;
if(G__53840){
var bit__4417__auto__ = (G__53840.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4417__auto__) || (G__53840.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__53841 = cljs.core.next(coll);
var G__53842 = (n - (1));
coll = G__53841;
n = G__53842;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__53843 = cljs.core.next(coll);
var G__53844 = (n - (1));
var G__53845 = not_found;
coll = G__53843;
n = G__53844;
not_found = G__53845;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__53850 = coll;
if(G__53850){
var bit__4417__auto__ = (G__53850.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4417__auto__) || (G__53850.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__53851 = coll;
if(G__53851){
var bit__4424__auto__ = (G__53851.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4424__auto__) || (G__53851.cljs$core$ISeq$)){
return true;
} else {
if((!G__53851.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__53851);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__53851);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__53852 = coll;
if(G__53852){
var bit__4417__auto__ = (G__53852.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4417__auto__) || (G__53852.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__53853 = coll;
if(G__53853){
var bit__4424__auto__ = (G__53853.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4424__auto__) || (G__53853.cljs$core$ISeq$)){
return true;
} else {
if((!G__53853.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__53853);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__53853);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__53854 = (n__$1 - (1));
var G__53855 = cljs.core.rest(xs);
n__$1 = G__53854;
xs = G__53855;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__53858 = o;
if(G__53858){
var bit__4417__auto__ = (G__53858.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4417__auto__) || (G__53858.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__53859 = o;
if(G__53859){
var bit__4417__auto__ = (G__53859.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4417__auto__) || (G__53859.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__53863__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__53864 = ret;
var G__53865 = cljs.core.first(kvs);
var G__53866 = cljs.core.second(kvs);
var G__53867 = cljs.core.nnext(kvs);
coll = G__53864;
k = G__53865;
v = G__53866;
kvs = G__53867;
continue;
} else {
return ret;
}
break;
}
};
var G__53863 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__53868__i = 0, G__53868__a = new Array(arguments.length -  3);
while (G__53868__i < G__53868__a.length) {G__53868__a[G__53868__i] = arguments[G__53868__i + 3]; ++G__53868__i;}
  kvs = new cljs.core.IndexedSeq(G__53868__a,0);
} 
return G__53863__delegate.call(this,coll,k,v,kvs);};
G__53863.cljs$lang$maxFixedArity = 3;
G__53863.cljs$lang$applyTo = (function (arglist__53869){
var coll = cljs.core.first(arglist__53869);
arglist__53869 = cljs.core.next(arglist__53869);
var k = cljs.core.first(arglist__53869);
arglist__53869 = cljs.core.next(arglist__53869);
var v = cljs.core.first(arglist__53869);
var kvs = cljs.core.rest(arglist__53869);
return G__53863__delegate(coll,k,v,kvs);
});
G__53863.cljs$core$IFn$_invoke$arity$variadic = G__53863__delegate;
return G__53863;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__53870 = null;
if (arguments.length > 3) {
var G__53871__i = 0, G__53871__a = new Array(arguments.length -  3);
while (G__53871__i < G__53871__a.length) {G__53871__a[G__53871__i] = arguments[G__53871__i + 3]; ++G__53871__i;}
G__53870 = new cljs.core.IndexedSeq(G__53871__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__53870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__53874__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__53875 = ret;
var G__53876 = cljs.core.first(ks);
var G__53877 = cljs.core.next(ks);
coll = G__53875;
k = G__53876;
ks = G__53877;
continue;
} else {
return ret;
}
}
break;
}
};
var G__53874 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__53878__i = 0, G__53878__a = new Array(arguments.length -  2);
while (G__53878__i < G__53878__a.length) {G__53878__a[G__53878__i] = arguments[G__53878__i + 2]; ++G__53878__i;}
  ks = new cljs.core.IndexedSeq(G__53878__a,0);
} 
return G__53874__delegate.call(this,coll,k,ks);};
G__53874.cljs$lang$maxFixedArity = 2;
G__53874.cljs$lang$applyTo = (function (arglist__53879){
var coll = cljs.core.first(arglist__53879);
arglist__53879 = cljs.core.next(arglist__53879);
var k = cljs.core.first(arglist__53879);
var ks = cljs.core.rest(arglist__53879);
return G__53874__delegate(coll,k,ks);
});
G__53874.cljs$core$IFn$_invoke$arity$variadic = G__53874__delegate;
return G__53874;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__53880 = null;
if (arguments.length > 2) {
var G__53881__i = 0, G__53881__a = new Array(arguments.length -  2);
while (G__53881__i < G__53881__a.length) {G__53881__a[G__53881__i] = arguments[G__53881__i + 2]; ++G__53881__i;}
G__53880 = new cljs.core.IndexedSeq(G__53881__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__53880);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3743__auto__ = (function (){var G__53886 = f;
return goog.isFunction(G__53886);
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__53887 = f;
if(G__53887){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto____$1 = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
return G__53887.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__53887.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__53887);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__53887);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__54353 = null;
var G__54353__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__54353__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53889 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__53889) : self__.afn.call(null,G__53889));
});
var G__54353__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53890 = a;
var G__53891 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__53890,G__53891) : self__.afn.call(null,G__53890,G__53891));
});
var G__54353__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53892 = a;
var G__53893 = b;
var G__53894 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__53892,G__53893,G__53894) : self__.afn.call(null,G__53892,G__53893,G__53894));
});
var G__54353__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53895 = a;
var G__53896 = b;
var G__53897 = c;
var G__53898 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__53895,G__53896,G__53897,G__53898) : self__.afn.call(null,G__53895,G__53896,G__53897,G__53898));
});
var G__54353__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53899 = a;
var G__53900 = b;
var G__53901 = c;
var G__53902 = d;
var G__53903 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__53899,G__53900,G__53901,G__53902,G__53903) : self__.afn.call(null,G__53899,G__53900,G__53901,G__53902,G__53903));
});
var G__54353__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53904 = a;
var G__53905 = b;
var G__53906 = c;
var G__53907 = d;
var G__53908 = e;
var G__53909 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__53904,G__53905,G__53906,G__53907,G__53908,G__53909) : self__.afn.call(null,G__53904,G__53905,G__53906,G__53907,G__53908,G__53909));
});
var G__54353__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53910 = a;
var G__53911 = b;
var G__53912 = c;
var G__53913 = d;
var G__53914 = e;
var G__53915 = f;
var G__53916 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__53910,G__53911,G__53912,G__53913,G__53914,G__53915,G__53916) : self__.afn.call(null,G__53910,G__53911,G__53912,G__53913,G__53914,G__53915,G__53916));
});
var G__54353__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53917 = a;
var G__53918 = b;
var G__53919 = c;
var G__53920 = d;
var G__53921 = e;
var G__53922 = f;
var G__53923 = g;
var G__53924 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__53917,G__53918,G__53919,G__53920,G__53921,G__53922,G__53923,G__53924) : self__.afn.call(null,G__53917,G__53918,G__53919,G__53920,G__53921,G__53922,G__53923,G__53924));
});
var G__54353__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53925 = a;
var G__53926 = b;
var G__53927 = c;
var G__53928 = d;
var G__53929 = e;
var G__53930 = f;
var G__53931 = g;
var G__53932 = h;
var G__53933 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__53925,G__53926,G__53927,G__53928,G__53929,G__53930,G__53931,G__53932,G__53933) : self__.afn.call(null,G__53925,G__53926,G__53927,G__53928,G__53929,G__53930,G__53931,G__53932,G__53933));
});
var G__54353__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53934 = a;
var G__53935 = b;
var G__53936 = c;
var G__53937 = d;
var G__53938 = e;
var G__53939 = f;
var G__53940 = g;
var G__53941 = h;
var G__53942 = i;
var G__53943 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__53934,G__53935,G__53936,G__53937,G__53938,G__53939,G__53940,G__53941,G__53942,G__53943) : self__.afn.call(null,G__53934,G__53935,G__53936,G__53937,G__53938,G__53939,G__53940,G__53941,G__53942,G__53943));
});
var G__54353__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53944 = a;
var G__53945 = b;
var G__53946 = c;
var G__53947 = d;
var G__53948 = e;
var G__53949 = f;
var G__53950 = g;
var G__53951 = h;
var G__53952 = i;
var G__53953 = j;
var G__53954 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__53944,G__53945,G__53946,G__53947,G__53948,G__53949,G__53950,G__53951,G__53952,G__53953,G__53954) : self__.afn.call(null,G__53944,G__53945,G__53946,G__53947,G__53948,G__53949,G__53950,G__53951,G__53952,G__53953,G__53954));
});
var G__54353__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53955 = a;
var G__53956 = b;
var G__53957 = c;
var G__53958 = d;
var G__53959 = e;
var G__53960 = f;
var G__53961 = g;
var G__53962 = h;
var G__53963 = i;
var G__53964 = j;
var G__53965 = k;
var G__53966 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__53955,G__53956,G__53957,G__53958,G__53959,G__53960,G__53961,G__53962,G__53963,G__53964,G__53965,G__53966) : self__.afn.call(null,G__53955,G__53956,G__53957,G__53958,G__53959,G__53960,G__53961,G__53962,G__53963,G__53964,G__53965,G__53966));
});
var G__54353__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53967 = a;
var G__53968 = b;
var G__53969 = c;
var G__53970 = d;
var G__53971 = e;
var G__53972 = f;
var G__53973 = g;
var G__53974 = h;
var G__53975 = i;
var G__53976 = j;
var G__53977 = k;
var G__53978 = l;
var G__53979 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__53967,G__53968,G__53969,G__53970,G__53971,G__53972,G__53973,G__53974,G__53975,G__53976,G__53977,G__53978,G__53979) : self__.afn.call(null,G__53967,G__53968,G__53969,G__53970,G__53971,G__53972,G__53973,G__53974,G__53975,G__53976,G__53977,G__53978,G__53979));
});
var G__54353__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53980 = a;
var G__53981 = b;
var G__53982 = c;
var G__53983 = d;
var G__53984 = e;
var G__53985 = f;
var G__53986 = g;
var G__53987 = h;
var G__53988 = i;
var G__53989 = j;
var G__53990 = k;
var G__53991 = l;
var G__53992 = m;
var G__53993 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__53980,G__53981,G__53982,G__53983,G__53984,G__53985,G__53986,G__53987,G__53988,G__53989,G__53990,G__53991,G__53992,G__53993) : self__.afn.call(null,G__53980,G__53981,G__53982,G__53983,G__53984,G__53985,G__53986,G__53987,G__53988,G__53989,G__53990,G__53991,G__53992,G__53993));
});
var G__54353__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__53994 = a;
var G__53995 = b;
var G__53996 = c;
var G__53997 = d;
var G__53998 = e;
var G__53999 = f;
var G__54000 = g;
var G__54001 = h;
var G__54002 = i;
var G__54003 = j;
var G__54004 = k;
var G__54005 = l;
var G__54006 = m;
var G__54007 = n;
var G__54008 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__53994,G__53995,G__53996,G__53997,G__53998,G__53999,G__54000,G__54001,G__54002,G__54003,G__54004,G__54005,G__54006,G__54007,G__54008) : self__.afn.call(null,G__53994,G__53995,G__53996,G__53997,G__53998,G__53999,G__54000,G__54001,G__54002,G__54003,G__54004,G__54005,G__54006,G__54007,G__54008));
});
var G__54353__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__54009 = a;
var G__54010 = b;
var G__54011 = c;
var G__54012 = d;
var G__54013 = e;
var G__54014 = f;
var G__54015 = g;
var G__54016 = h;
var G__54017 = i;
var G__54018 = j;
var G__54019 = k;
var G__54020 = l;
var G__54021 = m;
var G__54022 = n;
var G__54023 = o;
var G__54024 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__54009,G__54010,G__54011,G__54012,G__54013,G__54014,G__54015,G__54016,G__54017,G__54018,G__54019,G__54020,G__54021,G__54022,G__54023,G__54024) : self__.afn.call(null,G__54009,G__54010,G__54011,G__54012,G__54013,G__54014,G__54015,G__54016,G__54017,G__54018,G__54019,G__54020,G__54021,G__54022,G__54023,G__54024));
});
var G__54353__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__54025 = a;
var G__54026 = b;
var G__54027 = c;
var G__54028 = d;
var G__54029 = e;
var G__54030 = f;
var G__54031 = g;
var G__54032 = h;
var G__54033 = i;
var G__54034 = j;
var G__54035 = k;
var G__54036 = l;
var G__54037 = m;
var G__54038 = n;
var G__54039 = o;
var G__54040 = p;
var G__54041 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__54025,G__54026,G__54027,G__54028,G__54029,G__54030,G__54031,G__54032,G__54033,G__54034,G__54035,G__54036,G__54037,G__54038,G__54039,G__54040,G__54041) : self__.afn.call(null,G__54025,G__54026,G__54027,G__54028,G__54029,G__54030,G__54031,G__54032,G__54033,G__54034,G__54035,G__54036,G__54037,G__54038,G__54039,G__54040,G__54041));
});
var G__54353__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__54042 = a;
var G__54043 = b;
var G__54044 = c;
var G__54045 = d;
var G__54046 = e;
var G__54047 = f;
var G__54048 = g;
var G__54049 = h;
var G__54050 = i;
var G__54051 = j;
var G__54052 = k;
var G__54053 = l;
var G__54054 = m;
var G__54055 = n;
var G__54056 = o;
var G__54057 = p;
var G__54058 = q;
var G__54059 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__54042,G__54043,G__54044,G__54045,G__54046,G__54047,G__54048,G__54049,G__54050,G__54051,G__54052,G__54053,G__54054,G__54055,G__54056,G__54057,G__54058,G__54059) : self__.afn.call(null,G__54042,G__54043,G__54044,G__54045,G__54046,G__54047,G__54048,G__54049,G__54050,G__54051,G__54052,G__54053,G__54054,G__54055,G__54056,G__54057,G__54058,G__54059));
});
var G__54353__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__54060 = a;
var G__54061 = b;
var G__54062 = c;
var G__54063 = d;
var G__54064 = e;
var G__54065 = f;
var G__54066 = g;
var G__54067 = h;
var G__54068 = i;
var G__54069 = j;
var G__54070 = k;
var G__54071 = l;
var G__54072 = m;
var G__54073 = n;
var G__54074 = o;
var G__54075 = p;
var G__54076 = q;
var G__54077 = r;
var G__54078 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__54060,G__54061,G__54062,G__54063,G__54064,G__54065,G__54066,G__54067,G__54068,G__54069,G__54070,G__54071,G__54072,G__54073,G__54074,G__54075,G__54076,G__54077,G__54078) : self__.afn.call(null,G__54060,G__54061,G__54062,G__54063,G__54064,G__54065,G__54066,G__54067,G__54068,G__54069,G__54070,G__54071,G__54072,G__54073,G__54074,G__54075,G__54076,G__54077,G__54078));
});
var G__54353__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__54079 = a;
var G__54080 = b;
var G__54081 = c;
var G__54082 = d;
var G__54083 = e;
var G__54084 = f;
var G__54085 = g;
var G__54086 = h;
var G__54087 = i;
var G__54088 = j;
var G__54089 = k;
var G__54090 = l;
var G__54091 = m;
var G__54092 = n;
var G__54093 = o;
var G__54094 = p;
var G__54095 = q;
var G__54096 = r;
var G__54097 = s;
var G__54098 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__54079,G__54080,G__54081,G__54082,G__54083,G__54084,G__54085,G__54086,G__54087,G__54088,G__54089,G__54090,G__54091,G__54092,G__54093,G__54094,G__54095,G__54096,G__54097,G__54098) : self__.afn.call(null,G__54079,G__54080,G__54081,G__54082,G__54083,G__54084,G__54085,G__54086,G__54087,G__54088,G__54089,G__54090,G__54091,G__54092,G__54093,G__54094,G__54095,G__54096,G__54097,G__54098));
});
var G__54353__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__54099 = self__.afn;
var G__54100 = a;
var G__54101 = b;
var G__54102 = c;
var G__54103 = d;
var G__54104 = e;
var G__54105 = f;
var G__54106 = g;
var G__54107 = h;
var G__54108 = i;
var G__54109 = j;
var G__54110 = k;
var G__54111 = l;
var G__54112 = m;
var G__54113 = n;
var G__54114 = o;
var G__54115 = p;
var G__54116 = q;
var G__54117 = r;
var G__54118 = s;
var G__54119 = t;
var G__54120 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__54099,G__54100,G__54101,G__54102,G__54103,G__54104,G__54105,G__54106,G__54107,G__54108,G__54109,G__54110,G__54111,G__54112,G__54113,G__54114,G__54115,G__54116,G__54117,G__54118,G__54119,G__54120) : cljs.core.apply.call(null,G__54099,G__54100,G__54101,G__54102,G__54103,G__54104,G__54105,G__54106,G__54107,G__54108,G__54109,G__54110,G__54111,G__54112,G__54113,G__54114,G__54115,G__54116,G__54117,G__54118,G__54119,G__54120));
});
G__54353 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__54353__1.call(this,self__);
case 2:
return G__54353__2.call(this,self__,a);
case 3:
return G__54353__3.call(this,self__,a,b);
case 4:
return G__54353__4.call(this,self__,a,b,c);
case 5:
return G__54353__5.call(this,self__,a,b,c,d);
case 6:
return G__54353__6.call(this,self__,a,b,c,d,e);
case 7:
return G__54353__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__54353__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__54353__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__54353__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__54353__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__54353__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__54353__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__54353__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__54353__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__54353__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__54353__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__54353__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__54353__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__54353__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__54353__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__54353__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__54353.cljs$core$IFn$_invoke$arity$1 = G__54353__1;
G__54353.cljs$core$IFn$_invoke$arity$2 = G__54353__2;
G__54353.cljs$core$IFn$_invoke$arity$3 = G__54353__3;
G__54353.cljs$core$IFn$_invoke$arity$4 = G__54353__4;
G__54353.cljs$core$IFn$_invoke$arity$5 = G__54353__5;
G__54353.cljs$core$IFn$_invoke$arity$6 = G__54353__6;
G__54353.cljs$core$IFn$_invoke$arity$7 = G__54353__7;
G__54353.cljs$core$IFn$_invoke$arity$8 = G__54353__8;
G__54353.cljs$core$IFn$_invoke$arity$9 = G__54353__9;
G__54353.cljs$core$IFn$_invoke$arity$10 = G__54353__10;
G__54353.cljs$core$IFn$_invoke$arity$11 = G__54353__11;
G__54353.cljs$core$IFn$_invoke$arity$12 = G__54353__12;
G__54353.cljs$core$IFn$_invoke$arity$13 = G__54353__13;
G__54353.cljs$core$IFn$_invoke$arity$14 = G__54353__14;
G__54353.cljs$core$IFn$_invoke$arity$15 = G__54353__15;
G__54353.cljs$core$IFn$_invoke$arity$16 = G__54353__16;
G__54353.cljs$core$IFn$_invoke$arity$17 = G__54353__17;
G__54353.cljs$core$IFn$_invoke$arity$18 = G__54353__18;
G__54353.cljs$core$IFn$_invoke$arity$19 = G__54353__19;
G__54353.cljs$core$IFn$_invoke$arity$20 = G__54353__20;
G__54353.cljs$core$IFn$_invoke$arity$21 = G__54353__21;
G__54353.cljs$core$IFn$_invoke$arity$22 = G__54353__22;
return G__54353;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args53888){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args53888)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__54121 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__54121) : self__.afn.call(null,G__54121));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__54122 = a;
var G__54123 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__54122,G__54123) : self__.afn.call(null,G__54122,G__54123));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__54124 = a;
var G__54125 = b;
var G__54126 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__54124,G__54125,G__54126) : self__.afn.call(null,G__54124,G__54125,G__54126));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__54127 = a;
var G__54128 = b;
var G__54129 = c;
var G__54130 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__54127,G__54128,G__54129,G__54130) : self__.afn.call(null,G__54127,G__54128,G__54129,G__54130));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__54131 = a;
var G__54132 = b;
var G__54133 = c;
var G__54134 = d;
var G__54135 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__54131,G__54132,G__54133,G__54134,G__54135) : self__.afn.call(null,G__54131,G__54132,G__54133,G__54134,G__54135));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__54136 = a;
var G__54137 = b;
var G__54138 = c;
var G__54139 = d;
var G__54140 = e;
var G__54141 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__54136,G__54137,G__54138,G__54139,G__54140,G__54141) : self__.afn.call(null,G__54136,G__54137,G__54138,G__54139,G__54140,G__54141));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__54142 = a;
var G__54143 = b;
var G__54144 = c;
var G__54145 = d;
var G__54146 = e;
var G__54147 = f;
var G__54148 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__54142,G__54143,G__54144,G__54145,G__54146,G__54147,G__54148) : self__.afn.call(null,G__54142,G__54143,G__54144,G__54145,G__54146,G__54147,G__54148));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__54149 = a;
var G__54150 = b;
var G__54151 = c;
var G__54152 = d;
var G__54153 = e;
var G__54154 = f;
var G__54155 = g;
var G__54156 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__54149,G__54150,G__54151,G__54152,G__54153,G__54154,G__54155,G__54156) : self__.afn.call(null,G__54149,G__54150,G__54151,G__54152,G__54153,G__54154,G__54155,G__54156));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__54157 = a;
var G__54158 = b;
var G__54159 = c;
var G__54160 = d;
var G__54161 = e;
var G__54162 = f;
var G__54163 = g;
var G__54164 = h;
var G__54165 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__54157,G__54158,G__54159,G__54160,G__54161,G__54162,G__54163,G__54164,G__54165) : self__.afn.call(null,G__54157,G__54158,G__54159,G__54160,G__54161,G__54162,G__54163,G__54164,G__54165));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__54166 = a;
var G__54167 = b;
var G__54168 = c;
var G__54169 = d;
var G__54170 = e;
var G__54171 = f;
var G__54172 = g;
var G__54173 = h;
var G__54174 = i;
var G__54175 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__54166,G__54167,G__54168,G__54169,G__54170,G__54171,G__54172,G__54173,G__54174,G__54175) : self__.afn.call(null,G__54166,G__54167,G__54168,G__54169,G__54170,G__54171,G__54172,G__54173,G__54174,G__54175));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__54176 = a;
var G__54177 = b;
var G__54178 = c;
var G__54179 = d;
var G__54180 = e;
var G__54181 = f;
var G__54182 = g;
var G__54183 = h;
var G__54184 = i;
var G__54185 = j;
var G__54186 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__54176,G__54177,G__54178,G__54179,G__54180,G__54181,G__54182,G__54183,G__54184,G__54185,G__54186) : self__.afn.call(null,G__54176,G__54177,G__54178,G__54179,G__54180,G__54181,G__54182,G__54183,G__54184,G__54185,G__54186));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__54187 = a;
var G__54188 = b;
var G__54189 = c;
var G__54190 = d;
var G__54191 = e;
var G__54192 = f;
var G__54193 = g;
var G__54194 = h;
var G__54195 = i;
var G__54196 = j;
var G__54197 = k;
var G__54198 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__54187,G__54188,G__54189,G__54190,G__54191,G__54192,G__54193,G__54194,G__54195,G__54196,G__54197,G__54198) : self__.afn.call(null,G__54187,G__54188,G__54189,G__54190,G__54191,G__54192,G__54193,G__54194,G__54195,G__54196,G__54197,G__54198));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__54199 = a;
var G__54200 = b;
var G__54201 = c;
var G__54202 = d;
var G__54203 = e;
var G__54204 = f;
var G__54205 = g;
var G__54206 = h;
var G__54207 = i;
var G__54208 = j;
var G__54209 = k;
var G__54210 = l;
var G__54211 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__54199,G__54200,G__54201,G__54202,G__54203,G__54204,G__54205,G__54206,G__54207,G__54208,G__54209,G__54210,G__54211) : self__.afn.call(null,G__54199,G__54200,G__54201,G__54202,G__54203,G__54204,G__54205,G__54206,G__54207,G__54208,G__54209,G__54210,G__54211));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__54212 = a;
var G__54213 = b;
var G__54214 = c;
var G__54215 = d;
var G__54216 = e;
var G__54217 = f;
var G__54218 = g;
var G__54219 = h;
var G__54220 = i;
var G__54221 = j;
var G__54222 = k;
var G__54223 = l;
var G__54224 = m;
var G__54225 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__54212,G__54213,G__54214,G__54215,G__54216,G__54217,G__54218,G__54219,G__54220,G__54221,G__54222,G__54223,G__54224,G__54225) : self__.afn.call(null,G__54212,G__54213,G__54214,G__54215,G__54216,G__54217,G__54218,G__54219,G__54220,G__54221,G__54222,G__54223,G__54224,G__54225));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__54226 = a;
var G__54227 = b;
var G__54228 = c;
var G__54229 = d;
var G__54230 = e;
var G__54231 = f;
var G__54232 = g;
var G__54233 = h;
var G__54234 = i;
var G__54235 = j;
var G__54236 = k;
var G__54237 = l;
var G__54238 = m;
var G__54239 = n;
var G__54240 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__54226,G__54227,G__54228,G__54229,G__54230,G__54231,G__54232,G__54233,G__54234,G__54235,G__54236,G__54237,G__54238,G__54239,G__54240) : self__.afn.call(null,G__54226,G__54227,G__54228,G__54229,G__54230,G__54231,G__54232,G__54233,G__54234,G__54235,G__54236,G__54237,G__54238,G__54239,G__54240));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__54241 = a;
var G__54242 = b;
var G__54243 = c;
var G__54244 = d;
var G__54245 = e;
var G__54246 = f;
var G__54247 = g;
var G__54248 = h;
var G__54249 = i;
var G__54250 = j;
var G__54251 = k;
var G__54252 = l;
var G__54253 = m;
var G__54254 = n;
var G__54255 = o;
var G__54256 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__54241,G__54242,G__54243,G__54244,G__54245,G__54246,G__54247,G__54248,G__54249,G__54250,G__54251,G__54252,G__54253,G__54254,G__54255,G__54256) : self__.afn.call(null,G__54241,G__54242,G__54243,G__54244,G__54245,G__54246,G__54247,G__54248,G__54249,G__54250,G__54251,G__54252,G__54253,G__54254,G__54255,G__54256));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__54257 = a;
var G__54258 = b;
var G__54259 = c;
var G__54260 = d;
var G__54261 = e;
var G__54262 = f;
var G__54263 = g;
var G__54264 = h;
var G__54265 = i;
var G__54266 = j;
var G__54267 = k;
var G__54268 = l;
var G__54269 = m;
var G__54270 = n;
var G__54271 = o;
var G__54272 = p;
var G__54273 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__54257,G__54258,G__54259,G__54260,G__54261,G__54262,G__54263,G__54264,G__54265,G__54266,G__54267,G__54268,G__54269,G__54270,G__54271,G__54272,G__54273) : self__.afn.call(null,G__54257,G__54258,G__54259,G__54260,G__54261,G__54262,G__54263,G__54264,G__54265,G__54266,G__54267,G__54268,G__54269,G__54270,G__54271,G__54272,G__54273));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__54274 = a;
var G__54275 = b;
var G__54276 = c;
var G__54277 = d;
var G__54278 = e;
var G__54279 = f;
var G__54280 = g;
var G__54281 = h;
var G__54282 = i;
var G__54283 = j;
var G__54284 = k;
var G__54285 = l;
var G__54286 = m;
var G__54287 = n;
var G__54288 = o;
var G__54289 = p;
var G__54290 = q;
var G__54291 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__54274,G__54275,G__54276,G__54277,G__54278,G__54279,G__54280,G__54281,G__54282,G__54283,G__54284,G__54285,G__54286,G__54287,G__54288,G__54289,G__54290,G__54291) : self__.afn.call(null,G__54274,G__54275,G__54276,G__54277,G__54278,G__54279,G__54280,G__54281,G__54282,G__54283,G__54284,G__54285,G__54286,G__54287,G__54288,G__54289,G__54290,G__54291));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__54292 = a;
var G__54293 = b;
var G__54294 = c;
var G__54295 = d;
var G__54296 = e;
var G__54297 = f;
var G__54298 = g;
var G__54299 = h;
var G__54300 = i;
var G__54301 = j;
var G__54302 = k;
var G__54303 = l;
var G__54304 = m;
var G__54305 = n;
var G__54306 = o;
var G__54307 = p;
var G__54308 = q;
var G__54309 = r;
var G__54310 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__54292,G__54293,G__54294,G__54295,G__54296,G__54297,G__54298,G__54299,G__54300,G__54301,G__54302,G__54303,G__54304,G__54305,G__54306,G__54307,G__54308,G__54309,G__54310) : self__.afn.call(null,G__54292,G__54293,G__54294,G__54295,G__54296,G__54297,G__54298,G__54299,G__54300,G__54301,G__54302,G__54303,G__54304,G__54305,G__54306,G__54307,G__54308,G__54309,G__54310));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__54311 = a;
var G__54312 = b;
var G__54313 = c;
var G__54314 = d;
var G__54315 = e;
var G__54316 = f;
var G__54317 = g;
var G__54318 = h;
var G__54319 = i;
var G__54320 = j;
var G__54321 = k;
var G__54322 = l;
var G__54323 = m;
var G__54324 = n;
var G__54325 = o;
var G__54326 = p;
var G__54327 = q;
var G__54328 = r;
var G__54329 = s;
var G__54330 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__54311,G__54312,G__54313,G__54314,G__54315,G__54316,G__54317,G__54318,G__54319,G__54320,G__54321,G__54322,G__54323,G__54324,G__54325,G__54326,G__54327,G__54328,G__54329,G__54330) : self__.afn.call(null,G__54311,G__54312,G__54313,G__54314,G__54315,G__54316,G__54317,G__54318,G__54319,G__54320,G__54321,G__54322,G__54323,G__54324,G__54325,G__54326,G__54327,G__54328,G__54329,G__54330));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__54331 = self__.afn;
var G__54332 = a;
var G__54333 = b;
var G__54334 = c;
var G__54335 = d;
var G__54336 = e;
var G__54337 = f;
var G__54338 = g;
var G__54339 = h;
var G__54340 = i;
var G__54341 = j;
var G__54342 = k;
var G__54343 = l;
var G__54344 = m;
var G__54345 = n;
var G__54346 = o;
var G__54347 = p;
var G__54348 = q;
var G__54349 = r;
var G__54350 = s;
var G__54351 = t;
var G__54352 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__54331,G__54332,G__54333,G__54334,G__54335,G__54336,G__54337,G__54338,G__54339,G__54340,G__54341,G__54342,G__54343,G__54344,G__54345,G__54346,G__54347,G__54348,G__54349,G__54350,G__54351,G__54352) : cljs.core.apply.call(null,G__54331,G__54332,G__54333,G__54334,G__54335,G__54336,G__54337,G__54338,G__54339,G__54340,G__54341,G__54342,G__54343,G__54344,G__54345,G__54346,G__54347,G__54348,G__54349,G__54350,G__54351,G__54352));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__54357 = o;
if(G__54357){
var bit__4424__auto__ = (G__54357.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4424__auto__) || (G__54357.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__54357.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__54357);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__54357);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3731__auto__ = !((o == null));
if(and__3731__auto__){
var G__54361 = o;
if(G__54361){
var bit__4424__auto__ = (G__54361.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4424__auto__) || (G__54361.cljs$core$IMeta$)){
return true;
} else {
if((!G__54361.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__54361);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__54361);
}
} else {
return and__3731__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__54364__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__54365 = ret;
var G__54366 = cljs.core.first(ks);
var G__54367 = cljs.core.next(ks);
coll = G__54365;
k = G__54366;
ks = G__54367;
continue;
} else {
return ret;
}
}
break;
}
};
var G__54364 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__54368__i = 0, G__54368__a = new Array(arguments.length -  2);
while (G__54368__i < G__54368__a.length) {G__54368__a[G__54368__i] = arguments[G__54368__i + 2]; ++G__54368__i;}
  ks = new cljs.core.IndexedSeq(G__54368__a,0);
} 
return G__54364__delegate.call(this,coll,k,ks);};
G__54364.cljs$lang$maxFixedArity = 2;
G__54364.cljs$lang$applyTo = (function (arglist__54369){
var coll = cljs.core.first(arglist__54369);
arglist__54369 = cljs.core.next(arglist__54369);
var k = cljs.core.first(arglist__54369);
var ks = cljs.core.rest(arglist__54369);
return G__54364__delegate(coll,k,ks);
});
G__54364.cljs$core$IFn$_invoke$arity$variadic = G__54364__delegate;
return G__54364;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__54370 = null;
if (arguments.length > 2) {
var G__54371__i = 0, G__54371__a = new Array(arguments.length -  2);
while (G__54371__i < G__54371__a.length) {G__54371__a[G__54371__i] = arguments[G__54371__i + 2]; ++G__54371__i;}
G__54370 = new cljs.core.IndexedSeq(G__54371__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__54370);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__54373 = x;
if(G__54373){
var bit__4424__auto__ = (G__54373.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4424__auto__) || (G__54373.cljs$core$ICollection$)){
return true;
} else {
if((!G__54373.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__54373);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__54373);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__54375 = x;
if(G__54375){
var bit__4424__auto__ = (G__54375.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4424__auto__) || (G__54375.cljs$core$ISet$)){
return true;
} else {
if((!G__54375.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__54375);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__54375);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__54377 = x;
if(G__54377){
var bit__4424__auto__ = (G__54377.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4424__auto__) || (G__54377.cljs$core$IAssociative$)){
return true;
} else {
if((!G__54377.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__54377);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__54377);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__54379 = x;
if(G__54379){
var bit__4424__auto__ = (G__54379.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4424__auto__) || (G__54379.cljs$core$ISequential$)){
return true;
} else {
if((!G__54379.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__54379);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__54379);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__54381 = x;
if(G__54381){
var bit__4424__auto__ = (G__54381.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4424__auto__) || (G__54381.cljs$core$ISorted$)){
return true;
} else {
if((!G__54381.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__54381);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__54381);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__54383 = x;
if(G__54383){
var bit__4424__auto__ = (G__54383.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4424__auto__) || (G__54383.cljs$core$IReduce$)){
return true;
} else {
if((!G__54383.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__54383);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__54383);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__54385 = x;
if(G__54385){
var bit__4424__auto__ = (G__54385.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4424__auto__) || (G__54385.cljs$core$IMap$)){
return true;
} else {
if((!G__54385.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__54385);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__54385);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__54387 = x;
if(G__54387){
var bit__4424__auto__ = (G__54387.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4424__auto__) || (G__54387.cljs$core$IVector$)){
return true;
} else {
if((!G__54387.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__54387);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__54387);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__54389 = x;
if(G__54389){
var bit__4417__auto__ = (G__54389.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4417__auto__) || (G__54389.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj54395 = {};
return obj54395;
});
var js_obj__1 = (function() { 
var G__54398__delegate = function (keyvals){
var G__54396 = goog.object.create;
var G__54397 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__54396,G__54397) : cljs.core.apply.call(null,G__54396,G__54397));
};
var G__54398 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__54399__i = 0, G__54399__a = new Array(arguments.length -  0);
while (G__54399__i < G__54399__a.length) {G__54399__a[G__54399__i] = arguments[G__54399__i + 0]; ++G__54399__i;}
  keyvals = new cljs.core.IndexedSeq(G__54399__a,0);
} 
return G__54398__delegate.call(this,keyvals);};
G__54398.cljs$lang$maxFixedArity = 0;
G__54398.cljs$lang$applyTo = (function (arglist__54400){
var keyvals = cljs.core.seq(arglist__54400);
return G__54398__delegate(keyvals);
});
G__54398.cljs$core$IFn$_invoke$arity$variadic = G__54398__delegate;
return G__54398;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__54401 = null;
if (arguments.length > 0) {
var G__54402__i = 0, G__54402__a = new Array(arguments.length -  0);
while (G__54402__i < G__54402__a.length) {G__54402__a[G__54402__i] = arguments[G__54402__i + 0]; ++G__54402__i;}
G__54401 = new cljs.core.IndexedSeq(G__54402__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__54401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__54405_54407 = obj;
var G__54406_54408 = ((function (G__54405_54407,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__54405_54407,keys))
;
goog.object.forEach(G__54405_54407,G__54406_54408);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__54409 = (i__$1 + (1));
var G__54410 = (j__$1 + (1));
var G__54411 = (len__$1 - (1));
i__$1 = G__54409;
j__$1 = G__54410;
len__$1 = G__54411;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__54412 = (i__$1 - (1));
var G__54413 = (j__$1 - (1));
var G__54414 = (len__$1 - (1));
i__$1 = G__54412;
j__$1 = G__54413;
len__$1 = G__54414;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj54416 = {};
return obj54416;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__54418 = s;
if(G__54418){
var bit__4424__auto__ = (G__54418.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4424__auto__) || (G__54418.cljs$core$ISeq$)){
return true;
} else {
if((!G__54418.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__54418);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__54418);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__54420 = s;
if(G__54420){
var bit__4424__auto__ = (G__54420.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4424__auto__) || (G__54420.cljs$core$ISeqable$)){
return true;
} else {
if((!G__54420.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__54420);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__54420);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3743__auto__ = cljs.core.fn_QMARK_(f);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var G__54424 = f;
if(G__54424){
var bit__4424__auto__ = (G__54424.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4424__auto__) || (G__54424.cljs$core$IFn$)){
return true;
} else {
if((!G__54424.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__54424);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__54424);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__54437 = n;
return isNaN(G__54437);
})())) && (!((n === Infinity))) && (((function (){var G__54438 = n;
return parseFloat(G__54438);
})() === (function (){var G__54439 = n;
var G__54440 = (10);
return parseInt(G__54439,G__54440);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__54441__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__54442 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__54443 = etc;
s = G__54442;
xs = G__54443;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__54441 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54444__i = 0, G__54444__a = new Array(arguments.length -  2);
while (G__54444__i < G__54444__a.length) {G__54444__a[G__54444__i] = arguments[G__54444__i + 2]; ++G__54444__i;}
  more = new cljs.core.IndexedSeq(G__54444__a,0);
} 
return G__54441__delegate.call(this,x,y,more);};
G__54441.cljs$lang$maxFixedArity = 2;
G__54441.cljs$lang$applyTo = (function (arglist__54445){
var x = cljs.core.first(arglist__54445);
arglist__54445 = cljs.core.next(arglist__54445);
var y = cljs.core.first(arglist__54445);
var more = cljs.core.rest(arglist__54445);
return G__54441__delegate(x,y,more);
});
G__54441.cljs$core$IFn$_invoke$arity$variadic = G__54441__delegate;
return G__54441;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__54446 = null;
if (arguments.length > 2) {
var G__54447__i = 0, G__54447__a = new Array(arguments.length -  2);
while (G__54447__i < G__54447__a.length) {G__54447__a[G__54447__i] = arguments[G__54447__i + 2]; ++G__54447__i;}
G__54446 = new cljs.core.IndexedSeq(G__54447__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54446);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__54451 = x;
if(G__54451){
var bit__4417__auto__ = (G__54451.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4417__auto__) || (G__54451.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__54452 = x;
var G__54453 = y;
return goog.array.defaultCompare(G__54452,G__54453);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__54458 = xs;
var G__54459 = ys;
var G__54460 = len;
var G__54461 = (n + (1));
xs = G__54458;
ys = G__54459;
len = G__54460;
n = G__54461;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__54466 = x;
var G__54467 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__54466,G__54467) : f.call(null,G__54466,G__54467));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__54468 = y;
var G__54469 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__54468,G__54469) : f.call(null,G__54468,G__54469));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__54475 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__54475) : cljs.core.to_array.call(null,G__54475));
})();
var G__54476_54478 = a;
var G__54477_54479 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__54476_54478,G__54477_54479);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__54485 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__54485) : keyfn.call(null,G__54485));
})(),(function (){var G__54486 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__54486) : keyfn.call(null,G__54486));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__54492 = f;
var G__54493 = cljs.core.first(s);
var G__54494 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__54492,G__54493,G__54494) : cljs.core.reduce.call(null,G__54492,G__54493,G__54494));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__54495 = val__$1;
var G__54496 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__54495,G__54496) : f.call(null,G__54495,G__54496));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__54497 = nval;
var G__54498 = cljs.core.next(coll__$1);
val__$1 = G__54497;
coll__$1 = G__54498;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__54502 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__54502) : cljs.core.to_array.call(null,G__54502));
})();
var G__54503_54505 = a;
goog.array.shuffle(G__54503_54505);

var G__54504 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__54504) : cljs.core.vec.call(null,G__54504));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__54508 = coll;
if(G__54508){
var bit__4417__auto__ = (G__54508.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4417__auto__) || (G__54508.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__54509 = coll;
if(G__54509){
var bit__4417__auto__ = (G__54509.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4417__auto__) || (G__54509.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__54518 = null;
var G__54518__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__54518__1 = (function (x){
var G__54515 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__54515) : cf.call(null,G__54515));
});
var G__54518__2 = (function (x,y){
var G__54516 = x;
var G__54517 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__54516,G__54517) : f.call(null,G__54516,G__54517));
});
G__54518 = function(x,y){
switch(arguments.length){
case 0:
return G__54518__0.call(this);
case 1:
return G__54518__1.call(this,x);
case 2:
return G__54518__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__54518.cljs$core$IFn$_invoke$arity$0 = G__54518__0;
G__54518.cljs$core$IFn$_invoke$arity$1 = G__54518__1;
G__54518.cljs$core$IFn$_invoke$arity$2 = G__54518__2;
return G__54518;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__54525 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__54525) : xform.call(null,G__54525));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__54526 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__54526) : f__$1.call(null,G__54526));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__54527__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__54527 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54528__i = 0, G__54528__a = new Array(arguments.length -  2);
while (G__54528__i < G__54528__a.length) {G__54528__a[G__54528__i] = arguments[G__54528__i + 2]; ++G__54528__i;}
  more = new cljs.core.IndexedSeq(G__54528__a,0);
} 
return G__54527__delegate.call(this,x,y,more);};
G__54527.cljs$lang$maxFixedArity = 2;
G__54527.cljs$lang$applyTo = (function (arglist__54529){
var x = cljs.core.first(arglist__54529);
arglist__54529 = cljs.core.next(arglist__54529);
var y = cljs.core.first(arglist__54529);
var more = cljs.core.rest(arglist__54529);
return G__54527__delegate(x,y,more);
});
G__54527.cljs$core$IFn$_invoke$arity$variadic = G__54527__delegate;
return G__54527;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__54530 = null;
if (arguments.length > 2) {
var G__54531__i = 0, G__54531__a = new Array(arguments.length -  2);
while (G__54531__i < G__54531__a.length) {G__54531__a[G__54531__i] = arguments[G__54531__i + 2]; ++G__54531__i;}
G__54530 = new cljs.core.IndexedSeq(G__54531__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__54532__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__54532 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54533__i = 0, G__54533__a = new Array(arguments.length -  2);
while (G__54533__i < G__54533__a.length) {G__54533__a[G__54533__i] = arguments[G__54533__i + 2]; ++G__54533__i;}
  more = new cljs.core.IndexedSeq(G__54533__a,0);
} 
return G__54532__delegate.call(this,x,y,more);};
G__54532.cljs$lang$maxFixedArity = 2;
G__54532.cljs$lang$applyTo = (function (arglist__54534){
var x = cljs.core.first(arglist__54534);
arglist__54534 = cljs.core.next(arglist__54534);
var y = cljs.core.first(arglist__54534);
var more = cljs.core.rest(arglist__54534);
return G__54532__delegate(x,y,more);
});
G__54532.cljs$core$IFn$_invoke$arity$variadic = G__54532__delegate;
return G__54532;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__54535 = null;
if (arguments.length > 2) {
var G__54536__i = 0, G__54536__a = new Array(arguments.length -  2);
while (G__54536__i < G__54536__a.length) {G__54536__a[G__54536__i] = arguments[G__54536__i + 2]; ++G__54536__i;}
G__54535 = new cljs.core.IndexedSeq(G__54536__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__54537__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__54537 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54538__i = 0, G__54538__a = new Array(arguments.length -  2);
while (G__54538__i < G__54538__a.length) {G__54538__a[G__54538__i] = arguments[G__54538__i + 2]; ++G__54538__i;}
  more = new cljs.core.IndexedSeq(G__54538__a,0);
} 
return G__54537__delegate.call(this,x,y,more);};
G__54537.cljs$lang$maxFixedArity = 2;
G__54537.cljs$lang$applyTo = (function (arglist__54539){
var x = cljs.core.first(arglist__54539);
arglist__54539 = cljs.core.next(arglist__54539);
var y = cljs.core.first(arglist__54539);
var more = cljs.core.rest(arglist__54539);
return G__54537__delegate(x,y,more);
});
G__54537.cljs$core$IFn$_invoke$arity$variadic = G__54537__delegate;
return G__54537;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__54540 = null;
if (arguments.length > 2) {
var G__54541__i = 0, G__54541__a = new Array(arguments.length -  2);
while (G__54541__i < G__54541__a.length) {G__54541__a[G__54541__i] = arguments[G__54541__i + 2]; ++G__54541__i;}
G__54540 = new cljs.core.IndexedSeq(G__54541__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54540);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__54546__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__54546 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54547__i = 0, G__54547__a = new Array(arguments.length -  2);
while (G__54547__i < G__54547__a.length) {G__54547__a[G__54547__i] = arguments[G__54547__i + 2]; ++G__54547__i;}
  more = new cljs.core.IndexedSeq(G__54547__a,0);
} 
return G__54546__delegate.call(this,x,y,more);};
G__54546.cljs$lang$maxFixedArity = 2;
G__54546.cljs$lang$applyTo = (function (arglist__54548){
var x = cljs.core.first(arglist__54548);
arglist__54548 = cljs.core.next(arglist__54548);
var y = cljs.core.first(arglist__54548);
var more = cljs.core.rest(arglist__54548);
return G__54546__delegate(x,y,more);
});
G__54546.cljs$core$IFn$_invoke$arity$variadic = G__54546__delegate;
return G__54546;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__54549 = null;
if (arguments.length > 2) {
var G__54550__i = 0, G__54550__a = new Array(arguments.length -  2);
while (G__54550__i < G__54550__a.length) {G__54550__a[G__54550__i] = arguments[G__54550__i + 2]; ++G__54550__i;}
G__54549 = new cljs.core.IndexedSeq(G__54550__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54549);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__54551__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__54552 = y;
var G__54553 = cljs.core.first(more);
var G__54554 = cljs.core.next(more);
x = G__54552;
y = G__54553;
more = G__54554;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__54551 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54555__i = 0, G__54555__a = new Array(arguments.length -  2);
while (G__54555__i < G__54555__a.length) {G__54555__a[G__54555__i] = arguments[G__54555__i + 2]; ++G__54555__i;}
  more = new cljs.core.IndexedSeq(G__54555__a,0);
} 
return G__54551__delegate.call(this,x,y,more);};
G__54551.cljs$lang$maxFixedArity = 2;
G__54551.cljs$lang$applyTo = (function (arglist__54556){
var x = cljs.core.first(arglist__54556);
arglist__54556 = cljs.core.next(arglist__54556);
var y = cljs.core.first(arglist__54556);
var more = cljs.core.rest(arglist__54556);
return G__54551__delegate(x,y,more);
});
G__54551.cljs$core$IFn$_invoke$arity$variadic = G__54551__delegate;
return G__54551;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__54557 = null;
if (arguments.length > 2) {
var G__54558__i = 0, G__54558__a = new Array(arguments.length -  2);
while (G__54558__i < G__54558__a.length) {G__54558__a[G__54558__i] = arguments[G__54558__i + 2]; ++G__54558__i;}
G__54557 = new cljs.core.IndexedSeq(G__54558__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__54559__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__54560 = y;
var G__54561 = cljs.core.first(more);
var G__54562 = cljs.core.next(more);
x = G__54560;
y = G__54561;
more = G__54562;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__54559 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54563__i = 0, G__54563__a = new Array(arguments.length -  2);
while (G__54563__i < G__54563__a.length) {G__54563__a[G__54563__i] = arguments[G__54563__i + 2]; ++G__54563__i;}
  more = new cljs.core.IndexedSeq(G__54563__a,0);
} 
return G__54559__delegate.call(this,x,y,more);};
G__54559.cljs$lang$maxFixedArity = 2;
G__54559.cljs$lang$applyTo = (function (arglist__54564){
var x = cljs.core.first(arglist__54564);
arglist__54564 = cljs.core.next(arglist__54564);
var y = cljs.core.first(arglist__54564);
var more = cljs.core.rest(arglist__54564);
return G__54559__delegate(x,y,more);
});
G__54559.cljs$core$IFn$_invoke$arity$variadic = G__54559__delegate;
return G__54559;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__54565 = null;
if (arguments.length > 2) {
var G__54566__i = 0, G__54566__a = new Array(arguments.length -  2);
while (G__54566__i < G__54566__a.length) {G__54566__a[G__54566__i] = arguments[G__54566__i + 2]; ++G__54566__i;}
G__54565 = new cljs.core.IndexedSeq(G__54566__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__54567__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__54568 = y;
var G__54569 = cljs.core.first(more);
var G__54570 = cljs.core.next(more);
x = G__54568;
y = G__54569;
more = G__54570;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__54567 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54571__i = 0, G__54571__a = new Array(arguments.length -  2);
while (G__54571__i < G__54571__a.length) {G__54571__a[G__54571__i] = arguments[G__54571__i + 2]; ++G__54571__i;}
  more = new cljs.core.IndexedSeq(G__54571__a,0);
} 
return G__54567__delegate.call(this,x,y,more);};
G__54567.cljs$lang$maxFixedArity = 2;
G__54567.cljs$lang$applyTo = (function (arglist__54572){
var x = cljs.core.first(arglist__54572);
arglist__54572 = cljs.core.next(arglist__54572);
var y = cljs.core.first(arglist__54572);
var more = cljs.core.rest(arglist__54572);
return G__54567__delegate(x,y,more);
});
G__54567.cljs$core$IFn$_invoke$arity$variadic = G__54567__delegate;
return G__54567;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__54573 = null;
if (arguments.length > 2) {
var G__54574__i = 0, G__54574__a = new Array(arguments.length -  2);
while (G__54574__i < G__54574__a.length) {G__54574__a[G__54574__i] = arguments[G__54574__i + 2]; ++G__54574__i;}
G__54573 = new cljs.core.IndexedSeq(G__54574__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__54575__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__54576 = y;
var G__54577 = cljs.core.first(more);
var G__54578 = cljs.core.next(more);
x = G__54576;
y = G__54577;
more = G__54578;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__54575 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54579__i = 0, G__54579__a = new Array(arguments.length -  2);
while (G__54579__i < G__54579__a.length) {G__54579__a[G__54579__i] = arguments[G__54579__i + 2]; ++G__54579__i;}
  more = new cljs.core.IndexedSeq(G__54579__a,0);
} 
return G__54575__delegate.call(this,x,y,more);};
G__54575.cljs$lang$maxFixedArity = 2;
G__54575.cljs$lang$applyTo = (function (arglist__54580){
var x = cljs.core.first(arglist__54580);
arglist__54580 = cljs.core.next(arglist__54580);
var y = cljs.core.first(arglist__54580);
var more = cljs.core.rest(arglist__54580);
return G__54575__delegate(x,y,more);
});
G__54575.cljs$core$IFn$_invoke$arity$variadic = G__54575__delegate;
return G__54575;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__54581 = null;
if (arguments.length > 2) {
var G__54582__i = 0, G__54582__a = new Array(arguments.length -  2);
while (G__54582__i < G__54582__a.length) {G__54582__a[G__54582__i] = arguments[G__54582__i + 2]; ++G__54582__i;}
G__54581 = new cljs.core.IndexedSeq(G__54582__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54581);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4060__auto__ = x;
var y__4061__auto__ = y;
return ((x__4060__auto__ > y__4061__auto__) ? x__4060__auto__ : y__4061__auto__);
});
var max__3 = (function() { 
var G__54583__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4060__auto__ = x;
var y__4061__auto__ = y;
return ((x__4060__auto__ > y__4061__auto__) ? x__4060__auto__ : y__4061__auto__);
})(),more);
};
var G__54583 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54584__i = 0, G__54584__a = new Array(arguments.length -  2);
while (G__54584__i < G__54584__a.length) {G__54584__a[G__54584__i] = arguments[G__54584__i + 2]; ++G__54584__i;}
  more = new cljs.core.IndexedSeq(G__54584__a,0);
} 
return G__54583__delegate.call(this,x,y,more);};
G__54583.cljs$lang$maxFixedArity = 2;
G__54583.cljs$lang$applyTo = (function (arglist__54585){
var x = cljs.core.first(arglist__54585);
arglist__54585 = cljs.core.next(arglist__54585);
var y = cljs.core.first(arglist__54585);
var more = cljs.core.rest(arglist__54585);
return G__54583__delegate(x,y,more);
});
G__54583.cljs$core$IFn$_invoke$arity$variadic = G__54583__delegate;
return G__54583;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__54586 = null;
if (arguments.length > 2) {
var G__54587__i = 0, G__54587__a = new Array(arguments.length -  2);
while (G__54587__i < G__54587__a.length) {G__54587__a[G__54587__i] = arguments[G__54587__i + 2]; ++G__54587__i;}
G__54586 = new cljs.core.IndexedSeq(G__54587__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54586);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4067__auto__ = x;
var y__4068__auto__ = y;
return ((x__4067__auto__ < y__4068__auto__) ? x__4067__auto__ : y__4068__auto__);
});
var min__3 = (function() { 
var G__54588__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4067__auto__ = x;
var y__4068__auto__ = y;
return ((x__4067__auto__ < y__4068__auto__) ? x__4067__auto__ : y__4068__auto__);
})(),more);
};
var G__54588 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54589__i = 0, G__54589__a = new Array(arguments.length -  2);
while (G__54589__i < G__54589__a.length) {G__54589__a[G__54589__i] = arguments[G__54589__i + 2]; ++G__54589__i;}
  more = new cljs.core.IndexedSeq(G__54589__a,0);
} 
return G__54588__delegate.call(this,x,y,more);};
G__54588.cljs$lang$maxFixedArity = 2;
G__54588.cljs$lang$applyTo = (function (arglist__54590){
var x = cljs.core.first(arglist__54590);
arglist__54590 = cljs.core.next(arglist__54590);
var y = cljs.core.first(arglist__54590);
var more = cljs.core.rest(arglist__54590);
return G__54588__delegate(x,y,more);
});
G__54588.cljs$core$IFn$_invoke$arity$variadic = G__54588__delegate;
return G__54588;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__54591 = null;
if (arguments.length > 2) {
var G__54592__i = 0, G__54592__a = new Array(arguments.length -  2);
while (G__54592__i < G__54592__a.length) {G__54592__a[G__54592__i] = arguments[G__54592__i + 2]; ++G__54592__i;}
G__54591 = new cljs.core.IndexedSeq(G__54592__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__54593__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__54593 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54594__i = 0, G__54594__a = new Array(arguments.length -  2);
while (G__54594__i < G__54594__a.length) {G__54594__a[G__54594__i] = arguments[G__54594__i + 2]; ++G__54594__i;}
  more = new cljs.core.IndexedSeq(G__54594__a,0);
} 
return G__54593__delegate.call(this,x,y,more);};
G__54593.cljs$lang$maxFixedArity = 2;
G__54593.cljs$lang$applyTo = (function (arglist__54595){
var x = cljs.core.first(arglist__54595);
arglist__54595 = cljs.core.next(arglist__54595);
var y = cljs.core.first(arglist__54595);
var more = cljs.core.rest(arglist__54595);
return G__54593__delegate(x,y,more);
});
G__54593.cljs$core$IFn$_invoke$arity$variadic = G__54593__delegate;
return G__54593;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__54596 = null;
if (arguments.length > 2) {
var G__54597__i = 0, G__54597__a = new Array(arguments.length -  2);
while (G__54597__i < G__54597__a.length) {G__54597__a[G__54597__i] = arguments[G__54597__i + 2]; ++G__54597__i;}
G__54596 = new cljs.core.IndexedSeq(G__54597__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__54598__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__54598 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54599__i = 0, G__54599__a = new Array(arguments.length -  2);
while (G__54599__i < G__54599__a.length) {G__54599__a[G__54599__i] = arguments[G__54599__i + 2]; ++G__54599__i;}
  more = new cljs.core.IndexedSeq(G__54599__a,0);
} 
return G__54598__delegate.call(this,x,y,more);};
G__54598.cljs$lang$maxFixedArity = 2;
G__54598.cljs$lang$applyTo = (function (arglist__54600){
var x = cljs.core.first(arglist__54600);
arglist__54600 = cljs.core.next(arglist__54600);
var y = cljs.core.first(arglist__54600);
var more = cljs.core.rest(arglist__54600);
return G__54598__delegate(x,y,more);
});
G__54598.cljs$core$IFn$_invoke$arity$variadic = G__54598__delegate;
return G__54598;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__54601 = null;
if (arguments.length > 2) {
var G__54602__i = 0, G__54602__a = new Array(arguments.length -  2);
while (G__54602__i < G__54602__a.length) {G__54602__a[G__54602__i] = arguments[G__54602__i + 2]; ++G__54602__i;}
G__54601 = new cljs.core.IndexedSeq(G__54602__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54601);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__54607__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__54607 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54608__i = 0, G__54608__a = new Array(arguments.length -  2);
while (G__54608__i < G__54608__a.length) {G__54608__a[G__54608__i] = arguments[G__54608__i + 2]; ++G__54608__i;}
  more = new cljs.core.IndexedSeq(G__54608__a,0);
} 
return G__54607__delegate.call(this,x,y,more);};
G__54607.cljs$lang$maxFixedArity = 2;
G__54607.cljs$lang$applyTo = (function (arglist__54609){
var x = cljs.core.first(arglist__54609);
arglist__54609 = cljs.core.next(arglist__54609);
var y = cljs.core.first(arglist__54609);
var more = cljs.core.rest(arglist__54609);
return G__54607__delegate(x,y,more);
});
G__54607.cljs$core$IFn$_invoke$arity$variadic = G__54607__delegate;
return G__54607;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__54610 = null;
if (arguments.length > 2) {
var G__54611__i = 0, G__54611__a = new Array(arguments.length -  2);
while (G__54611__i < G__54611__a.length) {G__54611__a[G__54611__i] = arguments[G__54611__i + 2]; ++G__54611__i;}
G__54610 = new cljs.core.IndexedSeq(G__54611__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54610);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__54612__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__54612 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54613__i = 0, G__54613__a = new Array(arguments.length -  2);
while (G__54613__i < G__54613__a.length) {G__54613__a[G__54613__i] = arguments[G__54613__i + 2]; ++G__54613__i;}
  more = new cljs.core.IndexedSeq(G__54613__a,0);
} 
return G__54612__delegate.call(this,x,y,more);};
G__54612.cljs$lang$maxFixedArity = 2;
G__54612.cljs$lang$applyTo = (function (arglist__54614){
var x = cljs.core.first(arglist__54614);
arglist__54614 = cljs.core.next(arglist__54614);
var y = cljs.core.first(arglist__54614);
var more = cljs.core.rest(arglist__54614);
return G__54612__delegate(x,y,more);
});
G__54612.cljs$core$IFn$_invoke$arity$variadic = G__54612__delegate;
return G__54612;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__54615 = null;
if (arguments.length > 2) {
var G__54616__i = 0, G__54616__a = new Array(arguments.length -  2);
while (G__54616__i < G__54616__a.length) {G__54616__a[G__54616__i] = arguments[G__54616__i + 2]; ++G__54616__i;}
G__54615 = new cljs.core.IndexedSeq(G__54616__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54615);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__54617__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__54617 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54618__i = 0, G__54618__a = new Array(arguments.length -  2);
while (G__54618__i < G__54618__a.length) {G__54618__a[G__54618__i] = arguments[G__54618__i + 2]; ++G__54618__i;}
  more = new cljs.core.IndexedSeq(G__54618__a,0);
} 
return G__54617__delegate.call(this,x,y,more);};
G__54617.cljs$lang$maxFixedArity = 2;
G__54617.cljs$lang$applyTo = (function (arglist__54619){
var x = cljs.core.first(arglist__54619);
arglist__54619 = cljs.core.next(arglist__54619);
var y = cljs.core.first(arglist__54619);
var more = cljs.core.rest(arglist__54619);
return G__54617__delegate(x,y,more);
});
G__54617.cljs$core$IFn$_invoke$arity$variadic = G__54617__delegate;
return G__54617;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__54620 = null;
if (arguments.length > 2) {
var G__54621__i = 0, G__54621__a = new Array(arguments.length -  2);
while (G__54621__i < G__54621__a.length) {G__54621__a[G__54621__i] = arguments[G__54621__i + 2]; ++G__54621__i;}
G__54620 = new cljs.core.IndexedSeq(G__54621__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54620);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__54624 = x;
var G__54625 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__54624,G__54625) : cljs.core.mod.call(null,G__54624,G__54625));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__54626__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__54626 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54627__i = 0, G__54627__a = new Array(arguments.length -  2);
while (G__54627__i < G__54627__a.length) {G__54627__a[G__54627__i] = arguments[G__54627__i + 2]; ++G__54627__i;}
  more = new cljs.core.IndexedSeq(G__54627__a,0);
} 
return G__54626__delegate.call(this,x,y,more);};
G__54626.cljs$lang$maxFixedArity = 2;
G__54626.cljs$lang$applyTo = (function (arglist__54628){
var x = cljs.core.first(arglist__54628);
arglist__54628 = cljs.core.next(arglist__54628);
var y = cljs.core.first(arglist__54628);
var more = cljs.core.rest(arglist__54628);
return G__54626__delegate(x,y,more);
});
G__54626.cljs$core$IFn$_invoke$arity$variadic = G__54626__delegate;
return G__54626;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__54629 = null;
if (arguments.length > 2) {
var G__54630__i = 0, G__54630__a = new Array(arguments.length -  2);
while (G__54630__i < G__54630__a.length) {G__54630__a[G__54630__i] = arguments[G__54630__i + 2]; ++G__54630__i;}
G__54629 = new cljs.core.IndexedSeq(G__54630__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__54631__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__54631 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54632__i = 0, G__54632__a = new Array(arguments.length -  2);
while (G__54632__i < G__54632__a.length) {G__54632__a[G__54632__i] = arguments[G__54632__i + 2]; ++G__54632__i;}
  more = new cljs.core.IndexedSeq(G__54632__a,0);
} 
return G__54631__delegate.call(this,x,y,more);};
G__54631.cljs$lang$maxFixedArity = 2;
G__54631.cljs$lang$applyTo = (function (arglist__54633){
var x = cljs.core.first(arglist__54633);
arglist__54633 = cljs.core.next(arglist__54633);
var y = cljs.core.first(arglist__54633);
var more = cljs.core.rest(arglist__54633);
return G__54631__delegate(x,y,more);
});
G__54631.cljs$core$IFn$_invoke$arity$variadic = G__54631__delegate;
return G__54631;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__54634 = null;
if (arguments.length > 2) {
var G__54635__i = 0, G__54635__a = new Array(arguments.length -  2);
while (G__54635__i < G__54635__a.length) {G__54635__a[G__54635__i] = arguments[G__54635__i + 2]; ++G__54635__i;}
G__54634 = new cljs.core.IndexedSeq(G__54635__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__54638 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__54638) : Math.floor.call(null,G__54638));
} else {
var G__54639 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__54639) : Math.ceil.call(null,G__54639));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__54644__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__54645 = y;
var G__54646 = cljs.core.first(more);
var G__54647 = cljs.core.next(more);
x = G__54645;
y = G__54646;
more = G__54647;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__54644 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__54648__i = 0, G__54648__a = new Array(arguments.length -  2);
while (G__54648__i < G__54648__a.length) {G__54648__a[G__54648__i] = arguments[G__54648__i + 2]; ++G__54648__i;}
  more = new cljs.core.IndexedSeq(G__54648__a,0);
} 
return G__54644__delegate.call(this,x,y,more);};
G__54644.cljs$lang$maxFixedArity = 2;
G__54644.cljs$lang$applyTo = (function (arglist__54649){
var x = cljs.core.first(arglist__54649);
arglist__54649 = cljs.core.next(arglist__54649);
var y = cljs.core.first(arglist__54649);
var more = cljs.core.rest(arglist__54649);
return G__54644__delegate(x,y,more);
});
G__54644.cljs$core$IFn$_invoke$arity$variadic = G__54644__delegate;
return G__54644;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__54650 = null;
if (arguments.length > 2) {
var G__54651__i = 0, G__54651__a = new Array(arguments.length -  2);
while (G__54651__i < G__54651__a.length) {G__54651__a[G__54651__i] = arguments[G__54651__i + 2]; ++G__54651__i;}
G__54650 = new cljs.core.IndexedSeq(G__54651__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__54652 = (n__$1 - (1));
var G__54653 = cljs.core.next(xs);
n__$1 = G__54652;
xs = G__54653;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__54657 = x;
return goog.string.buildString(G__54657);
}
});
var str__2 = (function() { 
var G__54658__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__54659 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__54660 = cljs.core.next(more);
sb = G__54659;
more = G__54660;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__54658 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__54661__i = 0, G__54661__a = new Array(arguments.length -  1);
while (G__54661__i < G__54661__a.length) {G__54661__a[G__54661__i] = arguments[G__54661__i + 1]; ++G__54661__i;}
  ys = new cljs.core.IndexedSeq(G__54661__a,0);
} 
return G__54658__delegate.call(this,x,ys);};
G__54658.cljs$lang$maxFixedArity = 1;
G__54658.cljs$lang$applyTo = (function (arglist__54662){
var x = cljs.core.first(arglist__54662);
var ys = cljs.core.rest(arglist__54662);
return G__54658__delegate(x,ys);
});
G__54658.cljs$core$IFn$_invoke$arity$variadic = G__54658__delegate;
return G__54658;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__54663 = null;
if (arguments.length > 1) {
var G__54664__i = 0, G__54664__a = new Array(arguments.length -  1);
while (G__54664__i < G__54664__a.length) {G__54664__a[G__54664__i] = arguments[G__54664__i + 1]; ++G__54664__i;}
G__54663 = new cljs.core.IndexedSeq(G__54664__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__54663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__54665 = cljs.core.next(xs);
var G__54666 = cljs.core.next(ys);
xs = G__54665;
ys = G__54666;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__54667 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__54668 = cljs.core.next(s);
res = G__54667;
s = G__54668;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__54673 = ((h + (cljs.core.hash((function (){var G__54671 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__54671) : cljs.core.key.call(null,G__54671));
})()) ^ cljs.core.hash((function (){var G__54672 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__54672) : cljs.core.val.call(null,G__54672));
})()))) % (4503599627370496));
var G__54674 = cljs.core.next(s);
h = G__54673;
s = G__54674;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__54675 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__54676 = cljs.core.next(s__$1);
h = G__54675;
s__$1 = G__54676;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__54687_54697 = cljs.core.seq(fn_map);
var chunk__54688_54698 = null;
var count__54689_54699 = (0);
var i__54690_54700 = (0);
while(true){
if((i__54690_54700 < count__54689_54699)){
var vec__54691_54701 = chunk__54688_54698.cljs$core$IIndexed$_nth$arity$2(null,i__54690_54700);
var key_name_54702 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__54691_54701,(0),null);
var f_54703 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__54691_54701,(1),null);
var str_name_54704 = (function (){var G__54692 = key_name_54702;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__54692) : cljs.core.name.call(null,G__54692));
})();
(obj[str_name_54704] = f_54703);

var G__54705 = seq__54687_54697;
var G__54706 = chunk__54688_54698;
var G__54707 = count__54689_54699;
var G__54708 = (i__54690_54700 + (1));
seq__54687_54697 = G__54705;
chunk__54688_54698 = G__54706;
count__54689_54699 = G__54707;
i__54690_54700 = G__54708;
continue;
} else {
var temp__4126__auto___54709 = cljs.core.seq(seq__54687_54697);
if(temp__4126__auto___54709){
var seq__54687_54710__$1 = temp__4126__auto___54709;
if(cljs.core.chunked_seq_QMARK_(seq__54687_54710__$1)){
var c__4530__auto___54711 = (function (){var G__54693 = seq__54687_54710__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__54693) : cljs.core.chunk_first.call(null,G__54693));
})();
var G__54712 = (function (){var G__54694 = seq__54687_54710__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__54694) : cljs.core.chunk_rest.call(null,G__54694));
})();
var G__54713 = c__4530__auto___54711;
var G__54714 = cljs.core.count(c__4530__auto___54711);
var G__54715 = (0);
seq__54687_54697 = G__54712;
chunk__54688_54698 = G__54713;
count__54689_54699 = G__54714;
i__54690_54700 = G__54715;
continue;
} else {
var vec__54695_54716 = cljs.core.first(seq__54687_54710__$1);
var key_name_54717 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__54695_54716,(0),null);
var f_54718 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__54695_54716,(1),null);
var str_name_54719 = (function (){var G__54696 = key_name_54717;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__54696) : cljs.core.name.call(null,G__54696));
})();
(obj[str_name_54719] = f_54718);

var G__54720 = cljs.core.next(seq__54687_54710__$1);
var G__54721 = null;
var G__54722 = (0);
var G__54723 = (0);
seq__54687_54697 = G__54720;
chunk__54688_54698 = G__54721;
count__54689_54699 = G__54722;
i__54690_54700 = G__54723;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__54725 = coll;
if(G__54725){
var bit__4424__auto__ = (G__54725.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4424__auto__) || (G__54725.cljs$core$IReversible$)){
return true;
} else {
if((!G__54725.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__54725);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__54725);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__54726 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__54726;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__54727 = (i - (1));
var G__54728 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__54727;
r = G__54728;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__54729__i = 0, G__54729__a = new Array(arguments.length -  0);
while (G__54729__i < G__54729__a.length) {G__54729__a[G__54729__i] = arguments[G__54729__i + 0]; ++G__54729__i;}
  xs = new cljs.core.IndexedSeq(G__54729__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__54730){
var xs = cljs.core.seq(arglist__54730);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3743__auto__ = (coll == null);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var G__54734 = coll;
if(G__54734){
var bit__4417__auto__ = (G__54734.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4417__auto__) || (G__54734.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__54736 = x;
if(G__54736){
var bit__4424__auto__ = (G__54736.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4424__auto__) || (G__54736.cljs$core$IList$)){
return true;
} else {
if((!G__54736.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__54736);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__54736);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3731__auto__ = cljs.core.not(a.ns);
if(and__3731__auto__){
return b.ns;
} else {
return and__3731__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__54743 = a.ns;
var G__54744 = b.ns;
return goog.array.defaultCompare(G__54743,G__54744);
})();
if(((0) === nsc)){
var G__54745 = a.name;
var G__54746 = b.name;
return goog.array.defaultCompare(G__54745,G__54746);
} else {
return nsc;
}
}
} else {
var G__54747 = a.name;
var G__54748 = b.name;
return goog.array.defaultCompare(G__54747,G__54748);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4164__auto__ = self__._hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__54750 = null;
var G__54750__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__54750__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__54750 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__54750__2.call(this,self__,coll);
case 3:
return G__54750__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__54750.cljs$core$IFn$_invoke$arity$2 = G__54750__2;
G__54750.cljs$core$IFn$_invoke$arity$3 = G__54750__3;
return G__54750;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args54749){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args54749)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__54752 = x;
if(G__54752){
var bit__4417__auto__ = (G__54752.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4417__auto__) || (G__54752.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__54754 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__54754) : cljs.core.name.call(null,G__54754));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__54755 = ls.sval();
ls = G__54755;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__54757 = s;
if(G__54757){
var bit__4417__auto__ = (G__54757.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4417__auto__) || (G__54757.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__54758 = cljs.core.next(s__$1);
s__$1 = G__54758;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_54759 = (0);
var xs_54760 = cljs.core.seq(coll);
while(true){
if(xs_54760){
(ret[i_54759] = cljs.core.to_array(cljs.core.first(xs_54760)));

var G__54761 = (i_54759 + (1));
var G__54762 = cljs.core.next(xs_54760);
i_54759 = G__54761;
xs_54760 = G__54762;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__54765 = (i + (1));
var G__54766 = cljs.core.next(s__$1);
i = G__54765;
s__$1 = G__54766;
continue;
} else {
return a;
}
break;
}
} else {
var n__4630__auto___54767 = size;
var i_54768 = (0);
while(true){
if((i_54768 < n__4630__auto___54767)){
(a[i_54768] = init_val_or_seq);

var G__54769 = (i_54768 + (1));
i_54768 = G__54769;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__54772 = (i + (1));
var G__54773 = cljs.core.next(s__$1);
i = G__54772;
s__$1 = G__54773;
continue;
} else {
return a;
}
break;
}
} else {
var n__4630__auto___54774 = size;
var i_54775 = (0);
while(true){
if((i_54775 < n__4630__auto___54774)){
(a[i_54775] = init_val_or_seq);

var G__54776 = (i_54775 + (1));
i_54775 = G__54776;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__54779 = (i + (1));
var G__54780 = cljs.core.next(s__$1);
i = G__54779;
s__$1 = G__54780;
continue;
} else {
return a;
}
break;
}
} else {
var n__4630__auto___54781 = size;
var i_54782 = (0);
while(true){
if((i_54782 < n__4630__auto___54781)){
(a[i_54782] = init_val_or_seq);

var G__54783 = (i_54782 + (1));
i_54782 = G__54783;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__54786 = (i + (1));
var G__54787 = cljs.core.next(s__$1);
i = G__54786;
s__$1 = G__54787;
continue;
} else {
return a;
}
break;
}
} else {
var n__4630__auto___54788 = size;
var i_54789 = (0);
while(true){
if((i_54789 < n__4630__auto___54788)){
(a[i_54789] = init_val_or_seq);

var G__54790 = (i_54789 + (1));
i_54789 = G__54790;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__54791 = cljs.core.next(s__$1);
var G__54792 = (i - (1));
var G__54793 = (sum + (1));
s__$1 = G__54791;
i = G__54792;
sum = G__54793;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__54813__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__54813 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__54814__i = 0, G__54814__a = new Array(arguments.length -  2);
while (G__54814__i < G__54814__a.length) {G__54814__a[G__54814__i] = arguments[G__54814__i + 2]; ++G__54814__i;}
  zs = new cljs.core.IndexedSeq(G__54814__a,0);
} 
return G__54813__delegate.call(this,x,y,zs);};
G__54813.cljs$lang$maxFixedArity = 2;
G__54813.cljs$lang$applyTo = (function (arglist__54815){
var x = cljs.core.first(arglist__54815);
arglist__54815 = cljs.core.next(arglist__54815);
var y = cljs.core.first(arglist__54815);
var zs = cljs.core.rest(arglist__54815);
return G__54813__delegate(x,y,zs);
});
G__54813.cljs$core$IFn$_invoke$arity$variadic = G__54813__delegate;
return G__54813;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__54816 = null;
if (arguments.length > 2) {
var G__54817__i = 0, G__54817__a = new Array(arguments.length -  2);
while (G__54817__i < G__54817__a.length) {G__54817__a[G__54817__i] = arguments[G__54817__i + 2]; ++G__54817__i;}
G__54816 = new cljs.core.IndexedSeq(G__54817__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__54816);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__54818__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__54818 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__54819__i = 0, G__54819__a = new Array(arguments.length -  4);
while (G__54819__i < G__54819__a.length) {G__54819__a[G__54819__i] = arguments[G__54819__i + 4]; ++G__54819__i;}
  more = new cljs.core.IndexedSeq(G__54819__a,0);
} 
return G__54818__delegate.call(this,a,b,c,d,more);};
G__54818.cljs$lang$maxFixedArity = 4;
G__54818.cljs$lang$applyTo = (function (arglist__54820){
var a = cljs.core.first(arglist__54820);
arglist__54820 = cljs.core.next(arglist__54820);
var b = cljs.core.first(arglist__54820);
arglist__54820 = cljs.core.next(arglist__54820);
var c = cljs.core.first(arglist__54820);
arglist__54820 = cljs.core.next(arglist__54820);
var d = cljs.core.first(arglist__54820);
var more = cljs.core.rest(arglist__54820);
return G__54818__delegate(a,b,c,d,more);
});
G__54818.cljs$core$IFn$_invoke$arity$variadic = G__54818__delegate;
return G__54818;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__54821 = null;
if (arguments.length > 4) {
var G__54822__i = 0, G__54822__a = new Array(arguments.length -  4);
while (G__54822__i < G__54822__a.length) {G__54822__a[G__54822__i] = arguments[G__54822__i + 4]; ++G__54822__i;}
G__54821 = new cljs.core.IndexedSeq(G__54822__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__54821);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__54823__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__54824 = ntcoll;
var G__54825 = cljs.core.first(vals);
var G__54826 = cljs.core.next(vals);
tcoll = G__54824;
val = G__54825;
vals = G__54826;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__54823 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__54827__i = 0, G__54827__a = new Array(arguments.length -  2);
while (G__54827__i < G__54827__a.length) {G__54827__a[G__54827__i] = arguments[G__54827__i + 2]; ++G__54827__i;}
  vals = new cljs.core.IndexedSeq(G__54827__a,0);
} 
return G__54823__delegate.call(this,tcoll,val,vals);};
G__54823.cljs$lang$maxFixedArity = 2;
G__54823.cljs$lang$applyTo = (function (arglist__54828){
var tcoll = cljs.core.first(arglist__54828);
arglist__54828 = cljs.core.next(arglist__54828);
var val = cljs.core.first(arglist__54828);
var vals = cljs.core.rest(arglist__54828);
return G__54823__delegate(tcoll,val,vals);
});
G__54823.cljs$core$IFn$_invoke$arity$variadic = G__54823__delegate;
return G__54823;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__54829 = null;
if (arguments.length > 2) {
var G__54830__i = 0, G__54830__a = new Array(arguments.length -  2);
while (G__54830__i < G__54830__a.length) {G__54830__a[G__54830__i] = arguments[G__54830__i + 2]; ++G__54830__i;}
G__54829 = new cljs.core.IndexedSeq(G__54830__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__54829);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__54831__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__54832 = ntcoll;
var G__54833 = cljs.core.first(kvs);
var G__54834 = cljs.core.second(kvs);
var G__54835 = cljs.core.nnext(kvs);
tcoll = G__54832;
key = G__54833;
val = G__54834;
kvs = G__54835;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__54831 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__54836__i = 0, G__54836__a = new Array(arguments.length -  3);
while (G__54836__i < G__54836__a.length) {G__54836__a[G__54836__i] = arguments[G__54836__i + 3]; ++G__54836__i;}
  kvs = new cljs.core.IndexedSeq(G__54836__a,0);
} 
return G__54831__delegate.call(this,tcoll,key,val,kvs);};
G__54831.cljs$lang$maxFixedArity = 3;
G__54831.cljs$lang$applyTo = (function (arglist__54837){
var tcoll = cljs.core.first(arglist__54837);
arglist__54837 = cljs.core.next(arglist__54837);
var key = cljs.core.first(arglist__54837);
arglist__54837 = cljs.core.next(arglist__54837);
var val = cljs.core.first(arglist__54837);
var kvs = cljs.core.rest(arglist__54837);
return G__54831__delegate(tcoll,key,val,kvs);
});
G__54831.cljs$core$IFn$_invoke$arity$variadic = G__54831__delegate;
return G__54831;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__54838 = null;
if (arguments.length > 3) {
var G__54839__i = 0, G__54839__a = new Array(arguments.length -  3);
while (G__54839__i < G__54839__a.length) {G__54839__a[G__54839__i] = arguments[G__54839__i + 3]; ++G__54839__i;}
G__54838 = new cljs.core.IndexedSeq(G__54839__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__54838);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__54840__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__54841 = ntcoll;
var G__54842 = cljs.core.first(ks);
var G__54843 = cljs.core.next(ks);
tcoll = G__54841;
key = G__54842;
ks = G__54843;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__54840 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__54844__i = 0, G__54844__a = new Array(arguments.length -  2);
while (G__54844__i < G__54844__a.length) {G__54844__a[G__54844__i] = arguments[G__54844__i + 2]; ++G__54844__i;}
  ks = new cljs.core.IndexedSeq(G__54844__a,0);
} 
return G__54840__delegate.call(this,tcoll,key,ks);};
G__54840.cljs$lang$maxFixedArity = 2;
G__54840.cljs$lang$applyTo = (function (arglist__54845){
var tcoll = cljs.core.first(arglist__54845);
arglist__54845 = cljs.core.next(arglist__54845);
var key = cljs.core.first(arglist__54845);
var ks = cljs.core.rest(arglist__54845);
return G__54840__delegate(tcoll,key,ks);
});
G__54840.cljs$core$IFn$_invoke$arity$variadic = G__54840__delegate;
return G__54840;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__54846 = null;
if (arguments.length > 2) {
var G__54847__i = 0, G__54847__a = new Array(arguments.length -  2);
while (G__54847__i < G__54847__a.length) {G__54847__a[G__54847__i] = arguments[G__54847__i + 2]; ++G__54847__i;}
G__54846 = new cljs.core.IndexedSeq(G__54847__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__54846);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__54848__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__54849 = ntcoll;
var G__54850 = cljs.core.first(vals);
var G__54851 = cljs.core.next(vals);
tcoll = G__54849;
val = G__54850;
vals = G__54851;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__54848 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__54852__i = 0, G__54852__a = new Array(arguments.length -  2);
while (G__54852__i < G__54852__a.length) {G__54852__a[G__54852__i] = arguments[G__54852__i + 2]; ++G__54852__i;}
  vals = new cljs.core.IndexedSeq(G__54852__a,0);
} 
return G__54848__delegate.call(this,tcoll,val,vals);};
G__54848.cljs$lang$maxFixedArity = 2;
G__54848.cljs$lang$applyTo = (function (arglist__54853){
var tcoll = cljs.core.first(arglist__54853);
arglist__54853 = cljs.core.next(arglist__54853);
var val = cljs.core.first(arglist__54853);
var vals = cljs.core.rest(arglist__54853);
return G__54848__delegate(tcoll,val,vals);
});
G__54848.cljs$core$IFn$_invoke$arity$variadic = G__54848__delegate;
return G__54848;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__54854 = null;
if (arguments.length > 2) {
var G__54855__i = 0, G__54855__a = new Array(arguments.length -  2);
while (G__54855__i < G__54855__a.length) {G__54855__a[G__54855__i] = arguments[G__54855__i + 2]; ++G__54855__i;}
G__54854 = new cljs.core.IndexedSeq(G__54855__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__54854);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4674 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4674);
} else {
var G__55066 = a4674;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55066) : f.call(null,G__55066));
}
} else {
var b4675 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4674,b4675);
} else {
var G__55067 = a4674;
var G__55068 = b4675;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55067,G__55068) : f.call(null,G__55067,G__55068));
}
} else {
var c4676 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4674,b4675,c4676);
} else {
var G__55069 = a4674;
var G__55070 = b4675;
var G__55071 = c4676;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__55069,G__55070,G__55071) : f.call(null,G__55069,G__55070,G__55071));
}
} else {
var d4677 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4674,b4675,c4676,d4677);
} else {
var G__55072 = a4674;
var G__55073 = b4675;
var G__55074 = c4676;
var G__55075 = d4677;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__55072,G__55073,G__55074,G__55075) : f.call(null,G__55072,G__55073,G__55074,G__55075));
}
} else {
var e4678 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4674,b4675,c4676,d4677,e4678);
} else {
var G__55076 = a4674;
var G__55077 = b4675;
var G__55078 = c4676;
var G__55079 = d4677;
var G__55080 = e4678;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__55076,G__55077,G__55078,G__55079,G__55080) : f.call(null,G__55076,G__55077,G__55078,G__55079,G__55080));
}
} else {
var f4679 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4674,b4675,c4676,d4677,e4678,f4679);
} else {
var G__55081 = a4674;
var G__55082 = b4675;
var G__55083 = c4676;
var G__55084 = d4677;
var G__55085 = e4678;
var G__55086 = f4679;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__55081,G__55082,G__55083,G__55084,G__55085,G__55086) : f.call(null,G__55081,G__55082,G__55083,G__55084,G__55085,G__55086));
}
} else {
var g4680 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4674,b4675,c4676,d4677,e4678,f4679,g4680);
} else {
var G__55087 = a4674;
var G__55088 = b4675;
var G__55089 = c4676;
var G__55090 = d4677;
var G__55091 = e4678;
var G__55092 = f4679;
var G__55093 = g4680;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__55087,G__55088,G__55089,G__55090,G__55091,G__55092,G__55093) : f.call(null,G__55087,G__55088,G__55089,G__55090,G__55091,G__55092,G__55093));
}
} else {
var h4681 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681);
} else {
var G__55094 = a4674;
var G__55095 = b4675;
var G__55096 = c4676;
var G__55097 = d4677;
var G__55098 = e4678;
var G__55099 = f4679;
var G__55100 = g4680;
var G__55101 = h4681;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__55094,G__55095,G__55096,G__55097,G__55098,G__55099,G__55100,G__55101) : f.call(null,G__55094,G__55095,G__55096,G__55097,G__55098,G__55099,G__55100,G__55101));
}
} else {
var i4682 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682);
} else {
var G__55102 = a4674;
var G__55103 = b4675;
var G__55104 = c4676;
var G__55105 = d4677;
var G__55106 = e4678;
var G__55107 = f4679;
var G__55108 = g4680;
var G__55109 = h4681;
var G__55110 = i4682;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__55102,G__55103,G__55104,G__55105,G__55106,G__55107,G__55108,G__55109,G__55110) : f.call(null,G__55102,G__55103,G__55104,G__55105,G__55106,G__55107,G__55108,G__55109,G__55110));
}
} else {
var j4683 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683);
} else {
var G__55111 = a4674;
var G__55112 = b4675;
var G__55113 = c4676;
var G__55114 = d4677;
var G__55115 = e4678;
var G__55116 = f4679;
var G__55117 = g4680;
var G__55118 = h4681;
var G__55119 = i4682;
var G__55120 = j4683;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__55111,G__55112,G__55113,G__55114,G__55115,G__55116,G__55117,G__55118,G__55119,G__55120) : f.call(null,G__55111,G__55112,G__55113,G__55114,G__55115,G__55116,G__55117,G__55118,G__55119,G__55120));
}
} else {
var k4684 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684);
} else {
var G__55121 = a4674;
var G__55122 = b4675;
var G__55123 = c4676;
var G__55124 = d4677;
var G__55125 = e4678;
var G__55126 = f4679;
var G__55127 = g4680;
var G__55128 = h4681;
var G__55129 = i4682;
var G__55130 = j4683;
var G__55131 = k4684;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__55121,G__55122,G__55123,G__55124,G__55125,G__55126,G__55127,G__55128,G__55129,G__55130,G__55131) : f.call(null,G__55121,G__55122,G__55123,G__55124,G__55125,G__55126,G__55127,G__55128,G__55129,G__55130,G__55131));
}
} else {
var l4685 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685);
} else {
var G__55132 = a4674;
var G__55133 = b4675;
var G__55134 = c4676;
var G__55135 = d4677;
var G__55136 = e4678;
var G__55137 = f4679;
var G__55138 = g4680;
var G__55139 = h4681;
var G__55140 = i4682;
var G__55141 = j4683;
var G__55142 = k4684;
var G__55143 = l4685;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__55132,G__55133,G__55134,G__55135,G__55136,G__55137,G__55138,G__55139,G__55140,G__55141,G__55142,G__55143) : f.call(null,G__55132,G__55133,G__55134,G__55135,G__55136,G__55137,G__55138,G__55139,G__55140,G__55141,G__55142,G__55143));
}
} else {
var m4686 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686);
} else {
var G__55144 = a4674;
var G__55145 = b4675;
var G__55146 = c4676;
var G__55147 = d4677;
var G__55148 = e4678;
var G__55149 = f4679;
var G__55150 = g4680;
var G__55151 = h4681;
var G__55152 = i4682;
var G__55153 = j4683;
var G__55154 = k4684;
var G__55155 = l4685;
var G__55156 = m4686;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__55144,G__55145,G__55146,G__55147,G__55148,G__55149,G__55150,G__55151,G__55152,G__55153,G__55154,G__55155,G__55156) : f.call(null,G__55144,G__55145,G__55146,G__55147,G__55148,G__55149,G__55150,G__55151,G__55152,G__55153,G__55154,G__55155,G__55156));
}
} else {
var n4687 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687);
} else {
var G__55157 = a4674;
var G__55158 = b4675;
var G__55159 = c4676;
var G__55160 = d4677;
var G__55161 = e4678;
var G__55162 = f4679;
var G__55163 = g4680;
var G__55164 = h4681;
var G__55165 = i4682;
var G__55166 = j4683;
var G__55167 = k4684;
var G__55168 = l4685;
var G__55169 = m4686;
var G__55170 = n4687;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__55157,G__55158,G__55159,G__55160,G__55161,G__55162,G__55163,G__55164,G__55165,G__55166,G__55167,G__55168,G__55169,G__55170) : f.call(null,G__55157,G__55158,G__55159,G__55160,G__55161,G__55162,G__55163,G__55164,G__55165,G__55166,G__55167,G__55168,G__55169,G__55170));
}
} else {
var o4688 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688);
} else {
var G__55171 = a4674;
var G__55172 = b4675;
var G__55173 = c4676;
var G__55174 = d4677;
var G__55175 = e4678;
var G__55176 = f4679;
var G__55177 = g4680;
var G__55178 = h4681;
var G__55179 = i4682;
var G__55180 = j4683;
var G__55181 = k4684;
var G__55182 = l4685;
var G__55183 = m4686;
var G__55184 = n4687;
var G__55185 = o4688;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__55171,G__55172,G__55173,G__55174,G__55175,G__55176,G__55177,G__55178,G__55179,G__55180,G__55181,G__55182,G__55183,G__55184,G__55185) : f.call(null,G__55171,G__55172,G__55173,G__55174,G__55175,G__55176,G__55177,G__55178,G__55179,G__55180,G__55181,G__55182,G__55183,G__55184,G__55185));
}
} else {
var p4689 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689);
} else {
var G__55186 = a4674;
var G__55187 = b4675;
var G__55188 = c4676;
var G__55189 = d4677;
var G__55190 = e4678;
var G__55191 = f4679;
var G__55192 = g4680;
var G__55193 = h4681;
var G__55194 = i4682;
var G__55195 = j4683;
var G__55196 = k4684;
var G__55197 = l4685;
var G__55198 = m4686;
var G__55199 = n4687;
var G__55200 = o4688;
var G__55201 = p4689;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__55186,G__55187,G__55188,G__55189,G__55190,G__55191,G__55192,G__55193,G__55194,G__55195,G__55196,G__55197,G__55198,G__55199,G__55200,G__55201) : f.call(null,G__55186,G__55187,G__55188,G__55189,G__55190,G__55191,G__55192,G__55193,G__55194,G__55195,G__55196,G__55197,G__55198,G__55199,G__55200,G__55201));
}
} else {
var q4690 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689,q4690);
} else {
var G__55202 = a4674;
var G__55203 = b4675;
var G__55204 = c4676;
var G__55205 = d4677;
var G__55206 = e4678;
var G__55207 = f4679;
var G__55208 = g4680;
var G__55209 = h4681;
var G__55210 = i4682;
var G__55211 = j4683;
var G__55212 = k4684;
var G__55213 = l4685;
var G__55214 = m4686;
var G__55215 = n4687;
var G__55216 = o4688;
var G__55217 = p4689;
var G__55218 = q4690;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__55202,G__55203,G__55204,G__55205,G__55206,G__55207,G__55208,G__55209,G__55210,G__55211,G__55212,G__55213,G__55214,G__55215,G__55216,G__55217,G__55218) : f.call(null,G__55202,G__55203,G__55204,G__55205,G__55206,G__55207,G__55208,G__55209,G__55210,G__55211,G__55212,G__55213,G__55214,G__55215,G__55216,G__55217,G__55218));
}
} else {
var r4691 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689,q4690,r4691);
} else {
var G__55219 = a4674;
var G__55220 = b4675;
var G__55221 = c4676;
var G__55222 = d4677;
var G__55223 = e4678;
var G__55224 = f4679;
var G__55225 = g4680;
var G__55226 = h4681;
var G__55227 = i4682;
var G__55228 = j4683;
var G__55229 = k4684;
var G__55230 = l4685;
var G__55231 = m4686;
var G__55232 = n4687;
var G__55233 = o4688;
var G__55234 = p4689;
var G__55235 = q4690;
var G__55236 = r4691;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__55219,G__55220,G__55221,G__55222,G__55223,G__55224,G__55225,G__55226,G__55227,G__55228,G__55229,G__55230,G__55231,G__55232,G__55233,G__55234,G__55235,G__55236) : f.call(null,G__55219,G__55220,G__55221,G__55222,G__55223,G__55224,G__55225,G__55226,G__55227,G__55228,G__55229,G__55230,G__55231,G__55232,G__55233,G__55234,G__55235,G__55236));
}
} else {
var s4692 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689,q4690,r4691,s4692);
} else {
var G__55237 = a4674;
var G__55238 = b4675;
var G__55239 = c4676;
var G__55240 = d4677;
var G__55241 = e4678;
var G__55242 = f4679;
var G__55243 = g4680;
var G__55244 = h4681;
var G__55245 = i4682;
var G__55246 = j4683;
var G__55247 = k4684;
var G__55248 = l4685;
var G__55249 = m4686;
var G__55250 = n4687;
var G__55251 = o4688;
var G__55252 = p4689;
var G__55253 = q4690;
var G__55254 = r4691;
var G__55255 = s4692;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__55237,G__55238,G__55239,G__55240,G__55241,G__55242,G__55243,G__55244,G__55245,G__55246,G__55247,G__55248,G__55249,G__55250,G__55251,G__55252,G__55253,G__55254,G__55255) : f.call(null,G__55237,G__55238,G__55239,G__55240,G__55241,G__55242,G__55243,G__55244,G__55245,G__55246,G__55247,G__55248,G__55249,G__55250,G__55251,G__55252,G__55253,G__55254,G__55255));
}
} else {
var t4693 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689,q4690,r4691,s4692,t4693);
} else {
var G__55256 = a4674;
var G__55257 = b4675;
var G__55258 = c4676;
var G__55259 = d4677;
var G__55260 = e4678;
var G__55261 = f4679;
var G__55262 = g4680;
var G__55263 = h4681;
var G__55264 = i4682;
var G__55265 = j4683;
var G__55266 = k4684;
var G__55267 = l4685;
var G__55268 = m4686;
var G__55269 = n4687;
var G__55270 = o4688;
var G__55271 = p4689;
var G__55272 = q4690;
var G__55273 = r4691;
var G__55274 = s4692;
var G__55275 = t4693;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__55256,G__55257,G__55258,G__55259,G__55260,G__55261,G__55262,G__55263,G__55264,G__55265,G__55266,G__55267,G__55268,G__55269,G__55270,G__55271,G__55272,G__55273,G__55274,G__55275) : f.call(null,G__55256,G__55257,G__55258,G__55259,G__55260,G__55261,G__55262,G__55263,G__55264,G__55265,G__55266,G__55267,G__55268,G__55269,G__55270,G__55271,G__55272,G__55273,G__55274,G__55275));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__55276__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__55276 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__55277__i = 0, G__55277__a = new Array(arguments.length -  5);
while (G__55277__i < G__55277__a.length) {G__55277__a[G__55277__i] = arguments[G__55277__i + 5]; ++G__55277__i;}
  args = new cljs.core.IndexedSeq(G__55277__a,0);
} 
return G__55276__delegate.call(this,f,a,b,c,d,args);};
G__55276.cljs$lang$maxFixedArity = 5;
G__55276.cljs$lang$applyTo = (function (arglist__55278){
var f = cljs.core.first(arglist__55278);
arglist__55278 = cljs.core.next(arglist__55278);
var a = cljs.core.first(arglist__55278);
arglist__55278 = cljs.core.next(arglist__55278);
var b = cljs.core.first(arglist__55278);
arglist__55278 = cljs.core.next(arglist__55278);
var c = cljs.core.first(arglist__55278);
arglist__55278 = cljs.core.next(arglist__55278);
var d = cljs.core.first(arglist__55278);
var args = cljs.core.rest(arglist__55278);
return G__55276__delegate(f,a,b,c,d,args);
});
G__55276.cljs$core$IFn$_invoke$arity$variadic = G__55276__delegate;
return G__55276;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__55279 = null;
if (arguments.length > 5) {
var G__55280__i = 0, G__55280__a = new Array(arguments.length -  5);
while (G__55280__i < G__55280__a.length) {G__55280__a[G__55280__i] = arguments[G__55280__i + 5]; ++G__55280__i;}
G__55279 = new cljs.core.IndexedSeq(G__55280__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__55279);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__55296 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55296) : f.call(null,G__55296));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__55297 = cljs.core.meta(obj);
var G__55298 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55297,G__55298) : f.call(null,G__55297,G__55298));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__55299 = cljs.core.meta(obj);
var G__55300 = a;
var G__55301 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__55299,G__55300,G__55301) : f.call(null,G__55299,G__55300,G__55301));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__55302 = cljs.core.meta(obj);
var G__55303 = a;
var G__55304 = b;
var G__55305 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__55302,G__55303,G__55304,G__55305) : f.call(null,G__55302,G__55303,G__55304,G__55305));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__55306 = cljs.core.meta(obj);
var G__55307 = a;
var G__55308 = b;
var G__55309 = c;
var G__55310 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__55306,G__55307,G__55308,G__55309,G__55310) : f.call(null,G__55306,G__55307,G__55308,G__55309,G__55310));
})());
});
var vary_meta__7 = (function() { 
var G__55311__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__55311 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__55312__i = 0, G__55312__a = new Array(arguments.length -  6);
while (G__55312__i < G__55312__a.length) {G__55312__a[G__55312__i] = arguments[G__55312__i + 6]; ++G__55312__i;}
  args = new cljs.core.IndexedSeq(G__55312__a,0);
} 
return G__55311__delegate.call(this,obj,f,a,b,c,d,args);};
G__55311.cljs$lang$maxFixedArity = 6;
G__55311.cljs$lang$applyTo = (function (arglist__55313){
var obj = cljs.core.first(arglist__55313);
arglist__55313 = cljs.core.next(arglist__55313);
var f = cljs.core.first(arglist__55313);
arglist__55313 = cljs.core.next(arglist__55313);
var a = cljs.core.first(arglist__55313);
arglist__55313 = cljs.core.next(arglist__55313);
var b = cljs.core.first(arglist__55313);
arglist__55313 = cljs.core.next(arglist__55313);
var c = cljs.core.first(arglist__55313);
arglist__55313 = cljs.core.next(arglist__55313);
var d = cljs.core.first(arglist__55313);
var args = cljs.core.rest(arglist__55313);
return G__55311__delegate(obj,f,a,b,c,d,args);
});
G__55311.cljs$core$IFn$_invoke$arity$variadic = G__55311__delegate;
return G__55311;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__55314 = null;
if (arguments.length > 6) {
var G__55315__i = 0, G__55315__a = new Array(arguments.length -  6);
while (G__55315__i < G__55315__a.length) {G__55315__a[G__55315__i] = arguments[G__55315__i + 6]; ++G__55315__i;}
G__55314 = new cljs.core.IndexedSeq(G__55315__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__55314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__55316__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__55316 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__55317__i = 0, G__55317__a = new Array(arguments.length -  2);
while (G__55317__i < G__55317__a.length) {G__55317__a[G__55317__i] = arguments[G__55317__i + 2]; ++G__55317__i;}
  more = new cljs.core.IndexedSeq(G__55317__a,0);
} 
return G__55316__delegate.call(this,x,y,more);};
G__55316.cljs$lang$maxFixedArity = 2;
G__55316.cljs$lang$applyTo = (function (arglist__55318){
var x = cljs.core.first(arglist__55318);
arglist__55318 = cljs.core.next(arglist__55318);
var y = cljs.core.first(arglist__55318);
var more = cljs.core.rest(arglist__55318);
return G__55316__delegate(x,y,more);
});
G__55316.cljs$core$IFn$_invoke$arity$variadic = G__55316__delegate;
return G__55316;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__55319 = null;
if (arguments.length > 2) {
var G__55320__i = 0, G__55320__a = new Array(arguments.length -  2);
while (G__55320__i < G__55320__a.length) {G__55320__a[G__55320__i] = arguments[G__55320__i + 2]; ++G__55320__i;}
G__55319 = new cljs.core.IndexedSeq(G__55320__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__55319);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t55324 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t55324 = (function (nil_iter,meta55325){
this.nil_iter = nil_iter;
this.meta55325 = meta55325;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t55324.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t55324.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t55324.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t55324.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_55326){
var self__ = this;
var _55326__$1 = this;
return self__.meta55325;
});

cljs.core.t55324.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_55326,meta55325__$1){
var self__ = this;
var _55326__$1 = this;
return (new cljs.core.t55324(self__.nil_iter,meta55325__$1));
});

cljs.core.t55324.cljs$lang$type = true;

cljs.core.t55324.cljs$lang$ctorStr = "cljs.core/t55324";

cljs.core.t55324.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/t55324");
});

cljs.core.__GT_t55324 = (function __GT_t55324(nil_iter__$1,meta55325){
return (new cljs.core.t55324(nil_iter__$1,meta55325));
});

}

return (new cljs.core.t55324(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8,54,cljs.core.constant$keyword$9,2998,cljs.core.constant$keyword$10,3,cljs.core.constant$keyword$11,2994,cljs.core.constant$keyword$12,"D:\\prog\\projects\\pure\\clojure\\shoplist\\resources\\public\\js\\out\\cljs\\core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3731__auto__ = !((lt.stepper == null));
if(and__3731__auto__){
return self__.iter.hasNext();
} else {
return and__3731__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__55327 = lt;
var G__55328 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__55327,G__55328) : self__.xform.call(null,G__55327,G__55328));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__55329 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__55329) : self__.xform.call(null,G__55329));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__55331 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__55331) : xform.call(null,G__55331));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__55333 = cljs.core.next(iters__$1);
iters__$1 = G__55333;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4630__auto___55334 = self__.iters.length;
var i_55335 = (0);
while(true){
if((i_55335 < n__4630__auto___55334)){
(self__.nexts[i_55335] = (self__.iters[i_55335]).next());

var G__55336 = (i_55335 + (1));
i_55335 = G__55336;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3731__auto__ = !((lt.stepper == null));
if(and__3731__auto__){
return this$.hasNext();
} else {
return and__3731__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__55332 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__55332) : self__.xform.call(null,G__55332));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__55341 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__55341) : xform.call(null,G__55341));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__55342_55346 = cljs.core.seq(colls);
var chunk__55343_55347 = null;
var count__55344_55348 = (0);
var i__55345_55349 = (0);
while(true){
if((i__55345_55349 < count__55344_55348)){
var coll_55350 = chunk__55343_55347.cljs$core$IIndexed$_nth$arity$2(null,i__55345_55349);
iters.push(cljs.core.iter(coll_55350));

var G__55351 = seq__55342_55346;
var G__55352 = chunk__55343_55347;
var G__55353 = count__55344_55348;
var G__55354 = (i__55345_55349 + (1));
seq__55342_55346 = G__55351;
chunk__55343_55347 = G__55352;
count__55344_55348 = G__55353;
i__55345_55349 = G__55354;
continue;
} else {
var temp__4126__auto___55355 = cljs.core.seq(seq__55342_55346);
if(temp__4126__auto___55355){
var seq__55342_55356__$1 = temp__4126__auto___55355;
if(cljs.core.chunked_seq_QMARK_(seq__55342_55356__$1)){
var c__4530__auto___55357 = cljs.core.chunk_first(seq__55342_55356__$1);
var G__55358 = cljs.core.chunk_rest(seq__55342_55356__$1);
var G__55359 = c__4530__auto___55357;
var G__55360 = cljs.core.count(c__4530__auto___55357);
var G__55361 = (0);
seq__55342_55346 = G__55358;
chunk__55343_55347 = G__55359;
count__55344_55348 = G__55360;
i__55345_55349 = G__55361;
continue;
} else {
var coll_55362 = cljs.core.first(seq__55342_55356__$1);
iters.push(cljs.core.iter(coll_55362));

var G__55363 = cljs.core.next(seq__55342_55356__$1);
var G__55364 = null;
var G__55365 = (0);
var G__55366 = (0);
seq__55342_55346 = G__55363;
chunk__55343_55347 = G__55364;
count__55344_55348 = G__55365;
i__55345_55349 = G__55366;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3743__auto__ = cljs.core.seq(coll);
if(or__3743__auto__){
return or__3743__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__55367__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__55367 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__55368__i = 0, G__55368__a = new Array(arguments.length -  2);
while (G__55368__i < G__55368__a.length) {G__55368__a[G__55368__i] = arguments[G__55368__i + 2]; ++G__55368__i;}
  colls = new cljs.core.IndexedSeq(G__55368__a,0);
} 
return G__55367__delegate.call(this,xform,coll,colls);};
G__55367.cljs$lang$maxFixedArity = 2;
G__55367.cljs$lang$applyTo = (function (arglist__55369){
var xform = cljs.core.first(arglist__55369);
arglist__55369 = cljs.core.next(arglist__55369);
var coll = cljs.core.first(arglist__55369);
var colls = cljs.core.rest(arglist__55369);
return G__55367__delegate(xform,coll,colls);
});
G__55367.cljs$core$IFn$_invoke$arity$variadic = G__55367__delegate;
return G__55367;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__55370 = null;
if (arguments.length > 2) {
var G__55371__i = 0, G__55371__a = new Array(arguments.length -  2);
while (G__55371__i < G__55371__a.length) {G__55371__a[G__55371__i] = arguments[G__55371__i + 2]; ++G__55371__i;}
G__55370 = new cljs.core.IndexedSeq(G__55371__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__55370);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__55373 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__55373) : pred.call(null,G__55373));
})())){
var G__55374 = pred;
var G__55375 = cljs.core.next(coll);
pred = G__55374;
coll = G__55375;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3743__auto__ = (function (){var G__55379 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__55379) : pred.call(null,G__55379));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__55380 = pred;
var G__55381 = cljs.core.next(coll);
pred = G__55380;
coll = G__55381;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__55388 = null;
var G__55388__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__55388__1 = (function (x){
return cljs.core.not((function (){var G__55385 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55385) : f.call(null,G__55385));
})());
});
var G__55388__2 = (function (x,y){
return cljs.core.not((function (){var G__55386 = x;
var G__55387 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55386,G__55387) : f.call(null,G__55386,G__55387));
})());
});
var G__55388__3 = (function() { 
var G__55389__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__55389 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__55390__i = 0, G__55390__a = new Array(arguments.length -  2);
while (G__55390__i < G__55390__a.length) {G__55390__a[G__55390__i] = arguments[G__55390__i + 2]; ++G__55390__i;}
  zs = new cljs.core.IndexedSeq(G__55390__a,0);
} 
return G__55389__delegate.call(this,x,y,zs);};
G__55389.cljs$lang$maxFixedArity = 2;
G__55389.cljs$lang$applyTo = (function (arglist__55391){
var x = cljs.core.first(arglist__55391);
arglist__55391 = cljs.core.next(arglist__55391);
var y = cljs.core.first(arglist__55391);
var zs = cljs.core.rest(arglist__55391);
return G__55389__delegate(x,y,zs);
});
G__55389.cljs$core$IFn$_invoke$arity$variadic = G__55389__delegate;
return G__55389;
})()
;
G__55388 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__55388__0.call(this);
case 1:
return G__55388__1.call(this,x);
case 2:
return G__55388__2.call(this,x,y);
default:
var G__55392 = null;
if (arguments.length > 2) {
var G__55393__i = 0, G__55393__a = new Array(arguments.length -  2);
while (G__55393__i < G__55393__a.length) {G__55393__a[G__55393__i] = arguments[G__55393__i + 2]; ++G__55393__i;}
G__55392 = new cljs.core.IndexedSeq(G__55393__a,0);
}
return G__55388__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__55392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55388.cljs$lang$maxFixedArity = 2;
G__55388.cljs$lang$applyTo = G__55388__3.cljs$lang$applyTo;
G__55388.cljs$core$IFn$_invoke$arity$0 = G__55388__0;
G__55388.cljs$core$IFn$_invoke$arity$1 = G__55388__1;
G__55388.cljs$core$IFn$_invoke$arity$2 = G__55388__2;
G__55388.cljs$core$IFn$_invoke$arity$variadic = G__55388__3.cljs$core$IFn$_invoke$arity$variadic;
return G__55388;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__55394__delegate = function (args){
return x;
};
var G__55394 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__55395__i = 0, G__55395__a = new Array(arguments.length -  0);
while (G__55395__i < G__55395__a.length) {G__55395__a[G__55395__i] = arguments[G__55395__i + 0]; ++G__55395__i;}
  args = new cljs.core.IndexedSeq(G__55395__a,0);
} 
return G__55394__delegate.call(this,args);};
G__55394.cljs$lang$maxFixedArity = 0;
G__55394.cljs$lang$applyTo = (function (arglist__55396){
var args = cljs.core.seq(arglist__55396);
return G__55394__delegate(args);
});
G__55394.cljs$core$IFn$_invoke$arity$variadic = G__55394__delegate;
return G__55394;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__55451 = null;
var G__55451__0 = (function (){
var G__55424 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55424) : f.call(null,G__55424));
});
var G__55451__1 = (function (x){
var G__55425 = (function (){var G__55426 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__55426) : g.call(null,G__55426));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55425) : f.call(null,G__55425));
});
var G__55451__2 = (function (x,y){
var G__55427 = (function (){var G__55428 = x;
var G__55429 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__55428,G__55429) : g.call(null,G__55428,G__55429));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55427) : f.call(null,G__55427));
});
var G__55451__3 = (function (x,y,z){
var G__55430 = (function (){var G__55431 = x;
var G__55432 = y;
var G__55433 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__55431,G__55432,G__55433) : g.call(null,G__55431,G__55432,G__55433));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55430) : f.call(null,G__55430));
});
var G__55451__4 = (function() { 
var G__55452__delegate = function (x,y,z,args){
var G__55434 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55434) : f.call(null,G__55434));
};
var G__55452 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__55453__i = 0, G__55453__a = new Array(arguments.length -  3);
while (G__55453__i < G__55453__a.length) {G__55453__a[G__55453__i] = arguments[G__55453__i + 3]; ++G__55453__i;}
  args = new cljs.core.IndexedSeq(G__55453__a,0);
} 
return G__55452__delegate.call(this,x,y,z,args);};
G__55452.cljs$lang$maxFixedArity = 3;
G__55452.cljs$lang$applyTo = (function (arglist__55454){
var x = cljs.core.first(arglist__55454);
arglist__55454 = cljs.core.next(arglist__55454);
var y = cljs.core.first(arglist__55454);
arglist__55454 = cljs.core.next(arglist__55454);
var z = cljs.core.first(arglist__55454);
var args = cljs.core.rest(arglist__55454);
return G__55452__delegate(x,y,z,args);
});
G__55452.cljs$core$IFn$_invoke$arity$variadic = G__55452__delegate;
return G__55452;
})()
;
G__55451 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__55451__0.call(this);
case 1:
return G__55451__1.call(this,x);
case 2:
return G__55451__2.call(this,x,y);
case 3:
return G__55451__3.call(this,x,y,z);
default:
var G__55455 = null;
if (arguments.length > 3) {
var G__55456__i = 0, G__55456__a = new Array(arguments.length -  3);
while (G__55456__i < G__55456__a.length) {G__55456__a[G__55456__i] = arguments[G__55456__i + 3]; ++G__55456__i;}
G__55455 = new cljs.core.IndexedSeq(G__55456__a,0);
}
return G__55451__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__55455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55451.cljs$lang$maxFixedArity = 3;
G__55451.cljs$lang$applyTo = G__55451__4.cljs$lang$applyTo;
G__55451.cljs$core$IFn$_invoke$arity$0 = G__55451__0;
G__55451.cljs$core$IFn$_invoke$arity$1 = G__55451__1;
G__55451.cljs$core$IFn$_invoke$arity$2 = G__55451__2;
G__55451.cljs$core$IFn$_invoke$arity$3 = G__55451__3;
G__55451.cljs$core$IFn$_invoke$arity$variadic = G__55451__4.cljs$core$IFn$_invoke$arity$variadic;
return G__55451;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__55457 = null;
var G__55457__0 = (function (){
var G__55435 = (function (){var G__55436 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__55436) : g.call(null,G__55436));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55435) : f.call(null,G__55435));
});
var G__55457__1 = (function (x){
var G__55437 = (function (){var G__55438 = (function (){var G__55439 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__55439) : h.call(null,G__55439));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__55438) : g.call(null,G__55438));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55437) : f.call(null,G__55437));
});
var G__55457__2 = (function (x,y){
var G__55440 = (function (){var G__55441 = (function (){var G__55442 = x;
var G__55443 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__55442,G__55443) : h.call(null,G__55442,G__55443));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__55441) : g.call(null,G__55441));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55440) : f.call(null,G__55440));
});
var G__55457__3 = (function (x,y,z){
var G__55444 = (function (){var G__55445 = (function (){var G__55446 = x;
var G__55447 = y;
var G__55448 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__55446,G__55447,G__55448) : h.call(null,G__55446,G__55447,G__55448));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__55445) : g.call(null,G__55445));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55444) : f.call(null,G__55444));
});
var G__55457__4 = (function() { 
var G__55458__delegate = function (x,y,z,args){
var G__55449 = (function (){var G__55450 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__55450) : g.call(null,G__55450));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55449) : f.call(null,G__55449));
};
var G__55458 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__55459__i = 0, G__55459__a = new Array(arguments.length -  3);
while (G__55459__i < G__55459__a.length) {G__55459__a[G__55459__i] = arguments[G__55459__i + 3]; ++G__55459__i;}
  args = new cljs.core.IndexedSeq(G__55459__a,0);
} 
return G__55458__delegate.call(this,x,y,z,args);};
G__55458.cljs$lang$maxFixedArity = 3;
G__55458.cljs$lang$applyTo = (function (arglist__55460){
var x = cljs.core.first(arglist__55460);
arglist__55460 = cljs.core.next(arglist__55460);
var y = cljs.core.first(arglist__55460);
arglist__55460 = cljs.core.next(arglist__55460);
var z = cljs.core.first(arglist__55460);
var args = cljs.core.rest(arglist__55460);
return G__55458__delegate(x,y,z,args);
});
G__55458.cljs$core$IFn$_invoke$arity$variadic = G__55458__delegate;
return G__55458;
})()
;
G__55457 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__55457__0.call(this);
case 1:
return G__55457__1.call(this,x);
case 2:
return G__55457__2.call(this,x,y);
case 3:
return G__55457__3.call(this,x,y,z);
default:
var G__55461 = null;
if (arguments.length > 3) {
var G__55462__i = 0, G__55462__a = new Array(arguments.length -  3);
while (G__55462__i < G__55462__a.length) {G__55462__a[G__55462__i] = arguments[G__55462__i + 3]; ++G__55462__i;}
G__55461 = new cljs.core.IndexedSeq(G__55462__a,0);
}
return G__55457__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__55461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55457.cljs$lang$maxFixedArity = 3;
G__55457.cljs$lang$applyTo = G__55457__4.cljs$lang$applyTo;
G__55457.cljs$core$IFn$_invoke$arity$0 = G__55457__0;
G__55457.cljs$core$IFn$_invoke$arity$1 = G__55457__1;
G__55457.cljs$core$IFn$_invoke$arity$2 = G__55457__2;
G__55457.cljs$core$IFn$_invoke$arity$3 = G__55457__3;
G__55457.cljs$core$IFn$_invoke$arity$variadic = G__55457__4.cljs$core$IFn$_invoke$arity$variadic;
return G__55457;
})()
});
var comp__4 = (function() { 
var G__55463__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__55464__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__55465 = cljs.core.first(fs__$2).call(null,ret);
var G__55466 = cljs.core.next(fs__$2);
ret = G__55465;
fs__$2 = G__55466;
continue;
} else {
return ret;
}
break;
}
};
var G__55464 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__55467__i = 0, G__55467__a = new Array(arguments.length -  0);
while (G__55467__i < G__55467__a.length) {G__55467__a[G__55467__i] = arguments[G__55467__i + 0]; ++G__55467__i;}
  args = new cljs.core.IndexedSeq(G__55467__a,0);
} 
return G__55464__delegate.call(this,args);};
G__55464.cljs$lang$maxFixedArity = 0;
G__55464.cljs$lang$applyTo = (function (arglist__55468){
var args = cljs.core.seq(arglist__55468);
return G__55464__delegate(args);
});
G__55464.cljs$core$IFn$_invoke$arity$variadic = G__55464__delegate;
return G__55464;
})()
;
;})(fs__$1))
};
var G__55463 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__55469__i = 0, G__55469__a = new Array(arguments.length -  3);
while (G__55469__i < G__55469__a.length) {G__55469__a[G__55469__i] = arguments[G__55469__i + 3]; ++G__55469__i;}
  fs = new cljs.core.IndexedSeq(G__55469__a,0);
} 
return G__55463__delegate.call(this,f1,f2,f3,fs);};
G__55463.cljs$lang$maxFixedArity = 3;
G__55463.cljs$lang$applyTo = (function (arglist__55470){
var f1 = cljs.core.first(arglist__55470);
arglist__55470 = cljs.core.next(arglist__55470);
var f2 = cljs.core.first(arglist__55470);
arglist__55470 = cljs.core.next(arglist__55470);
var f3 = cljs.core.first(arglist__55470);
var fs = cljs.core.rest(arglist__55470);
return G__55463__delegate(f1,f2,f3,fs);
});
G__55463.cljs$core$IFn$_invoke$arity$variadic = G__55463__delegate;
return G__55463;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__55471 = null;
if (arguments.length > 3) {
var G__55472__i = 0, G__55472__a = new Array(arguments.length -  3);
while (G__55472__i < G__55472__a.length) {G__55472__a[G__55472__i] = arguments[G__55472__i + 3]; ++G__55472__i;}
G__55471 = new cljs.core.IndexedSeq(G__55472__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__55471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__55557 = null;
var G__55557__0 = (function (){
var G__55515 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55515) : f.call(null,G__55515));
});
var G__55557__1 = (function (x){
var G__55516 = arg1;
var G__55517 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55516,G__55517) : f.call(null,G__55516,G__55517));
});
var G__55557__2 = (function (x,y){
var G__55518 = arg1;
var G__55519 = x;
var G__55520 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__55518,G__55519,G__55520) : f.call(null,G__55518,G__55519,G__55520));
});
var G__55557__3 = (function (x,y,z){
var G__55521 = arg1;
var G__55522 = x;
var G__55523 = y;
var G__55524 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__55521,G__55522,G__55523,G__55524) : f.call(null,G__55521,G__55522,G__55523,G__55524));
});
var G__55557__4 = (function() { 
var G__55558__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__55558 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__55559__i = 0, G__55559__a = new Array(arguments.length -  3);
while (G__55559__i < G__55559__a.length) {G__55559__a[G__55559__i] = arguments[G__55559__i + 3]; ++G__55559__i;}
  args = new cljs.core.IndexedSeq(G__55559__a,0);
} 
return G__55558__delegate.call(this,x,y,z,args);};
G__55558.cljs$lang$maxFixedArity = 3;
G__55558.cljs$lang$applyTo = (function (arglist__55560){
var x = cljs.core.first(arglist__55560);
arglist__55560 = cljs.core.next(arglist__55560);
var y = cljs.core.first(arglist__55560);
arglist__55560 = cljs.core.next(arglist__55560);
var z = cljs.core.first(arglist__55560);
var args = cljs.core.rest(arglist__55560);
return G__55558__delegate(x,y,z,args);
});
G__55558.cljs$core$IFn$_invoke$arity$variadic = G__55558__delegate;
return G__55558;
})()
;
G__55557 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__55557__0.call(this);
case 1:
return G__55557__1.call(this,x);
case 2:
return G__55557__2.call(this,x,y);
case 3:
return G__55557__3.call(this,x,y,z);
default:
var G__55561 = null;
if (arguments.length > 3) {
var G__55562__i = 0, G__55562__a = new Array(arguments.length -  3);
while (G__55562__i < G__55562__a.length) {G__55562__a[G__55562__i] = arguments[G__55562__i + 3]; ++G__55562__i;}
G__55561 = new cljs.core.IndexedSeq(G__55562__a,0);
}
return G__55557__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__55561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55557.cljs$lang$maxFixedArity = 3;
G__55557.cljs$lang$applyTo = G__55557__4.cljs$lang$applyTo;
G__55557.cljs$core$IFn$_invoke$arity$0 = G__55557__0;
G__55557.cljs$core$IFn$_invoke$arity$1 = G__55557__1;
G__55557.cljs$core$IFn$_invoke$arity$2 = G__55557__2;
G__55557.cljs$core$IFn$_invoke$arity$3 = G__55557__3;
G__55557.cljs$core$IFn$_invoke$arity$variadic = G__55557__4.cljs$core$IFn$_invoke$arity$variadic;
return G__55557;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__55563 = null;
var G__55563__0 = (function (){
var G__55525 = arg1;
var G__55526 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55525,G__55526) : f.call(null,G__55525,G__55526));
});
var G__55563__1 = (function (x){
var G__55527 = arg1;
var G__55528 = arg2;
var G__55529 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__55527,G__55528,G__55529) : f.call(null,G__55527,G__55528,G__55529));
});
var G__55563__2 = (function (x,y){
var G__55530 = arg1;
var G__55531 = arg2;
var G__55532 = x;
var G__55533 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__55530,G__55531,G__55532,G__55533) : f.call(null,G__55530,G__55531,G__55532,G__55533));
});
var G__55563__3 = (function (x,y,z){
var G__55534 = arg1;
var G__55535 = arg2;
var G__55536 = x;
var G__55537 = y;
var G__55538 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__55534,G__55535,G__55536,G__55537,G__55538) : f.call(null,G__55534,G__55535,G__55536,G__55537,G__55538));
});
var G__55563__4 = (function() { 
var G__55564__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__55564 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__55565__i = 0, G__55565__a = new Array(arguments.length -  3);
while (G__55565__i < G__55565__a.length) {G__55565__a[G__55565__i] = arguments[G__55565__i + 3]; ++G__55565__i;}
  args = new cljs.core.IndexedSeq(G__55565__a,0);
} 
return G__55564__delegate.call(this,x,y,z,args);};
G__55564.cljs$lang$maxFixedArity = 3;
G__55564.cljs$lang$applyTo = (function (arglist__55566){
var x = cljs.core.first(arglist__55566);
arglist__55566 = cljs.core.next(arglist__55566);
var y = cljs.core.first(arglist__55566);
arglist__55566 = cljs.core.next(arglist__55566);
var z = cljs.core.first(arglist__55566);
var args = cljs.core.rest(arglist__55566);
return G__55564__delegate(x,y,z,args);
});
G__55564.cljs$core$IFn$_invoke$arity$variadic = G__55564__delegate;
return G__55564;
})()
;
G__55563 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__55563__0.call(this);
case 1:
return G__55563__1.call(this,x);
case 2:
return G__55563__2.call(this,x,y);
case 3:
return G__55563__3.call(this,x,y,z);
default:
var G__55567 = null;
if (arguments.length > 3) {
var G__55568__i = 0, G__55568__a = new Array(arguments.length -  3);
while (G__55568__i < G__55568__a.length) {G__55568__a[G__55568__i] = arguments[G__55568__i + 3]; ++G__55568__i;}
G__55567 = new cljs.core.IndexedSeq(G__55568__a,0);
}
return G__55563__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__55567);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55563.cljs$lang$maxFixedArity = 3;
G__55563.cljs$lang$applyTo = G__55563__4.cljs$lang$applyTo;
G__55563.cljs$core$IFn$_invoke$arity$0 = G__55563__0;
G__55563.cljs$core$IFn$_invoke$arity$1 = G__55563__1;
G__55563.cljs$core$IFn$_invoke$arity$2 = G__55563__2;
G__55563.cljs$core$IFn$_invoke$arity$3 = G__55563__3;
G__55563.cljs$core$IFn$_invoke$arity$variadic = G__55563__4.cljs$core$IFn$_invoke$arity$variadic;
return G__55563;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__55569 = null;
var G__55569__0 = (function (){
var G__55539 = arg1;
var G__55540 = arg2;
var G__55541 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__55539,G__55540,G__55541) : f.call(null,G__55539,G__55540,G__55541));
});
var G__55569__1 = (function (x){
var G__55542 = arg1;
var G__55543 = arg2;
var G__55544 = arg3;
var G__55545 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__55542,G__55543,G__55544,G__55545) : f.call(null,G__55542,G__55543,G__55544,G__55545));
});
var G__55569__2 = (function (x,y){
var G__55546 = arg1;
var G__55547 = arg2;
var G__55548 = arg3;
var G__55549 = x;
var G__55550 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__55546,G__55547,G__55548,G__55549,G__55550) : f.call(null,G__55546,G__55547,G__55548,G__55549,G__55550));
});
var G__55569__3 = (function (x,y,z){
var G__55551 = arg1;
var G__55552 = arg2;
var G__55553 = arg3;
var G__55554 = x;
var G__55555 = y;
var G__55556 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__55551,G__55552,G__55553,G__55554,G__55555,G__55556) : f.call(null,G__55551,G__55552,G__55553,G__55554,G__55555,G__55556));
});
var G__55569__4 = (function() { 
var G__55570__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__55570 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__55571__i = 0, G__55571__a = new Array(arguments.length -  3);
while (G__55571__i < G__55571__a.length) {G__55571__a[G__55571__i] = arguments[G__55571__i + 3]; ++G__55571__i;}
  args = new cljs.core.IndexedSeq(G__55571__a,0);
} 
return G__55570__delegate.call(this,x,y,z,args);};
G__55570.cljs$lang$maxFixedArity = 3;
G__55570.cljs$lang$applyTo = (function (arglist__55572){
var x = cljs.core.first(arglist__55572);
arglist__55572 = cljs.core.next(arglist__55572);
var y = cljs.core.first(arglist__55572);
arglist__55572 = cljs.core.next(arglist__55572);
var z = cljs.core.first(arglist__55572);
var args = cljs.core.rest(arglist__55572);
return G__55570__delegate(x,y,z,args);
});
G__55570.cljs$core$IFn$_invoke$arity$variadic = G__55570__delegate;
return G__55570;
})()
;
G__55569 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__55569__0.call(this);
case 1:
return G__55569__1.call(this,x);
case 2:
return G__55569__2.call(this,x,y);
case 3:
return G__55569__3.call(this,x,y,z);
default:
var G__55573 = null;
if (arguments.length > 3) {
var G__55574__i = 0, G__55574__a = new Array(arguments.length -  3);
while (G__55574__i < G__55574__a.length) {G__55574__a[G__55574__i] = arguments[G__55574__i + 3]; ++G__55574__i;}
G__55573 = new cljs.core.IndexedSeq(G__55574__a,0);
}
return G__55569__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__55573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55569.cljs$lang$maxFixedArity = 3;
G__55569.cljs$lang$applyTo = G__55569__4.cljs$lang$applyTo;
G__55569.cljs$core$IFn$_invoke$arity$0 = G__55569__0;
G__55569.cljs$core$IFn$_invoke$arity$1 = G__55569__1;
G__55569.cljs$core$IFn$_invoke$arity$2 = G__55569__2;
G__55569.cljs$core$IFn$_invoke$arity$3 = G__55569__3;
G__55569.cljs$core$IFn$_invoke$arity$variadic = G__55569__4.cljs$core$IFn$_invoke$arity$variadic;
return G__55569;
})()
});
var partial__5 = (function() { 
var G__55575__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__55576__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__55576 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__55577__i = 0, G__55577__a = new Array(arguments.length -  0);
while (G__55577__i < G__55577__a.length) {G__55577__a[G__55577__i] = arguments[G__55577__i + 0]; ++G__55577__i;}
  args = new cljs.core.IndexedSeq(G__55577__a,0);
} 
return G__55576__delegate.call(this,args);};
G__55576.cljs$lang$maxFixedArity = 0;
G__55576.cljs$lang$applyTo = (function (arglist__55578){
var args = cljs.core.seq(arglist__55578);
return G__55576__delegate(args);
});
G__55576.cljs$core$IFn$_invoke$arity$variadic = G__55576__delegate;
return G__55576;
})()
;
};
var G__55575 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__55579__i = 0, G__55579__a = new Array(arguments.length -  4);
while (G__55579__i < G__55579__a.length) {G__55579__a[G__55579__i] = arguments[G__55579__i + 4]; ++G__55579__i;}
  more = new cljs.core.IndexedSeq(G__55579__a,0);
} 
return G__55575__delegate.call(this,f,arg1,arg2,arg3,more);};
G__55575.cljs$lang$maxFixedArity = 4;
G__55575.cljs$lang$applyTo = (function (arglist__55580){
var f = cljs.core.first(arglist__55580);
arglist__55580 = cljs.core.next(arglist__55580);
var arg1 = cljs.core.first(arglist__55580);
arglist__55580 = cljs.core.next(arglist__55580);
var arg2 = cljs.core.first(arglist__55580);
arglist__55580 = cljs.core.next(arglist__55580);
var arg3 = cljs.core.first(arglist__55580);
var more = cljs.core.rest(arglist__55580);
return G__55575__delegate(f,arg1,arg2,arg3,more);
});
G__55575.cljs$core$IFn$_invoke$arity$variadic = G__55575__delegate;
return G__55575;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__55581 = null;
if (arguments.length > 4) {
var G__55582__i = 0, G__55582__a = new Array(arguments.length -  4);
while (G__55582__i < G__55582__a.length) {G__55582__a[G__55582__i] = arguments[G__55582__i + 4]; ++G__55582__i;}
G__55581 = new cljs.core.IndexedSeq(G__55582__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__55581);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__55615 = null;
var G__55615__1 = (function (a){
var G__55599 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55599) : f.call(null,G__55599));
});
var G__55615__2 = (function (a,b){
var G__55600 = (((a == null))?x:a);
var G__55601 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55600,G__55601) : f.call(null,G__55600,G__55601));
});
var G__55615__3 = (function (a,b,c){
var G__55602 = (((a == null))?x:a);
var G__55603 = b;
var G__55604 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__55602,G__55603,G__55604) : f.call(null,G__55602,G__55603,G__55604));
});
var G__55615__4 = (function() { 
var G__55616__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__55616 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__55617__i = 0, G__55617__a = new Array(arguments.length -  3);
while (G__55617__i < G__55617__a.length) {G__55617__a[G__55617__i] = arguments[G__55617__i + 3]; ++G__55617__i;}
  ds = new cljs.core.IndexedSeq(G__55617__a,0);
} 
return G__55616__delegate.call(this,a,b,c,ds);};
G__55616.cljs$lang$maxFixedArity = 3;
G__55616.cljs$lang$applyTo = (function (arglist__55618){
var a = cljs.core.first(arglist__55618);
arglist__55618 = cljs.core.next(arglist__55618);
var b = cljs.core.first(arglist__55618);
arglist__55618 = cljs.core.next(arglist__55618);
var c = cljs.core.first(arglist__55618);
var ds = cljs.core.rest(arglist__55618);
return G__55616__delegate(a,b,c,ds);
});
G__55616.cljs$core$IFn$_invoke$arity$variadic = G__55616__delegate;
return G__55616;
})()
;
G__55615 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__55615__1.call(this,a);
case 2:
return G__55615__2.call(this,a,b);
case 3:
return G__55615__3.call(this,a,b,c);
default:
var G__55619 = null;
if (arguments.length > 3) {
var G__55620__i = 0, G__55620__a = new Array(arguments.length -  3);
while (G__55620__i < G__55620__a.length) {G__55620__a[G__55620__i] = arguments[G__55620__i + 3]; ++G__55620__i;}
G__55619 = new cljs.core.IndexedSeq(G__55620__a,0);
}
return G__55615__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__55619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55615.cljs$lang$maxFixedArity = 3;
G__55615.cljs$lang$applyTo = G__55615__4.cljs$lang$applyTo;
G__55615.cljs$core$IFn$_invoke$arity$1 = G__55615__1;
G__55615.cljs$core$IFn$_invoke$arity$2 = G__55615__2;
G__55615.cljs$core$IFn$_invoke$arity$3 = G__55615__3;
G__55615.cljs$core$IFn$_invoke$arity$variadic = G__55615__4.cljs$core$IFn$_invoke$arity$variadic;
return G__55615;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__55621 = null;
var G__55621__2 = (function (a,b){
var G__55605 = (((a == null))?x:a);
var G__55606 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55605,G__55606) : f.call(null,G__55605,G__55606));
});
var G__55621__3 = (function (a,b,c){
var G__55607 = (((a == null))?x:a);
var G__55608 = (((b == null))?y:b);
var G__55609 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__55607,G__55608,G__55609) : f.call(null,G__55607,G__55608,G__55609));
});
var G__55621__4 = (function() { 
var G__55622__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__55622 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__55623__i = 0, G__55623__a = new Array(arguments.length -  3);
while (G__55623__i < G__55623__a.length) {G__55623__a[G__55623__i] = arguments[G__55623__i + 3]; ++G__55623__i;}
  ds = new cljs.core.IndexedSeq(G__55623__a,0);
} 
return G__55622__delegate.call(this,a,b,c,ds);};
G__55622.cljs$lang$maxFixedArity = 3;
G__55622.cljs$lang$applyTo = (function (arglist__55624){
var a = cljs.core.first(arglist__55624);
arglist__55624 = cljs.core.next(arglist__55624);
var b = cljs.core.first(arglist__55624);
arglist__55624 = cljs.core.next(arglist__55624);
var c = cljs.core.first(arglist__55624);
var ds = cljs.core.rest(arglist__55624);
return G__55622__delegate(a,b,c,ds);
});
G__55622.cljs$core$IFn$_invoke$arity$variadic = G__55622__delegate;
return G__55622;
})()
;
G__55621 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__55621__2.call(this,a,b);
case 3:
return G__55621__3.call(this,a,b,c);
default:
var G__55625 = null;
if (arguments.length > 3) {
var G__55626__i = 0, G__55626__a = new Array(arguments.length -  3);
while (G__55626__i < G__55626__a.length) {G__55626__a[G__55626__i] = arguments[G__55626__i + 3]; ++G__55626__i;}
G__55625 = new cljs.core.IndexedSeq(G__55626__a,0);
}
return G__55621__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__55625);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55621.cljs$lang$maxFixedArity = 3;
G__55621.cljs$lang$applyTo = G__55621__4.cljs$lang$applyTo;
G__55621.cljs$core$IFn$_invoke$arity$2 = G__55621__2;
G__55621.cljs$core$IFn$_invoke$arity$3 = G__55621__3;
G__55621.cljs$core$IFn$_invoke$arity$variadic = G__55621__4.cljs$core$IFn$_invoke$arity$variadic;
return G__55621;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__55627 = null;
var G__55627__2 = (function (a,b){
var G__55610 = (((a == null))?x:a);
var G__55611 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55610,G__55611) : f.call(null,G__55610,G__55611));
});
var G__55627__3 = (function (a,b,c){
var G__55612 = (((a == null))?x:a);
var G__55613 = (((b == null))?y:b);
var G__55614 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__55612,G__55613,G__55614) : f.call(null,G__55612,G__55613,G__55614));
});
var G__55627__4 = (function() { 
var G__55628__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__55628 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__55629__i = 0, G__55629__a = new Array(arguments.length -  3);
while (G__55629__i < G__55629__a.length) {G__55629__a[G__55629__i] = arguments[G__55629__i + 3]; ++G__55629__i;}
  ds = new cljs.core.IndexedSeq(G__55629__a,0);
} 
return G__55628__delegate.call(this,a,b,c,ds);};
G__55628.cljs$lang$maxFixedArity = 3;
G__55628.cljs$lang$applyTo = (function (arglist__55630){
var a = cljs.core.first(arglist__55630);
arglist__55630 = cljs.core.next(arglist__55630);
var b = cljs.core.first(arglist__55630);
arglist__55630 = cljs.core.next(arglist__55630);
var c = cljs.core.first(arglist__55630);
var ds = cljs.core.rest(arglist__55630);
return G__55628__delegate(a,b,c,ds);
});
G__55628.cljs$core$IFn$_invoke$arity$variadic = G__55628__delegate;
return G__55628;
})()
;
G__55627 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__55627__2.call(this,a,b);
case 3:
return G__55627__3.call(this,a,b,c);
default:
var G__55631 = null;
if (arguments.length > 3) {
var G__55632__i = 0, G__55632__a = new Array(arguments.length -  3);
while (G__55632__i < G__55632__a.length) {G__55632__a[G__55632__i] = arguments[G__55632__i + 3]; ++G__55632__i;}
G__55631 = new cljs.core.IndexedSeq(G__55632__a,0);
}
return G__55627__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__55631);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55627.cljs$lang$maxFixedArity = 3;
G__55627.cljs$lang$applyTo = G__55627__4.cljs$lang$applyTo;
G__55627.cljs$core$IFn$_invoke$arity$2 = G__55627__2;
G__55627.cljs$core$IFn$_invoke$arity$3 = G__55627__3;
G__55627.cljs$core$IFn$_invoke$arity$variadic = G__55627__4.cljs$core$IFn$_invoke$arity$variadic;
return G__55627;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___55681 = size;
var i_55682 = (0);
while(true){
if((i_55682 < n__4630__auto___55681)){
cljs.core.chunk_append(b,(function (){var G__55677 = (idx + i_55682);
var G__55678 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_55682);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55677,G__55678) : f.call(null,G__55677,G__55678));
})());

var G__55683 = (i_55682 + (1));
i_55682 = G__55683;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__55679 = idx;
var G__55680 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55679,G__55680) : f.call(null,G__55679,G__55680));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__55702 = null;
var G__55702__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__55702__1 = (function (result){
var G__55696 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__55696) : rf.call(null,G__55696));
});
var G__55702__2 = (function (result,input){
var v = (function (){var G__55697 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55697) : f.call(null,G__55697));
})();
if((v == null)){
return result;
} else {
var G__55698 = result;
var G__55699 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__55698,G__55699) : rf.call(null,G__55698,G__55699));
}
});
G__55702 = function(result,input){
switch(arguments.length){
case 0:
return G__55702__0.call(this);
case 1:
return G__55702__1.call(this,result);
case 2:
return G__55702__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55702.cljs$core$IFn$_invoke$arity$0 = G__55702__0;
G__55702.cljs$core$IFn$_invoke$arity$1 = G__55702__1;
G__55702.cljs$core$IFn$_invoke$arity$2 = G__55702__2;
return G__55702;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___55703 = size;
var i_55704 = (0);
while(true){
if((i_55704 < n__4630__auto___55703)){
var x_55705 = (function (){var G__55700 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_55704);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55700) : f.call(null,G__55700));
})();
if((x_55705 == null)){
} else {
cljs.core.chunk_append(b,x_55705);
}

var G__55706 = (i_55704 + (1));
i_55704 = G__55706;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__55701 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55701) : f.call(null,G__55701));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__55707 = this$__$1;
return goog.getUid(G__55707);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__55708 = cljs.core.seq(self__.watches);
var chunk__55709 = null;
var count__55710 = (0);
var i__55711 = (0);
while(true){
if((i__55711 < count__55710)){
var vec__55712 = chunk__55709.cljs$core$IIndexed$_nth$arity$2(null,i__55711);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55712,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55712,(1),null);
var G__55713_55722 = key;
var G__55714_55723 = this$__$1;
var G__55715_55724 = oldval;
var G__55716_55725 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__55713_55722,G__55714_55723,G__55715_55724,G__55716_55725) : f.call(null,G__55713_55722,G__55714_55723,G__55715_55724,G__55716_55725));

var G__55726 = seq__55708;
var G__55727 = chunk__55709;
var G__55728 = count__55710;
var G__55729 = (i__55711 + (1));
seq__55708 = G__55726;
chunk__55709 = G__55727;
count__55710 = G__55728;
i__55711 = G__55729;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__55708);
if(temp__4126__auto__){
var seq__55708__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__55708__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__55708__$1);
var G__55730 = cljs.core.chunk_rest(seq__55708__$1);
var G__55731 = c__4530__auto__;
var G__55732 = cljs.core.count(c__4530__auto__);
var G__55733 = (0);
seq__55708 = G__55730;
chunk__55709 = G__55731;
count__55710 = G__55732;
i__55711 = G__55733;
continue;
} else {
var vec__55717 = cljs.core.first(seq__55708__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55717,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55717,(1),null);
var G__55718_55734 = key;
var G__55719_55735 = this$__$1;
var G__55720_55736 = oldval;
var G__55721_55737 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__55718_55734,G__55719_55735,G__55720_55736,G__55721_55737) : f.call(null,G__55718_55734,G__55719_55735,G__55720_55736,G__55721_55737));

var G__55738 = cljs.core.next(seq__55708__$1);
var G__55739 = null;
var G__55740 = (0);
var G__55741 = (0);
seq__55708 = G__55738;
chunk__55709 = G__55739;
count__55710 = G__55740;
i__55711 = G__55741;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__55745__delegate = function (x,p__55742){
var map__55744 = p__55742;
var map__55744__$1 = ((cljs.core.seq_QMARK_(map__55744))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__55744):map__55744);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55744__$1,cljs.core.constant$keyword$13);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55744__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__55745 = function (x,var_args){
var p__55742 = null;
if (arguments.length > 1) {
var G__55746__i = 0, G__55746__a = new Array(arguments.length -  1);
while (G__55746__i < G__55746__a.length) {G__55746__a[G__55746__i] = arguments[G__55746__i + 1]; ++G__55746__i;}
  p__55742 = new cljs.core.IndexedSeq(G__55746__a,0);
} 
return G__55745__delegate.call(this,x,p__55742);};
G__55745.cljs$lang$maxFixedArity = 1;
G__55745.cljs$lang$applyTo = (function (arglist__55747){
var x = cljs.core.first(arglist__55747);
var p__55742 = cljs.core.rest(arglist__55747);
return G__55745__delegate(x,p__55742);
});
G__55745.cljs$core$IFn$_invoke$arity$variadic = G__55745__delegate;
return G__55745;
})()
;
atom = function(x,var_args){
var p__55742 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__55748 = null;
if (arguments.length > 1) {
var G__55749__i = 0, G__55749__a = new Array(arguments.length -  1);
while (G__55749__i < G__55749__a.length) {G__55749__a[G__55749__i] = arguments[G__55749__i + 1]; ++G__55749__i;}
G__55748 = new cljs.core.IndexedSeq(G__55749__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__55748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__55752 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__55752) : validate.call(null,G__55752));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__55753 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__55753) : cljs.core.pr_str.call(null,G__55753));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__55760 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__55760) : f.call(null,G__55760));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__55761 = a.state;
var G__55762 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55761,G__55762) : f.call(null,G__55761,G__55762));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__55763 = a.state;
var G__55764 = x;
var G__55765 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__55763,G__55764,G__55765) : f.call(null,G__55763,G__55764,G__55765));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__55766__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__55766 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__55767__i = 0, G__55767__a = new Array(arguments.length -  4);
while (G__55767__i < G__55767__a.length) {G__55767__a[G__55767__i] = arguments[G__55767__i + 4]; ++G__55767__i;}
  more = new cljs.core.IndexedSeq(G__55767__a,0);
} 
return G__55766__delegate.call(this,a,f,x,y,more);};
G__55766.cljs$lang$maxFixedArity = 4;
G__55766.cljs$lang$applyTo = (function (arglist__55768){
var a = cljs.core.first(arglist__55768);
arglist__55768 = cljs.core.next(arglist__55768);
var f = cljs.core.first(arglist__55768);
arglist__55768 = cljs.core.next(arglist__55768);
var x = cljs.core.first(arglist__55768);
arglist__55768 = cljs.core.next(arglist__55768);
var y = cljs.core.first(arglist__55768);
var more = cljs.core.rest(arglist__55768);
return G__55766__delegate(a,f,x,y,more);
});
G__55766.cljs$core$IFn$_invoke$arity$variadic = G__55766__delegate;
return G__55766;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__55769 = null;
if (arguments.length > 4) {
var G__55770__i = 0, G__55770__a = new Array(arguments.length -  4);
while (G__55770__i < G__55770__a.length) {G__55770__a[G__55770__i] = arguments[G__55770__i + 4]; ++G__55770__i;}
G__55769 = new cljs.core.IndexedSeq(G__55770__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__55769);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__55837 = null;
var G__55837__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__55837__1 = (function (result){
var G__55804 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__55804) : rf.call(null,G__55804));
});
var G__55837__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__55805 = i;
var G__55806 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55805,G__55806) : f.call(null,G__55805,G__55806));
})();
if((v == null)){
return result;
} else {
var G__55807 = result;
var G__55808 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__55807,G__55808) : rf.call(null,G__55807,G__55808));
}
});
G__55837 = function(result,input){
switch(arguments.length){
case 0:
return G__55837__0.call(this);
case 1:
return G__55837__1.call(this,result);
case 2:
return G__55837__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__55837.cljs$core$IFn$_invoke$arity$0 = G__55837__0;
G__55837.cljs$core$IFn$_invoke$arity$1 = G__55837__1;
G__55837.cljs$core$IFn$_invoke$arity$2 = G__55837__2;
return G__55837;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___55838 = size;
var i_55839 = (0);
while(true){
if((i_55839 < n__4630__auto___55838)){
var x_55840 = (function (){var G__55833 = (idx + i_55839);
var G__55834 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_55839);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55833,G__55834) : f.call(null,G__55833,G__55834));
})();
if((x_55840 == null)){
} else {
cljs.core.chunk_append(b,x_55840);
}

var G__55841 = (i_55839 + (1));
i_55839 = G__55841;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__55835 = idx;
var G__55836 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__55835,G__55836) : f.call(null,G__55835,G__55836));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__56055 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56055) : p.call(null,G__56055));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__56057 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56057) : p.call(null,G__56057));
})();
if(cljs.core.truth_(and__3731__auto__)){
var G__56058 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56058) : p.call(null,G__56058));
} else {
return and__3731__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__56060 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56060) : p.call(null,G__56060));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__56062 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56062) : p.call(null,G__56062));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var G__56063 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56063) : p.call(null,G__56063));
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__56232__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__56232 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__56233__i = 0, G__56233__a = new Array(arguments.length -  3);
while (G__56233__i < G__56233__a.length) {G__56233__a[G__56233__i] = arguments[G__56233__i + 3]; ++G__56233__i;}
  args = new cljs.core.IndexedSeq(G__56233__a,0);
} 
return G__56232__delegate.call(this,x,y,z,args);};
G__56232.cljs$lang$maxFixedArity = 3;
G__56232.cljs$lang$applyTo = (function (arglist__56234){
var x = cljs.core.first(arglist__56234);
arglist__56234 = cljs.core.next(arglist__56234);
var y = cljs.core.first(arglist__56234);
arglist__56234 = cljs.core.next(arglist__56234);
var z = cljs.core.first(arglist__56234);
var args = cljs.core.rest(arglist__56234);
return G__56232__delegate(x,y,z,args);
});
G__56232.cljs$core$IFn$_invoke$arity$variadic = G__56232__delegate;
return G__56232;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__56235 = null;
if (arguments.length > 3) {
var G__56236__i = 0, G__56236__a = new Array(arguments.length -  3);
while (G__56236__i < G__56236__a.length) {G__56236__a[G__56236__i] = arguments[G__56236__i + 3]; ++G__56236__i;}
G__56235 = new cljs.core.IndexedSeq(G__56236__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__56235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__56095 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56095) : p1.call(null,G__56095));
})();
if(cljs.core.truth_(and__3731__auto__)){
var G__56096 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56096) : p2.call(null,G__56096));
} else {
return and__3731__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__56098 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56098) : p1.call(null,G__56098));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__56100 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56100) : p1.call(null,G__56100));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var and__3731__auto____$2 = (function (){var G__56102 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56102) : p2.call(null,G__56102));
})();
if(cljs.core.truth_(and__3731__auto____$2)){
var G__56103 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56103) : p2.call(null,G__56103));
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__56105 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56105) : p1.call(null,G__56105));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__56107 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56107) : p1.call(null,G__56107));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var and__3731__auto____$2 = (function (){var G__56109 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56109) : p1.call(null,G__56109));
})();
if(cljs.core.truth_(and__3731__auto____$2)){
var and__3731__auto____$3 = (function (){var G__56111 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56111) : p2.call(null,G__56111));
})();
if(cljs.core.truth_(and__3731__auto____$3)){
var and__3731__auto____$4 = (function (){var G__56113 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56113) : p2.call(null,G__56113));
})();
if(cljs.core.truth_(and__3731__auto____$4)){
var G__56114 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56114) : p2.call(null,G__56114));
} else {
return and__3731__auto____$4;
}
} else {
return and__3731__auto____$3;
}
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__56237__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__55842_SHARP_){
var and__3731__auto__ = (function (){var G__56119 = p1__55842_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56119) : p1.call(null,G__56119));
})();
if(cljs.core.truth_(and__3731__auto__)){
var G__56120 = p1__55842_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56120) : p2.call(null,G__56120));
} else {
return and__3731__auto__;
}
}),args)));
};
var G__56237 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__56238__i = 0, G__56238__a = new Array(arguments.length -  3);
while (G__56238__i < G__56238__a.length) {G__56238__a[G__56238__i] = arguments[G__56238__i + 3]; ++G__56238__i;}
  args = new cljs.core.IndexedSeq(G__56238__a,0);
} 
return G__56237__delegate.call(this,x,y,z,args);};
G__56237.cljs$lang$maxFixedArity = 3;
G__56237.cljs$lang$applyTo = (function (arglist__56239){
var x = cljs.core.first(arglist__56239);
arglist__56239 = cljs.core.next(arglist__56239);
var y = cljs.core.first(arglist__56239);
arglist__56239 = cljs.core.next(arglist__56239);
var z = cljs.core.first(arglist__56239);
var args = cljs.core.rest(arglist__56239);
return G__56237__delegate(x,y,z,args);
});
G__56237.cljs$core$IFn$_invoke$arity$variadic = G__56237__delegate;
return G__56237;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__56240 = null;
if (arguments.length > 3) {
var G__56241__i = 0, G__56241__a = new Array(arguments.length -  3);
while (G__56241__i < G__56241__a.length) {G__56241__a[G__56241__i] = arguments[G__56241__i + 3]; ++G__56241__i;}
G__56240 = new cljs.core.IndexedSeq(G__56241__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__56240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__56166 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56166) : p1.call(null,G__56166));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__56168 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56168) : p2.call(null,G__56168));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var G__56169 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56169) : p3.call(null,G__56169));
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__56171 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56171) : p1.call(null,G__56171));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__56173 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56173) : p2.call(null,G__56173));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var and__3731__auto____$2 = (function (){var G__56175 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56175) : p3.call(null,G__56175));
})();
if(cljs.core.truth_(and__3731__auto____$2)){
var and__3731__auto____$3 = (function (){var G__56177 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56177) : p1.call(null,G__56177));
})();
if(cljs.core.truth_(and__3731__auto____$3)){
var and__3731__auto____$4 = (function (){var G__56179 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56179) : p2.call(null,G__56179));
})();
if(cljs.core.truth_(and__3731__auto____$4)){
var G__56180 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56180) : p3.call(null,G__56180));
} else {
return and__3731__auto____$4;
}
} else {
return and__3731__auto____$3;
}
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__56182 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56182) : p1.call(null,G__56182));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__56184 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56184) : p2.call(null,G__56184));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var and__3731__auto____$2 = (function (){var G__56186 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56186) : p3.call(null,G__56186));
})();
if(cljs.core.truth_(and__3731__auto____$2)){
var and__3731__auto____$3 = (function (){var G__56188 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56188) : p1.call(null,G__56188));
})();
if(cljs.core.truth_(and__3731__auto____$3)){
var and__3731__auto____$4 = (function (){var G__56190 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56190) : p2.call(null,G__56190));
})();
if(cljs.core.truth_(and__3731__auto____$4)){
var and__3731__auto____$5 = (function (){var G__56192 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56192) : p3.call(null,G__56192));
})();
if(cljs.core.truth_(and__3731__auto____$5)){
var and__3731__auto____$6 = (function (){var G__56194 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56194) : p1.call(null,G__56194));
})();
if(cljs.core.truth_(and__3731__auto____$6)){
var and__3731__auto____$7 = (function (){var G__56196 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56196) : p2.call(null,G__56196));
})();
if(cljs.core.truth_(and__3731__auto____$7)){
var G__56197 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56197) : p3.call(null,G__56197));
} else {
return and__3731__auto____$7;
}
} else {
return and__3731__auto____$6;
}
} else {
return and__3731__auto____$5;
}
} else {
return and__3731__auto____$4;
}
} else {
return and__3731__auto____$3;
}
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__56242__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__55843_SHARP_){
var and__3731__auto__ = (function (){var G__56204 = p1__55843_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56204) : p1.call(null,G__56204));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__56206 = p1__55843_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56206) : p2.call(null,G__56206));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var G__56207 = p1__55843_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56207) : p3.call(null,G__56207));
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
}),args)));
};
var G__56242 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__56243__i = 0, G__56243__a = new Array(arguments.length -  3);
while (G__56243__i < G__56243__a.length) {G__56243__a[G__56243__i] = arguments[G__56243__i + 3]; ++G__56243__i;}
  args = new cljs.core.IndexedSeq(G__56243__a,0);
} 
return G__56242__delegate.call(this,x,y,z,args);};
G__56242.cljs$lang$maxFixedArity = 3;
G__56242.cljs$lang$applyTo = (function (arglist__56244){
var x = cljs.core.first(arglist__56244);
arglist__56244 = cljs.core.next(arglist__56244);
var y = cljs.core.first(arglist__56244);
arglist__56244 = cljs.core.next(arglist__56244);
var z = cljs.core.first(arglist__56244);
var args = cljs.core.rest(arglist__56244);
return G__56242__delegate(x,y,z,args);
});
G__56242.cljs$core$IFn$_invoke$arity$variadic = G__56242__delegate;
return G__56242;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__56245 = null;
if (arguments.length > 3) {
var G__56246__i = 0, G__56246__a = new Array(arguments.length -  3);
while (G__56246__i < G__56246__a.length) {G__56246__a[G__56246__i] = arguments[G__56246__i + 3]; ++G__56246__i;}
G__56245 = new cljs.core.IndexedSeq(G__56246__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__56245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__56247__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__55844_SHARP_){
var G__56223 = x;
return (p1__55844_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__55844_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56223) : p1__55844_SHARP_.call(null,G__56223));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__55845_SHARP_){
var and__3731__auto__ = (function (){var G__56225 = x;
return (p1__55845_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__55845_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56225) : p1__55845_SHARP_.call(null,G__56225));
})();
if(cljs.core.truth_(and__3731__auto__)){
var G__56226 = y;
return (p1__55845_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__55845_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56226) : p1__55845_SHARP_.call(null,G__56226));
} else {
return and__3731__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__55846_SHARP_){
var and__3731__auto__ = (function (){var G__56228 = x;
return (p1__55846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__55846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56228) : p1__55846_SHARP_.call(null,G__56228));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__56230 = y;
return (p1__55846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__55846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56230) : p1__55846_SHARP_.call(null,G__56230));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var G__56231 = z;
return (p1__55846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__55846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56231) : p1__55846_SHARP_.call(null,G__56231));
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__56248__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__55847_SHARP_){
return cljs.core.every_QMARK_(p1__55847_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__56248 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__56249__i = 0, G__56249__a = new Array(arguments.length -  3);
while (G__56249__i < G__56249__a.length) {G__56249__a[G__56249__i] = arguments[G__56249__i + 3]; ++G__56249__i;}
  args = new cljs.core.IndexedSeq(G__56249__a,0);
} 
return G__56248__delegate.call(this,x,y,z,args);};
G__56248.cljs$lang$maxFixedArity = 3;
G__56248.cljs$lang$applyTo = (function (arglist__56250){
var x = cljs.core.first(arglist__56250);
arglist__56250 = cljs.core.next(arglist__56250);
var y = cljs.core.first(arglist__56250);
arglist__56250 = cljs.core.next(arglist__56250);
var z = cljs.core.first(arglist__56250);
var args = cljs.core.rest(arglist__56250);
return G__56248__delegate(x,y,z,args);
});
G__56248.cljs$core$IFn$_invoke$arity$variadic = G__56248__delegate;
return G__56248;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__56251 = null;
if (arguments.length > 3) {
var G__56252__i = 0, G__56252__a = new Array(arguments.length -  3);
while (G__56252__i < G__56252__a.length) {G__56252__a[G__56252__i] = arguments[G__56252__i + 3]; ++G__56252__i;}
G__56251 = new cljs.core.IndexedSeq(G__56252__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__56251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__56247 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__56253__i = 0, G__56253__a = new Array(arguments.length -  3);
while (G__56253__i < G__56253__a.length) {G__56253__a[G__56253__i] = arguments[G__56253__i + 3]; ++G__56253__i;}
  ps = new cljs.core.IndexedSeq(G__56253__a,0);
} 
return G__56247__delegate.call(this,p1,p2,p3,ps);};
G__56247.cljs$lang$maxFixedArity = 3;
G__56247.cljs$lang$applyTo = (function (arglist__56254){
var p1 = cljs.core.first(arglist__56254);
arglist__56254 = cljs.core.next(arglist__56254);
var p2 = cljs.core.first(arglist__56254);
arglist__56254 = cljs.core.next(arglist__56254);
var p3 = cljs.core.first(arglist__56254);
var ps = cljs.core.rest(arglist__56254);
return G__56247__delegate(p1,p2,p3,ps);
});
G__56247.cljs$core$IFn$_invoke$arity$variadic = G__56247__delegate;
return G__56247;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__56255 = null;
if (arguments.length > 3) {
var G__56256__i = 0, G__56256__a = new Array(arguments.length -  3);
while (G__56256__i < G__56256__a.length) {G__56256__a[G__56256__i] = arguments[G__56256__i + 3]; ++G__56256__i;}
G__56255 = new cljs.core.IndexedSeq(G__56256__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__56255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__56462 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56462) : p.call(null,G__56462));
});
var sp1__2 = (function (x,y){
var or__3743__auto__ = (function (){var G__56464 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56464) : p.call(null,G__56464));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__56465 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56465) : p.call(null,G__56465));
}
});
var sp1__3 = (function (x,y,z){
var or__3743__auto__ = (function (){var G__56467 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56467) : p.call(null,G__56467));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__56469 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56469) : p.call(null,G__56469));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var G__56470 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__56470) : p.call(null,G__56470));
}
}
});
var sp1__4 = (function() { 
var G__56631__delegate = function (x,y,z,args){
var or__3743__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__56631 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__56632__i = 0, G__56632__a = new Array(arguments.length -  3);
while (G__56632__i < G__56632__a.length) {G__56632__a[G__56632__i] = arguments[G__56632__i + 3]; ++G__56632__i;}
  args = new cljs.core.IndexedSeq(G__56632__a,0);
} 
return G__56631__delegate.call(this,x,y,z,args);};
G__56631.cljs$lang$maxFixedArity = 3;
G__56631.cljs$lang$applyTo = (function (arglist__56633){
var x = cljs.core.first(arglist__56633);
arglist__56633 = cljs.core.next(arglist__56633);
var y = cljs.core.first(arglist__56633);
arglist__56633 = cljs.core.next(arglist__56633);
var z = cljs.core.first(arglist__56633);
var args = cljs.core.rest(arglist__56633);
return G__56631__delegate(x,y,z,args);
});
G__56631.cljs$core$IFn$_invoke$arity$variadic = G__56631__delegate;
return G__56631;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__56634 = null;
if (arguments.length > 3) {
var G__56635__i = 0, G__56635__a = new Array(arguments.length -  3);
while (G__56635__i < G__56635__a.length) {G__56635__a[G__56635__i] = arguments[G__56635__i + 3]; ++G__56635__i;}
G__56634 = new cljs.core.IndexedSeq(G__56635__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__56634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3743__auto__ = (function (){var G__56502 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56502) : p1.call(null,G__56502));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__56503 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56503) : p2.call(null,G__56503));
}
});
var sp2__2 = (function (x,y){
var or__3743__auto__ = (function (){var G__56505 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56505) : p1.call(null,G__56505));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__56507 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56507) : p1.call(null,G__56507));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__56509 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56509) : p2.call(null,G__56509));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var G__56510 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56510) : p2.call(null,G__56510));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3743__auto__ = (function (){var G__56512 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56512) : p1.call(null,G__56512));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__56514 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56514) : p1.call(null,G__56514));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__56516 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56516) : p1.call(null,G__56516));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var or__3743__auto____$3 = (function (){var G__56518 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56518) : p2.call(null,G__56518));
})();
if(cljs.core.truth_(or__3743__auto____$3)){
return or__3743__auto____$3;
} else {
var or__3743__auto____$4 = (function (){var G__56520 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56520) : p2.call(null,G__56520));
})();
if(cljs.core.truth_(or__3743__auto____$4)){
return or__3743__auto____$4;
} else {
var G__56521 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56521) : p2.call(null,G__56521));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__56636__delegate = function (x,y,z,args){
var or__3743__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.some(((function (or__3743__auto__){
return (function (p1__56257_SHARP_){
var or__3743__auto____$1 = (function (){var G__56523 = p1__56257_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56523) : p1.call(null,G__56523));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var G__56524 = p1__56257_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56524) : p2.call(null,G__56524));
}
});})(or__3743__auto__))
,args);
}
};
var G__56636 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__56637__i = 0, G__56637__a = new Array(arguments.length -  3);
while (G__56637__i < G__56637__a.length) {G__56637__a[G__56637__i] = arguments[G__56637__i + 3]; ++G__56637__i;}
  args = new cljs.core.IndexedSeq(G__56637__a,0);
} 
return G__56636__delegate.call(this,x,y,z,args);};
G__56636.cljs$lang$maxFixedArity = 3;
G__56636.cljs$lang$applyTo = (function (arglist__56638){
var x = cljs.core.first(arglist__56638);
arglist__56638 = cljs.core.next(arglist__56638);
var y = cljs.core.first(arglist__56638);
arglist__56638 = cljs.core.next(arglist__56638);
var z = cljs.core.first(arglist__56638);
var args = cljs.core.rest(arglist__56638);
return G__56636__delegate(x,y,z,args);
});
G__56636.cljs$core$IFn$_invoke$arity$variadic = G__56636__delegate;
return G__56636;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__56639 = null;
if (arguments.length > 3) {
var G__56640__i = 0, G__56640__a = new Array(arguments.length -  3);
while (G__56640__i < G__56640__a.length) {G__56640__a[G__56640__i] = arguments[G__56640__i + 3]; ++G__56640__i;}
G__56639 = new cljs.core.IndexedSeq(G__56640__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__56639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3743__auto__ = (function (){var G__56570 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56570) : p1.call(null,G__56570));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__56572 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56572) : p2.call(null,G__56572));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var G__56573 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56573) : p3.call(null,G__56573));
}
}
});
var sp3__2 = (function (x,y){
var or__3743__auto__ = (function (){var G__56575 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56575) : p1.call(null,G__56575));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__56577 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56577) : p2.call(null,G__56577));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__56579 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56579) : p3.call(null,G__56579));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var or__3743__auto____$3 = (function (){var G__56581 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56581) : p1.call(null,G__56581));
})();
if(cljs.core.truth_(or__3743__auto____$3)){
return or__3743__auto____$3;
} else {
var or__3743__auto____$4 = (function (){var G__56583 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56583) : p2.call(null,G__56583));
})();
if(cljs.core.truth_(or__3743__auto____$4)){
return or__3743__auto____$4;
} else {
var G__56584 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56584) : p3.call(null,G__56584));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3743__auto__ = (function (){var G__56586 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56586) : p1.call(null,G__56586));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__56588 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56588) : p2.call(null,G__56588));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__56590 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56590) : p3.call(null,G__56590));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var or__3743__auto____$3 = (function (){var G__56592 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56592) : p1.call(null,G__56592));
})();
if(cljs.core.truth_(or__3743__auto____$3)){
return or__3743__auto____$3;
} else {
var or__3743__auto____$4 = (function (){var G__56594 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56594) : p2.call(null,G__56594));
})();
if(cljs.core.truth_(or__3743__auto____$4)){
return or__3743__auto____$4;
} else {
var or__3743__auto____$5 = (function (){var G__56596 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56596) : p3.call(null,G__56596));
})();
if(cljs.core.truth_(or__3743__auto____$5)){
return or__3743__auto____$5;
} else {
var or__3743__auto____$6 = (function (){var G__56598 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56598) : p1.call(null,G__56598));
})();
if(cljs.core.truth_(or__3743__auto____$6)){
return or__3743__auto____$6;
} else {
var or__3743__auto____$7 = (function (){var G__56600 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56600) : p2.call(null,G__56600));
})();
if(cljs.core.truth_(or__3743__auto____$7)){
return or__3743__auto____$7;
} else {
var G__56601 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56601) : p3.call(null,G__56601));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__56641__delegate = function (x,y,z,args){
var or__3743__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.some(((function (or__3743__auto__){
return (function (p1__56258_SHARP_){
var or__3743__auto____$1 = (function (){var G__56603 = p1__56258_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__56603) : p1.call(null,G__56603));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__56605 = p1__56258_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__56605) : p2.call(null,G__56605));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var G__56606 = p1__56258_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__56606) : p3.call(null,G__56606));
}
}
});})(or__3743__auto__))
,args);
}
};
var G__56641 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__56642__i = 0, G__56642__a = new Array(arguments.length -  3);
while (G__56642__i < G__56642__a.length) {G__56642__a[G__56642__i] = arguments[G__56642__i + 3]; ++G__56642__i;}
  args = new cljs.core.IndexedSeq(G__56642__a,0);
} 
return G__56641__delegate.call(this,x,y,z,args);};
G__56641.cljs$lang$maxFixedArity = 3;
G__56641.cljs$lang$applyTo = (function (arglist__56643){
var x = cljs.core.first(arglist__56643);
arglist__56643 = cljs.core.next(arglist__56643);
var y = cljs.core.first(arglist__56643);
arglist__56643 = cljs.core.next(arglist__56643);
var z = cljs.core.first(arglist__56643);
var args = cljs.core.rest(arglist__56643);
return G__56641__delegate(x,y,z,args);
});
G__56641.cljs$core$IFn$_invoke$arity$variadic = G__56641__delegate;
return G__56641;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__56644 = null;
if (arguments.length > 3) {
var G__56645__i = 0, G__56645__a = new Array(arguments.length -  3);
while (G__56645__i < G__56645__a.length) {G__56645__a[G__56645__i] = arguments[G__56645__i + 3]; ++G__56645__i;}
G__56644 = new cljs.core.IndexedSeq(G__56645__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__56644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__56646__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__56259_SHARP_){
var G__56622 = x;
return (p1__56259_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__56259_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56622) : p1__56259_SHARP_.call(null,G__56622));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__56260_SHARP_){
var or__3743__auto__ = (function (){var G__56624 = x;
return (p1__56260_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__56260_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56624) : p1__56260_SHARP_.call(null,G__56624));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__56625 = y;
return (p1__56260_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__56260_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56625) : p1__56260_SHARP_.call(null,G__56625));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__56261_SHARP_){
var or__3743__auto__ = (function (){var G__56627 = x;
return (p1__56261_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__56261_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56627) : p1__56261_SHARP_.call(null,G__56627));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__56629 = y;
return (p1__56261_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__56261_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56629) : p1__56261_SHARP_.call(null,G__56629));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var G__56630 = z;
return (p1__56261_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__56261_SHARP_.cljs$core$IFn$_invoke$arity$1(G__56630) : p1__56261_SHARP_.call(null,G__56630));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__56647__delegate = function (x,y,z,args){
var or__3743__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.some(((function (or__3743__auto__,ps__$1){
return (function (p1__56262_SHARP_){
return cljs.core.some(p1__56262_SHARP_,args);
});})(or__3743__auto__,ps__$1))
,ps__$1);
}
};
var G__56647 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__56648__i = 0, G__56648__a = new Array(arguments.length -  3);
while (G__56648__i < G__56648__a.length) {G__56648__a[G__56648__i] = arguments[G__56648__i + 3]; ++G__56648__i;}
  args = new cljs.core.IndexedSeq(G__56648__a,0);
} 
return G__56647__delegate.call(this,x,y,z,args);};
G__56647.cljs$lang$maxFixedArity = 3;
G__56647.cljs$lang$applyTo = (function (arglist__56649){
var x = cljs.core.first(arglist__56649);
arglist__56649 = cljs.core.next(arglist__56649);
var y = cljs.core.first(arglist__56649);
arglist__56649 = cljs.core.next(arglist__56649);
var z = cljs.core.first(arglist__56649);
var args = cljs.core.rest(arglist__56649);
return G__56647__delegate(x,y,z,args);
});
G__56647.cljs$core$IFn$_invoke$arity$variadic = G__56647__delegate;
return G__56647;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__56650 = null;
if (arguments.length > 3) {
var G__56651__i = 0, G__56651__a = new Array(arguments.length -  3);
while (G__56651__i < G__56651__a.length) {G__56651__a[G__56651__i] = arguments[G__56651__i + 3]; ++G__56651__i;}
G__56650 = new cljs.core.IndexedSeq(G__56651__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__56650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__56646 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__56652__i = 0, G__56652__a = new Array(arguments.length -  3);
while (G__56652__i < G__56652__a.length) {G__56652__a[G__56652__i] = arguments[G__56652__i + 3]; ++G__56652__i;}
  ps = new cljs.core.IndexedSeq(G__56652__a,0);
} 
return G__56646__delegate.call(this,p1,p2,p3,ps);};
G__56646.cljs$lang$maxFixedArity = 3;
G__56646.cljs$lang$applyTo = (function (arglist__56653){
var p1 = cljs.core.first(arglist__56653);
arglist__56653 = cljs.core.next(arglist__56653);
var p2 = cljs.core.first(arglist__56653);
arglist__56653 = cljs.core.next(arglist__56653);
var p3 = cljs.core.first(arglist__56653);
var ps = cljs.core.rest(arglist__56653);
return G__56646__delegate(p1,p2,p3,ps);
});
G__56646.cljs$core$IFn$_invoke$arity$variadic = G__56646__delegate;
return G__56646;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__56654 = null;
if (arguments.length > 3) {
var G__56655__i = 0, G__56655__a = new Array(arguments.length -  3);
while (G__56655__i < G__56655__a.length) {G__56655__a[G__56655__i] = arguments[G__56655__i + 3]; ++G__56655__i;}
G__56654 = new cljs.core.IndexedSeq(G__56655__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__56654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__56710 = null;
var G__56710__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__56710__1 = (function (result){
var G__56696 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__56696) : rf.call(null,G__56696));
});
var G__56710__2 = (function (result,input){
var G__56697 = result;
var G__56698 = (function (){var G__56699 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__56699) : f.call(null,G__56699));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__56697,G__56698) : rf.call(null,G__56697,G__56698));
});
var G__56710__3 = (function() { 
var G__56711__delegate = function (result,input,inputs){
var G__56700 = result;
var G__56701 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__56700,G__56701) : rf.call(null,G__56700,G__56701));
};
var G__56711 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__56712__i = 0, G__56712__a = new Array(arguments.length -  2);
while (G__56712__i < G__56712__a.length) {G__56712__a[G__56712__i] = arguments[G__56712__i + 2]; ++G__56712__i;}
  inputs = new cljs.core.IndexedSeq(G__56712__a,0);
} 
return G__56711__delegate.call(this,result,input,inputs);};
G__56711.cljs$lang$maxFixedArity = 2;
G__56711.cljs$lang$applyTo = (function (arglist__56713){
var result = cljs.core.first(arglist__56713);
arglist__56713 = cljs.core.next(arglist__56713);
var input = cljs.core.first(arglist__56713);
var inputs = cljs.core.rest(arglist__56713);
return G__56711__delegate(result,input,inputs);
});
G__56711.cljs$core$IFn$_invoke$arity$variadic = G__56711__delegate;
return G__56711;
})()
;
G__56710 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__56710__0.call(this);
case 1:
return G__56710__1.call(this,result);
case 2:
return G__56710__2.call(this,result,input);
default:
var G__56714 = null;
if (arguments.length > 2) {
var G__56715__i = 0, G__56715__a = new Array(arguments.length -  2);
while (G__56715__i < G__56715__a.length) {G__56715__a[G__56715__i] = arguments[G__56715__i + 2]; ++G__56715__i;}
G__56714 = new cljs.core.IndexedSeq(G__56715__a,0);
}
return G__56710__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__56714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__56710.cljs$lang$maxFixedArity = 2;
G__56710.cljs$lang$applyTo = G__56710__3.cljs$lang$applyTo;
G__56710.cljs$core$IFn$_invoke$arity$0 = G__56710__0;
G__56710.cljs$core$IFn$_invoke$arity$1 = G__56710__1;
G__56710.cljs$core$IFn$_invoke$arity$2 = G__56710__2;
G__56710.cljs$core$IFn$_invoke$arity$variadic = G__56710__3.cljs$core$IFn$_invoke$arity$variadic;
return G__56710;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___56716 = size;
var i_56717 = (0);
while(true){
if((i_56717 < n__4630__auto___56716)){
cljs.core.chunk_append(b,(function (){var G__56702 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_56717);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__56702) : f.call(null,G__56702));
})());

var G__56718 = (i_56717 + (1));
i_56717 = G__56718;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__56703 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__56703) : f.call(null,G__56703));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__56704 = cljs.core.first(s1);
var G__56705 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__56704,G__56705) : f.call(null,G__56704,G__56705));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__56706 = cljs.core.first(s1);
var G__56707 = cljs.core.first(s2);
var G__56708 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__56706,G__56707,G__56708) : f.call(null,G__56706,G__56707,G__56708));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__56719__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__56656_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__56656_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__56719 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__56720__i = 0, G__56720__a = new Array(arguments.length -  4);
while (G__56720__i < G__56720__a.length) {G__56720__a[G__56720__i] = arguments[G__56720__i + 4]; ++G__56720__i;}
  colls = new cljs.core.IndexedSeq(G__56720__a,0);
} 
return G__56719__delegate.call(this,f,c1,c2,c3,colls);};
G__56719.cljs$lang$maxFixedArity = 4;
G__56719.cljs$lang$applyTo = (function (arglist__56721){
var f = cljs.core.first(arglist__56721);
arglist__56721 = cljs.core.next(arglist__56721);
var c1 = cljs.core.first(arglist__56721);
arglist__56721 = cljs.core.next(arglist__56721);
var c2 = cljs.core.first(arglist__56721);
arglist__56721 = cljs.core.next(arglist__56721);
var c3 = cljs.core.first(arglist__56721);
var colls = cljs.core.rest(arglist__56721);
return G__56719__delegate(f,c1,c2,c3,colls);
});
G__56719.cljs$core$IFn$_invoke$arity$variadic = G__56719__delegate;
return G__56719;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__56722 = null;
if (arguments.length > 4) {
var G__56723__i = 0, G__56723__a = new Array(arguments.length -  4);
while (G__56723__i < G__56723__a.length) {G__56723__a[G__56723__i] = arguments[G__56723__i + 4]; ++G__56723__i;}
G__56722 = new cljs.core.IndexedSeq(G__56723__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__56722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__56732 = null;
var G__56732__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__56732__1 = (function (result){
var G__56729 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__56729) : rf.call(null,G__56729));
});
var G__56732__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__56730 = result;
var G__56731 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__56730,G__56731) : rf.call(null,G__56730,G__56731));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__56732 = function(result,input){
switch(arguments.length){
case 0:
return G__56732__0.call(this);
case 1:
return G__56732__1.call(this,result);
case 2:
return G__56732__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__56732.cljs$core$IFn$_invoke$arity$0 = G__56732__0;
G__56732.cljs$core$IFn$_invoke$arity$1 = G__56732__1;
G__56732.cljs$core$IFn$_invoke$arity$2 = G__56732__2;
return G__56732;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__56739 = null;
var G__56739__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__56739__1 = (function (result){
var G__56736 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__56736) : rf.call(null,G__56736));
});
var G__56739__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__56737 = result;
var G__56738 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__56737,G__56738) : rf.call(null,G__56737,G__56738));
}
});
G__56739 = function(result,input){
switch(arguments.length){
case 0:
return G__56739__0.call(this);
case 1:
return G__56739__1.call(this,result);
case 2:
return G__56739__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__56739.cljs$core$IFn$_invoke$arity$0 = G__56739__0;
G__56739.cljs$core$IFn$_invoke$arity$1 = G__56739__1;
G__56739.cljs$core$IFn$_invoke$arity$2 = G__56739__2;
return G__56739;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__56740 = (n__$1 - (1));
var G__56741 = cljs.core.rest(s);
n__$1 = G__56740;
coll__$1 = G__56741;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__56744 = cljs.core.next(s);
var G__56745 = cljs.core.next(lead);
s = G__56744;
lead = G__56745;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__56758 = null;
var G__56758__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__56758__1 = (function (result){
var G__56752 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__56752) : rf.call(null,G__56752));
});
var G__56758__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3731__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3731__auto__)){
var G__56753 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__56753) : pred.call(null,G__56753));
} else {
return and__3731__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__56754 = result;
var G__56755 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__56754,G__56755) : rf.call(null,G__56754,G__56755));
}
});
G__56758 = function(result,input){
switch(arguments.length){
case 0:
return G__56758__0.call(this);
case 1:
return G__56758__1.call(this,result);
case 2:
return G__56758__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__56758.cljs$core$IFn$_invoke$arity$0 = G__56758__0;
G__56758.cljs$core$IFn$_invoke$arity$1 = G__56758__1;
G__56758.cljs$core$IFn$_invoke$arity$2 = G__56758__2;
return G__56758;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3731__auto__ = s;
if(and__3731__auto__){
var G__56757 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__56757) : pred__$1.call(null,G__56757));
} else {
return and__3731__auto__;
}
})())){
var G__56759 = pred__$1;
var G__56760 = cljs.core.rest(s);
pred__$1 = G__56759;
coll__$1 = G__56760;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__56769 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__56769) : f.call(null,G__56769));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__56772__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__56772 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__56773__i = 0, G__56773__a = new Array(arguments.length -  2);
while (G__56773__i < G__56773__a.length) {G__56773__a[G__56773__i] = arguments[G__56773__i + 2]; ++G__56773__i;}
  colls = new cljs.core.IndexedSeq(G__56773__a,0);
} 
return G__56772__delegate.call(this,c1,c2,colls);};
G__56772.cljs$lang$maxFixedArity = 2;
G__56772.cljs$lang$applyTo = (function (arglist__56774){
var c1 = cljs.core.first(arglist__56774);
arglist__56774 = cljs.core.next(arglist__56774);
var c2 = cljs.core.first(arglist__56774);
var colls = cljs.core.rest(arglist__56774);
return G__56772__delegate(c1,c2,colls);
});
G__56772.cljs$core$IFn$_invoke$arity$variadic = G__56772__delegate;
return G__56772;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__56775 = null;
if (arguments.length > 2) {
var G__56776__i = 0, G__56776__a = new Array(arguments.length -  2);
while (G__56776__i < G__56776__a.length) {G__56776__a[G__56776__i] = arguments[G__56776__i + 2]; ++G__56776__i;}
G__56775 = new cljs.core.IndexedSeq(G__56776__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__56775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__56785__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__56785 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__56786__i = 0, G__56786__a = new Array(arguments.length -  1);
while (G__56786__i < G__56786__a.length) {G__56786__a[G__56786__i] = arguments[G__56786__i + 1]; ++G__56786__i;}
  colls = new cljs.core.IndexedSeq(G__56786__a,0);
} 
return G__56785__delegate.call(this,f,colls);};
G__56785.cljs$lang$maxFixedArity = 1;
G__56785.cljs$lang$applyTo = (function (arglist__56787){
var f = cljs.core.first(arglist__56787);
var colls = cljs.core.rest(arglist__56787);
return G__56785__delegate(f,colls);
});
G__56785.cljs$core$IFn$_invoke$arity$variadic = G__56785__delegate;
return G__56785;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__56788 = null;
if (arguments.length > 1) {
var G__56789__i = 0, G__56789__a = new Array(arguments.length -  1);
while (G__56789__i < G__56789__a.length) {G__56789__a[G__56789__i] = arguments[G__56789__i + 1]; ++G__56789__i;}
G__56788 = new cljs.core.IndexedSeq(G__56789__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__56788);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__56808 = null;
var G__56808__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__56808__1 = (function (result){
var G__56802 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__56802) : rf.call(null,G__56802));
});
var G__56808__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__56803 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__56803) : pred.call(null,G__56803));
})())){
var G__56804 = result;
var G__56805 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__56804,G__56805) : rf.call(null,G__56804,G__56805));
} else {
return result;
}
});
G__56808 = function(result,input){
switch(arguments.length){
case 0:
return G__56808__0.call(this);
case 1:
return G__56808__1.call(this,result);
case 2:
return G__56808__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__56808.cljs$core$IFn$_invoke$arity$0 = G__56808__0;
G__56808.cljs$core$IFn$_invoke$arity$1 = G__56808__1;
G__56808.cljs$core$IFn$_invoke$arity$2 = G__56808__2;
return G__56808;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___56809 = size;
var i_56810 = (0);
while(true){
if((i_56810 < n__4630__auto___56809)){
if(cljs.core.truth_((function (){var G__56806 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_56810);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__56806) : pred.call(null,G__56806));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_56810));
} else {
}

var G__56811 = (i_56810 + (1));
i_56810 = G__56811;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__56807 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__56807) : pred.call(null,G__56807));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__56818 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__56818) : branch_QMARK_.call(null,G__56818));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__56819 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__56819) : children.call(null,G__56819));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__56820_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__56820_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__56823 = to;
if(G__56823){
var bit__4417__auto__ = (G__56823.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4417__auto__) || (G__56823.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__56824 = to;
if(G__56824){
var bit__4417__auto__ = (G__56824.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4417__auto__) || (G__56824.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__56826 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__56826) : f.call(null,G__56826));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__56827__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__56827 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__56828__i = 0, G__56828__a = new Array(arguments.length -  4);
while (G__56828__i < G__56828__a.length) {G__56828__a[G__56828__i] = arguments[G__56828__i + 4]; ++G__56828__i;}
  colls = new cljs.core.IndexedSeq(G__56828__a,0);
} 
return G__56827__delegate.call(this,f,c1,c2,c3,colls);};
G__56827.cljs$lang$maxFixedArity = 4;
G__56827.cljs$lang$applyTo = (function (arglist__56829){
var f = cljs.core.first(arglist__56829);
arglist__56829 = cljs.core.next(arglist__56829);
var c1 = cljs.core.first(arglist__56829);
arglist__56829 = cljs.core.next(arglist__56829);
var c2 = cljs.core.first(arglist__56829);
arglist__56829 = cljs.core.next(arglist__56829);
var c3 = cljs.core.first(arglist__56829);
var colls = cljs.core.rest(arglist__56829);
return G__56827__delegate(f,c1,c2,c3,colls);
});
G__56827.cljs$core$IFn$_invoke$arity$variadic = G__56827__delegate;
return G__56827;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__56830 = null;
if (arguments.length > 4) {
var G__56831__i = 0, G__56831__a = new Array(arguments.length -  4);
while (G__56831__i < G__56831__a.length) {G__56831__a[G__56831__i] = arguments[G__56831__i + 4]; ++G__56831__i;}
G__56830 = new cljs.core.IndexedSeq(G__56831__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__56830);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__56833 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__56833) : pred.call(null,G__56833));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__56848 = m__$1;
if(G__56848){
var bit__4424__auto__ = (G__56848.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4424__auto__) || (G__56848.cljs$core$ILookup$)){
return true;
} else {
if((!G__56848.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__56848);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__56848);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__56849 = sentinel;
var G__56850 = m__$2;
var G__56851 = cljs.core.next(ks__$1);
sentinel = G__56849;
m__$1 = G__56850;
ks__$1 = G__56851;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__56852,v){
var vec__56857 = p__56852;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56857,(0),null);
var ks = cljs.core.nthnext(vec__56857,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__56858,f){
var vec__56896 = p__56858;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56896,(0),null);
var ks = cljs.core.nthnext(vec__56896,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__56897 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__56897) : f.call(null,G__56897));
})());
}
});
var update_in__4 = (function (m,p__56859,f,a){
var vec__56898 = p__56859;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56898,(0),null);
var ks = cljs.core.nthnext(vec__56898,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__56899 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__56900 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__56899,G__56900) : f.call(null,G__56899,G__56900));
})());
}
});
var update_in__5 = (function (m,p__56860,f,a,b){
var vec__56901 = p__56860;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56901,(0),null);
var ks = cljs.core.nthnext(vec__56901,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__56902 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__56903 = a;
var G__56904 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__56902,G__56903,G__56904) : f.call(null,G__56902,G__56903,G__56904));
})());
}
});
var update_in__6 = (function (m,p__56861,f,a,b,c){
var vec__56905 = p__56861;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56905,(0),null);
var ks = cljs.core.nthnext(vec__56905,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__56906 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__56907 = a;
var G__56908 = b;
var G__56909 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__56906,G__56907,G__56908,G__56909) : f.call(null,G__56906,G__56907,G__56908,G__56909));
})());
}
});
var update_in__7 = (function() { 
var G__56911__delegate = function (m,p__56862,f,a,b,c,args){
var vec__56910 = p__56862;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__56910,(0),null);
var ks = cljs.core.nthnext(vec__56910,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__56911 = function (m,p__56862,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__56912__i = 0, G__56912__a = new Array(arguments.length -  6);
while (G__56912__i < G__56912__a.length) {G__56912__a[G__56912__i] = arguments[G__56912__i + 6]; ++G__56912__i;}
  args = new cljs.core.IndexedSeq(G__56912__a,0);
} 
return G__56911__delegate.call(this,m,p__56862,f,a,b,c,args);};
G__56911.cljs$lang$maxFixedArity = 6;
G__56911.cljs$lang$applyTo = (function (arglist__56913){
var m = cljs.core.first(arglist__56913);
arglist__56913 = cljs.core.next(arglist__56913);
var p__56862 = cljs.core.first(arglist__56913);
arglist__56913 = cljs.core.next(arglist__56913);
var f = cljs.core.first(arglist__56913);
arglist__56913 = cljs.core.next(arglist__56913);
var a = cljs.core.first(arglist__56913);
arglist__56913 = cljs.core.next(arglist__56913);
var b = cljs.core.first(arglist__56913);
arglist__56913 = cljs.core.next(arglist__56913);
var c = cljs.core.first(arglist__56913);
var args = cljs.core.rest(arglist__56913);
return G__56911__delegate(m,p__56862,f,a,b,c,args);
});
G__56911.cljs$core$IFn$_invoke$arity$variadic = G__56911__delegate;
return G__56911;
})()
;
update_in = function(m,p__56862,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__56862,f);
case 4:
return update_in__4.call(this,m,p__56862,f,a);
case 5:
return update_in__5.call(this,m,p__56862,f,a,b);
case 6:
return update_in__6.call(this,m,p__56862,f,a,b,c);
default:
var G__56914 = null;
if (arguments.length > 6) {
var G__56915__i = 0, G__56915__a = new Array(arguments.length -  6);
while (G__56915__i < G__56915__a.length) {G__56915__a[G__56915__i] = arguments[G__56915__i + 6]; ++G__56915__i;}
G__56914 = new cljs.core.IndexedSeq(G__56915__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__56862,f,a,b,c, G__56914);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__56926 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__56926) : f.call(null,G__56926));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__56927 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__56928 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__56927,G__56928) : f.call(null,G__56927,G__56928));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__56929 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__56930 = x;
var G__56931 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__56929,G__56930,G__56931) : f.call(null,G__56929,G__56930,G__56931));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__56932 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__56933 = x;
var G__56934 = y;
var G__56935 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__56932,G__56933,G__56934,G__56935) : f.call(null,G__56932,G__56933,G__56934,G__56935));
})());
});
var update__7 = (function() { 
var G__56936__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__56936 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__56937__i = 0, G__56937__a = new Array(arguments.length -  6);
while (G__56937__i < G__56937__a.length) {G__56937__a[G__56937__i] = arguments[G__56937__i + 6]; ++G__56937__i;}
  more = new cljs.core.IndexedSeq(G__56937__a,0);
} 
return G__56936__delegate.call(this,m,k,f,x,y,z,more);};
G__56936.cljs$lang$maxFixedArity = 6;
G__56936.cljs$lang$applyTo = (function (arglist__56938){
var m = cljs.core.first(arglist__56938);
arglist__56938 = cljs.core.next(arglist__56938);
var k = cljs.core.first(arglist__56938);
arglist__56938 = cljs.core.next(arglist__56938);
var f = cljs.core.first(arglist__56938);
arglist__56938 = cljs.core.next(arglist__56938);
var x = cljs.core.first(arglist__56938);
arglist__56938 = cljs.core.next(arglist__56938);
var y = cljs.core.first(arglist__56938);
arglist__56938 = cljs.core.next(arglist__56938);
var z = cljs.core.first(arglist__56938);
var more = cljs.core.rest(arglist__56938);
return G__56936__delegate(m,k,f,x,y,z,more);
});
G__56936.cljs$core$IFn$_invoke$arity$variadic = G__56936__delegate;
return G__56936;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__56939 = null;
if (arguments.length > 6) {
var G__56940__i = 0, G__56940__a = new Array(arguments.length -  6);
while (G__56940__i < G__56940__a.length) {G__56940__a[G__56940__i] = arguments[G__56940__i + 6]; ++G__56940__i;}
G__56939 = new cljs.core.IndexedSeq(G__56940__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__56939);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__56941 = (ll - (5));
var G__56942 = r;
ll = G__56941;
ret = G__56942;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__56947 = cljs.core.pv_aget(node,(0));
var G__56948 = (level - (5));
node = G__56947;
level = G__56948;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__56949 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__56950 = (level - (5));
node = G__56949;
level = G__56950;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__56960 = init__$2;
var G__56961 = (j + i);
var G__56962 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__56960,G__56961,G__56962) : f.call(null,G__56960,G__56961,G__56962));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__56973 = (j + (1));
var G__56974 = init__$3;
j = G__56973;
init__$2 = G__56974;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__56963 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__56963) : cljs.core.deref.call(null,G__56963));
} else {
var G__56975 = (i + len);
var G__56976 = init__$2;
i = G__56975;
init__$1 = G__56976;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__56964 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__56964) : cljs.core.tv_editable_root.call(null,G__56964));
})(),(function (){var G__56965 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__56965) : cljs.core.tv_editable_tail.call(null,G__56965));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__56966 = init__$2;
var G__56967 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__56966,G__56967) : f.call(null,G__56966,G__56967));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__56977 = (j + (1));
var G__56978 = init__$3;
j = G__56977;
init__$2 = G__56978;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__56968 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__56968) : cljs.core.deref.call(null,G__56968));
} else {
var G__56979 = (i + len);
var G__56980 = init__$2;
i = G__56979;
init__$1 = G__56980;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__56969 = coll__$1;
var G__56970 = cljs.core.first_array_for_longvec(coll__$1);
var G__56971 = (0);
var G__56972 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__56969,G__56970,G__56971,G__56972) : cljs.core.chunked_seq.call(null,G__56969,G__56970,G__56971,G__56972));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4630__auto___56981 = len;
var i_56982 = (0);
while(true){
if((i_56982 < n__4630__auto___56981)){
(new_tail[i_56982] = (self__.tail[i_56982]));

var G__56983 = (i_56982 + (1));
i_56982 = G__56983;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__56984 = null;
var G__56984__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__56984__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__56984 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__56984__2.call(this,self__,k);
case 3:
return G__56984__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__56984.cljs$core$IFn$_invoke$arity$2 = G__56984__2;
G__56984.cljs$core$IFn$_invoke$arity$3 = G__56984__3;
return G__56984;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args56959){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args56959)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__56985 = (i + (1));
var G__56986 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__56985;
out = G__56986;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__56987__i = 0, G__56987__a = new Array(arguments.length -  0);
while (G__56987__i < G__56987__a.length) {G__56987__a[G__56987__i] = arguments[G__56987__i + 0]; ++G__56987__i;}
  args = new cljs.core.IndexedSeq(G__56987__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__56988){
var args = cljs.core.seq(arglist__56988);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__56989 = self__.vec;
var G__56990 = self__.node;
var G__56991 = self__.i;
var G__56992 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__56989,G__56990,G__56991,G__56992) : cljs.core.chunked_seq.call(null,G__56989,G__56990,G__56991,G__56992));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__56993 = self__.vec;
var G__56994 = (self__.i + self__.off);
var G__56995 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__56993,G__56994,G__56995) : cljs.core.subvec.call(null,G__56993,G__56994,G__56995));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__56996 = self__.vec;
var G__56997 = (self__.i + self__.off);
var G__56998 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__56996,G__56997,G__56998) : cljs.core.subvec.call(null,G__56996,G__56997,G__56998));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__56999 = self__.vec;
var G__57000 = self__.node;
var G__57001 = self__.i;
var G__57002 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__56999,G__57000,G__57001,G__57002) : cljs.core.chunked_seq.call(null,G__56999,G__57000,G__57001,G__57002));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__57003 = self__.vec;
var G__57004 = cljs.core.unchecked_array_for(self__.vec,end);
var G__57005 = end;
var G__57006 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__57003,G__57004,G__57005,G__57006) : cljs.core.chunked_seq.call(null,G__57003,G__57004,G__57005,G__57006));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__57007 = self__.vec;
var G__57008 = self__.node;
var G__57009 = self__.i;
var G__57010 = self__.off;
var G__57011 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__57007,G__57008,G__57009,G__57010,G__57011) : cljs.core.chunked_seq.call(null,G__57007,G__57008,G__57009,G__57010,G__57011));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__57012 = self__.vec;
var G__57013 = cljs.core.unchecked_array_for(self__.vec,end);
var G__57014 = end;
var G__57015 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__57012,G__57013,G__57014,G__57015) : cljs.core.chunked_seq.call(null,G__57012,G__57013,G__57014,G__57015));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__57017 = self__.meta;
var G__57018 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__57019 = self__.start;
var G__57020 = (function (){var x__4060__auto__ = self__.end;
var y__4061__auto__ = (v_pos + (1));
return ((x__4060__auto__ > y__4061__auto__) ? x__4060__auto__ : y__4061__auto__);
})();
var G__57021 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__57017,G__57018,G__57019,G__57020,G__57021) : cljs.core.build_subvec.call(null,G__57017,G__57018,G__57019,G__57020,G__57021));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__57022 = self__.meta;
var G__57023 = self__.v;
var G__57024 = self__.start;
var G__57025 = (self__.end - (1));
var G__57026 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__57022,G__57023,G__57024,G__57025,G__57026) : cljs.core.build_subvec.call(null,G__57022,G__57023,G__57024,G__57025,G__57026));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__57028 = meta__$1;
var G__57029 = self__.v;
var G__57030 = self__.start;
var G__57031 = self__.end;
var G__57032 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__57028,G__57029,G__57030,G__57031,G__57032) : cljs.core.build_subvec.call(null,G__57028,G__57029,G__57030,G__57031,G__57032));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__57033 = self__.meta;
var G__57034 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__57035 = self__.start;
var G__57036 = (self__.end + (1));
var G__57037 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__57033,G__57034,G__57035,G__57036,G__57037) : cljs.core.build_subvec.call(null,G__57033,G__57034,G__57035,G__57036,G__57037));
});

cljs.core.Subvec.prototype.call = (function() {
var G__57038 = null;
var G__57038__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__57038__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__57038 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57038__2.call(this,self__,k);
case 3:
return G__57038__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57038.cljs$core$IFn$_invoke$arity$2 = G__57038__2;
G__57038.cljs$core$IFn$_invoke$arity$3 = G__57038__3;
return G__57038;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args57016){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57016)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__57039 = meta;
var G__57040 = v.v;
var G__57041 = (v.start + start);
var G__57042 = (v.start + end);
var G__57043 = __hash;
meta = G__57039;
v = G__57040;
start = G__57041;
end = G__57042;
__hash = G__57043;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj57050 = {};
return obj57050;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__57058 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__57059 = (level - (5));
node = G__57058;
level = G__57059;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__57063 = null;
var G__57063__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__57063__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__57063 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57063__2.call(this,self__,k);
case 3:
return G__57063__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57063.cljs$core$IFn$_invoke$arity$2 = G__57063__2;
G__57063.cljs$core$IFn$_invoke$arity$3 = G__57063__3;
return G__57063;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args57060){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57060)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3743__auto__ = self__.front;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3743__auto__ = self__.rear;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__57064 = (i + incr);
i = G__57064;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__57065 = (i + (1));
var G__57066 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__57065;
out = G__57066;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj57070 = {};
return obj57070;
})();
var l = ks.length;
var i_57071 = (0);
while(true){
if((i_57071 < l)){
var k_57072 = (ks[i_57071]);
(new_obj[k_57072] = (obj[k_57072]));

var G__57073 = (i_57071 + (1));
i_57071 = G__57073;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3731__auto__ = (function (){var G__57077 = k;
return goog.isString(G__57077);
})();
if(cljs.core.truth_(and__3731__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3731__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__57078 = init__$1;
var G__57079 = k;
var G__57080 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__57078,G__57079,G__57080) : f.call(null,G__57078,G__57079,G__57080));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__57081 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57081) : cljs.core.deref.call(null,G__57081));
} else {
var G__57087 = cljs.core.rest(keys__$1);
var G__57088 = init__$2;
keys__$1 = G__57087;
init__$1 = G__57088;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3731__auto__ = (function (){var G__57083 = k;
return goog.isString(G__57083);
})();
if(cljs.core.truth_(and__3731__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3731__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__57084 = k;
return goog.isString(G__57084);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3731__auto__ = (function (){var G__57086 = k;
return goog.isString(G__57086);
})();
if(cljs.core.truth_(and__3731__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3731__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__57074_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__57074_SHARP_,(self__.strobj[p1__57074_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__57089 = null;
var G__57089__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__57089__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__57089 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57089__2.call(this,self__,k);
case 3:
return G__57089__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57089.cljs$core$IFn$_invoke$arity$2 = G__57089__2;
G__57089.cljs$core$IFn$_invoke$arity$3 = G__57089__3;
return G__57089;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args57075){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57075)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj57091 = {};
return obj57091;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__57092 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57092,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57092,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__57093 = (i + (2));
i = G__57093;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__57094 = (i + (2));
i = G__57094;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__57095 = (i + (2));
i = G__57095;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__57096 = (i + (2));
i = G__57096;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__57097 = (i + (2));
i = G__57097;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3743__auto__ = (function (){var G__57101 = k;
return goog.isString(G__57101);
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_57102 = (0);
while(true){
if((i_57102 < l)){
(narr[i_57102] = (arr[i_57102]));

var G__57103 = (i_57102 + (1));
i_57102 = G__57103;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__57105 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__57105) : cljs.core.keys.call(null,G__57105));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__57106 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__57106) : cljs.core.vals.call(null,G__57106));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__57107 = cljs.core.seq(coll);
var chunk__57108 = null;
var count__57109 = (0);
var i__57110 = (0);
while(true){
if((i__57110 < count__57109)){
var vec__57111 = chunk__57108.cljs$core$IIndexed$_nth$arity$2(null,i__57110);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57111,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57111,(1),null);
var G__57112_57125 = v;
var G__57113_57126 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57112_57125,G__57113_57126) : f.call(null,G__57112_57125,G__57113_57126));

var G__57127 = seq__57107;
var G__57128 = chunk__57108;
var G__57129 = count__57109;
var G__57130 = (i__57110 + (1));
seq__57107 = G__57127;
chunk__57108 = G__57128;
count__57109 = G__57129;
i__57110 = G__57130;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__57107);
if(temp__4126__auto__){
var seq__57107__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__57107__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__57107__$1);
var G__57131 = cljs.core.chunk_rest(seq__57107__$1);
var G__57132 = c__4530__auto__;
var G__57133 = cljs.core.count(c__4530__auto__);
var G__57134 = (0);
seq__57107 = G__57131;
chunk__57108 = G__57132;
count__57109 = G__57133;
i__57110 = G__57134;
continue;
} else {
var vec__57114 = cljs.core.first(seq__57107__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57114,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57114,(1),null);
var G__57115_57135 = v;
var G__57116_57136 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57115_57135,G__57116_57136) : f.call(null,G__57115_57135,G__57116_57136));

var G__57137 = cljs.core.next(seq__57107__$1);
var G__57138 = null;
var G__57139 = (0);
var G__57140 = (0);
seq__57107 = G__57137;
chunk__57108 = G__57138;
count__57109 = G__57139;
i__57110 = G__57140;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__57117 = init__$1;
var G__57118 = (self__.arr[i]);
var G__57119 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__57117,G__57118,G__57119) : f.call(null,G__57117,G__57118,G__57119));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__57120 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57120) : cljs.core.deref.call(null,G__57120));
} else {
var G__57141 = (i + (2));
var G__57142 = init__$2;
i = G__57141;
init__$1 = G__57142;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__57121 = other;
if(G__57121){
var bit__4417__auto__ = (G__57121.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4417__auto__) || (G__57121.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__57143 = (i + (2));
i = G__57143;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj57123 = {};
return obj57123;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__57144 = (s + (2));
var G__57145 = d;
s = G__57144;
d = G__57145;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__57146 = (s + (2));
var G__57147 = (d + (2));
s = G__57146;
d = G__57147;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__57124 = cljs.core.aclone(self__.arr);
(G__57124[(idx + (1))] = v);

return G__57124;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__57148 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__57149 = cljs.core.next(es);
ret = G__57148;
es = G__57149;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__57150 = null;
var G__57150__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__57150__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__57150 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57150__2.call(this,self__,k);
case 3:
return G__57150__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57150.cljs$core$IFn$_invoke$arity$2 = G__57150__2;
G__57150.cljs$core$IFn$_invoke$arity$3 = G__57150__3;
return G__57150;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args57104){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57104)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__57151 = (i + (2));
var G__57152 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__57151;
ret = G__57152;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__57153_57161 = self__.arr;
G__57153_57161.pop();

G__57153_57161.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__57154 = self__.len;
var G__57155 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__57154,G__57155) : cljs.core.array__GT_transient_hash_map.call(null,G__57154,G__57155));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__57156 = o;
if(G__57156){
var bit__4424__auto__ = (G__57156.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4424__auto__) || (G__57156.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__57156.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__57156);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__57156);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__57157 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__57157) : cljs.core.key.call(null,G__57157));
})(),(function (){var G__57158 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__57158) : cljs.core.val.call(null,G__57158));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__57162 = cljs.core.next(es);
var G__57163 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__57159 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__57159) : cljs.core.key.call(null,G__57159));
})(),(function (){var G__57160 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__57160) : cljs.core.val.call(null,G__57160));
})());
es = G__57162;
tcoll__$2 = G__57163;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__57164 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__57165 = (i + (2));
out = G__57164;
i = G__57165;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__57168 = cljs.core.aclone(arr);
(G__57168[i] = a);

return G__57168;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__57169 = cljs.core.aclone(arr);
(G__57169[i] = a);

(G__57169[j] = b);

return G__57169;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__57174 = init__$1;
var G__57175 = k;
var G__57176 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__57174,G__57175,G__57176) : f.call(null,G__57174,G__57175,G__57176));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__57177 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57177) : cljs.core.deref.call(null,G__57177));
} else {
var G__57178 = (i + (2));
var G__57179 = init__$2;
i = G__57178;
init__$1 = G__57179;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__57180 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__57180) : cljs.core.create_inode_seq.call(null,G__57180));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_57194 = (0);
var j_57195 = (0);
while(true){
if((i_57194 < (32))){
if((((self__.bitmap >>> i_57194) & (1)) === (0))){
var G__57196 = (i_57194 + (1));
var G__57197 = j_57195;
i_57194 = G__57196;
j_57195 = G__57197;
continue;
} else {
(nodes[i_57194] = ((!(((self__.arr[j_57195]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_57195])),(self__.arr[j_57195]),(self__.arr[(j_57195 + (1))]),added_leaf_QMARK_):(self__.arr[(j_57195 + (1))])));

var G__57198 = (i_57194 + (1));
var G__57199 = (j_57195 + (2));
i_57194 = G__57198;
j_57195 = G__57199;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__57181 = edit__$1;
var G__57182 = (shift + (5));
var G__57183 = key_or_nil;
var G__57184 = val_or_node;
var G__57185 = hash;
var G__57186 = key;
var G__57187 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__57181,G__57182,G__57183,G__57184,G__57185,G__57186,G__57187) : cljs.core.create_node.call(null,G__57181,G__57182,G__57183,G__57184,G__57185,G__57186,G__57187));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_57200 = (0);
var j_57201 = (0);
while(true){
if((i_57200 < (32))){
if((((self__.bitmap >>> i_57200) & (1)) === (0))){
var G__57202 = (i_57200 + (1));
var G__57203 = j_57201;
i_57200 = G__57202;
j_57201 = G__57203;
continue;
} else {
(nodes[i_57200] = ((!(((self__.arr[j_57201]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_57201])),(self__.arr[j_57201]),(self__.arr[(j_57201 + (1))]),added_leaf_QMARK_):(self__.arr[(j_57201 + (1))])));

var G__57204 = (i_57200 + (1));
var G__57205 = (j_57201 + (2));
i_57200 = G__57204;
j_57201 = G__57205;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__57188 = (shift + (5));
var G__57189 = key_or_nil;
var G__57190 = val_or_node;
var G__57191 = hash;
var G__57192 = key;
var G__57193 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__57188,G__57189,G__57190,G__57191,G__57192,G__57193) : cljs.core.create_node.call(null,G__57188,G__57189,G__57190,G__57191,G__57192,G__57193));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__57206 = (i + (1));
var G__57207 = (j + (2));
var G__57208 = (bitmap | ((1) << i));
i = G__57206;
j = G__57207;
bitmap = G__57208;
continue;
} else {
var G__57209 = (i + (1));
var G__57210 = j;
var G__57211 = bitmap;
i = G__57209;
j = G__57210;
bitmap = G__57211;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__57212 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__57212) : cljs.core.create_array_node_seq.call(null,G__57212));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__57213 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57213) : cljs.core.deref.call(null,G__57213));
} else {
var G__57214 = (i + (1));
var G__57215 = init__$2;
i = G__57214;
init__$1 = G__57215;
continue;
}
} else {
var G__57216 = (i + (1));
var G__57217 = init__$1;
i = G__57216;
init__$1 = G__57217;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__57218 = (i + (2));
i = G__57218;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__57219 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__57219) : cljs.core.create_inode_seq.call(null,G__57219));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__57220 = self__.nodes;
var G__57221 = (self__.i + (2));
var G__57222 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__57220,G__57221,G__57222) : cljs.core.create_inode_seq.call(null,G__57220,G__57221,G__57222));
} else {
var G__57223 = self__.nodes;
var G__57224 = self__.i;
var G__57225 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__57223,G__57224,G__57225) : cljs.core.create_inode_seq.call(null,G__57223,G__57224,G__57225));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__57229 = (j + (2));
j = G__57229;
continue;
}
} else {
var G__57230 = (j + (2));
j = G__57230;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__57231 = null;
var G__57232 = self__.nodes;
var G__57233 = self__.i;
var G__57234 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__57231,G__57232,G__57233,G__57234) : cljs.core.create_array_node_seq.call(null,G__57231,G__57232,G__57233,G__57234));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__57239 = (j + (1));
j = G__57239;
continue;
}
} else {
var G__57240 = (j + (1));
j = G__57240;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__57242 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__57242) : cljs.core.keys.call(null,G__57242));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__57243 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__57243) : cljs.core.vals.call(null,G__57243));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__57244 = cljs.core.seq(coll);
var chunk__57245 = null;
var count__57246 = (0);
var i__57247 = (0);
while(true){
if((i__57247 < count__57246)){
var vec__57248 = chunk__57245.cljs$core$IIndexed$_nth$arity$2(null,i__57247);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57248,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57248,(1),null);
var G__57249_57260 = v;
var G__57250_57261 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57249_57260,G__57250_57261) : f.call(null,G__57249_57260,G__57250_57261));

var G__57262 = seq__57244;
var G__57263 = chunk__57245;
var G__57264 = count__57246;
var G__57265 = (i__57247 + (1));
seq__57244 = G__57262;
chunk__57245 = G__57263;
count__57246 = G__57264;
i__57247 = G__57265;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__57244);
if(temp__4126__auto__){
var seq__57244__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__57244__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__57244__$1);
var G__57266 = cljs.core.chunk_rest(seq__57244__$1);
var G__57267 = c__4530__auto__;
var G__57268 = cljs.core.count(c__4530__auto__);
var G__57269 = (0);
seq__57244 = G__57266;
chunk__57245 = G__57267;
count__57246 = G__57268;
i__57247 = G__57269;
continue;
} else {
var vec__57251 = cljs.core.first(seq__57244__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57251,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57251,(1),null);
var G__57252_57270 = v;
var G__57253_57271 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57252_57270,G__57253_57271) : f.call(null,G__57252_57270,G__57253_57271));

var G__57272 = cljs.core.next(seq__57244__$1);
var G__57273 = null;
var G__57274 = (0);
var G__57275 = (0);
seq__57244 = G__57272;
chunk__57245 = G__57273;
count__57246 = G__57274;
i__57247 = G__57275;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__57254 = init;
var G__57255 = null;
var G__57256 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__57254,G__57255,G__57256) : f.call(null,G__57254,G__57255,G__57256));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__57257 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57257) : cljs.core.deref.call(null,G__57257));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj57259 = {};
return obj57259;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__57276 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__57277 = cljs.core.next(es);
ret = G__57276;
es = G__57277;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__57278 = null;
var G__57278__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__57278__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__57278 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57278__2.call(this,self__,k);
case 3:
return G__57278__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57278.cljs$core$IFn$_invoke$arity$2 = G__57278__2;
G__57278.cljs$core$IFn$_invoke$arity$3 = G__57278__3;
return G__57278;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args57241){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57241)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__57279 = (i + (1));
var G__57280 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__57279;
out = G__57280;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__57281 = o;
if(G__57281){
var bit__4424__auto__ = (G__57281.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4424__auto__) || (G__57281.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__57281.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__57281);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__57281);
}
})()){
return tcoll.assoc_BANG_((function (){var G__57282 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__57282) : cljs.core.key.call(null,G__57282));
})(),(function (){var G__57283 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__57283) : cljs.core.val.call(null,G__57283));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__57286 = cljs.core.next(es);
var G__57287 = tcoll__$1.assoc_BANG_((function (){var G__57284 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__57284) : cljs.core.key.call(null,G__57284));
})(),(function (){var G__57285 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__57285) : cljs.core.val.call(null,G__57285));
})());
es = G__57286;
tcoll__$1 = G__57287;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__57288 = ((ascending_QMARK_)?t.left:t.right);
var G__57289 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__57288;
stack__$1 = G__57289;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__57302 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57302) : cljs.core.deref.call(null,G__57302));
} else {
var init__$2 = (function (){var G__57303 = init__$1;
var G__57304 = node.key;
var G__57305 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__57303,G__57304,G__57305) : f.call(null,G__57303,G__57304,G__57305));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__57306 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57306) : cljs.core.deref.call(null,G__57306));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__57307 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57307) : cljs.core.deref.call(null,G__57307));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__57309 = null;
var G__57309__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__57309__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__57309 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57309__2.call(this,self__,k);
case 3:
return G__57309__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57309.cljs$core$IFn$_invoke$arity$2 = G__57309__2;
G__57309.cljs$core$IFn$_invoke$arity$3 = G__57309__3;
return G__57309;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args57308){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57308)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__57311 = null;
var G__57311__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__57311__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__57311 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57311__2.call(this,self__,k);
case 3:
return G__57311__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57311.cljs$core$IFn$_invoke$arity$2 = G__57311__2;
G__57311.cljs$core$IFn$_invoke$arity$3 = G__57311__3;
return G__57311;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args57310){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57310)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__57324 = k;
var G__57325 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__57324,G__57325) : comp.call(null,G__57324,G__57325));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__57344 = k;
var G__57345 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__57344,G__57345) : comp.call(null,G__57344,G__57345));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__57356 = k;
var G__57357 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__57356,G__57357) : comp.call(null,G__57356,G__57357));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__57359 = cljs.core.seq(coll);
var chunk__57360 = null;
var count__57361 = (0);
var i__57362 = (0);
while(true){
if((i__57362 < count__57361)){
var vec__57363 = chunk__57360.cljs$core$IIndexed$_nth$arity$2(null,i__57362);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57363,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57363,(1),null);
var G__57364_57376 = v;
var G__57365_57377 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57364_57376,G__57365_57377) : f.call(null,G__57364_57376,G__57365_57377));

var G__57378 = seq__57359;
var G__57379 = chunk__57360;
var G__57380 = count__57361;
var G__57381 = (i__57362 + (1));
seq__57359 = G__57378;
chunk__57360 = G__57379;
count__57361 = G__57380;
i__57362 = G__57381;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__57359);
if(temp__4126__auto__){
var seq__57359__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__57359__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__57359__$1);
var G__57382 = cljs.core.chunk_rest(seq__57359__$1);
var G__57383 = c__4530__auto__;
var G__57384 = cljs.core.count(c__4530__auto__);
var G__57385 = (0);
seq__57359 = G__57382;
chunk__57360 = G__57383;
count__57361 = G__57384;
i__57362 = G__57385;
continue;
} else {
var vec__57366 = cljs.core.first(seq__57359__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57366,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57366,(1),null);
var G__57367_57386 = v;
var G__57368_57387 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57367_57386,G__57368_57387) : f.call(null,G__57367_57386,G__57368_57387));

var G__57388 = cljs.core.next(seq__57359__$1);
var G__57389 = null;
var G__57390 = (0);
var G__57391 = (0);
seq__57359 = G__57388;
chunk__57360 = G__57389;
count__57361 = G__57390;
i__57362 = G__57391;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__57369 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__57369) : cljs.core.keys.call(null,G__57369));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__57370 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__57370) : cljs.core.vals.call(null,G__57370));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__57371 = k;
var G__57372 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__57371,G__57372) : self__.comp.call(null,G__57371,G__57372));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__57392 = t.left;
t = G__57392;
continue;
} else {
var G__57393 = t.right;
t = G__57393;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__57394 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__57395 = cljs.core.next(es);
ret = G__57394;
es = G__57395;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__57396 = null;
var G__57396__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__57396__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__57396 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57396__2.call(this,self__,k);
case 3:
return G__57396__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57396.cljs$core$IFn$_invoke$arity$2 = G__57396__2;
G__57396.cljs$core$IFn$_invoke$arity$3 = G__57396__3;
return G__57396;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args57358){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57358)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__57373 = k;
var G__57374 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__57373,G__57374) : self__.comp.call(null,G__57373,G__57374));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__57397 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__57398 = t.left;
stack = G__57397;
t = G__57398;
continue;
} else {
var G__57399 = stack;
var G__57400 = t.right;
stack = G__57399;
t = G__57400;
continue;
}
} else {
if((c > (0))){
var G__57401 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__57402 = t.right;
stack = G__57401;
t = G__57402;
continue;
} else {
var G__57403 = stack;
var G__57404 = t.left;
stack = G__57403;
t = G__57404;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__57375 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__57375) : cljs.core.key.call(null,G__57375));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__57405 = cljs.core.nnext(in$);
var G__57406 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__57405;
out = G__57406;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__57407__i = 0, G__57407__a = new Array(arguments.length -  0);
while (G__57407__i < G__57407__a.length) {G__57407__a[G__57407__i] = arguments[G__57407__i + 0]; ++G__57407__i;}
  keyvals = new cljs.core.IndexedSeq(G__57407__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__57408){
var keyvals = cljs.core.seq(arglist__57408);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__57409__i = 0, G__57409__a = new Array(arguments.length -  0);
while (G__57409__i < G__57409__a.length) {G__57409__a[G__57409__i] = arguments[G__57409__i + 0]; ++G__57409__i;}
  keyvals = new cljs.core.IndexedSeq(G__57409__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__57410){
var keyvals = cljs.core.seq(arglist__57410);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj57414 = {};
return obj57414;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__57415 = cljs.core.nnext(kvs);
kvs = G__57415;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__57416__i = 0, G__57416__a = new Array(arguments.length -  0);
while (G__57416__i < G__57416__a.length) {G__57416__a[G__57416__i] = arguments[G__57416__i + 0]; ++G__57416__i;}
  keyvals = new cljs.core.IndexedSeq(G__57416__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__57417){
var keyvals = cljs.core.seq(arglist__57417);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__57418 = cljs.core.nnext(in$);
var G__57419 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__57418;
out = G__57419;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__57420__i = 0, G__57420__a = new Array(arguments.length -  0);
while (G__57420__i < G__57420__a.length) {G__57420__a[G__57420__i] = arguments[G__57420__i + 0]; ++G__57420__i;}
  keyvals = new cljs.core.IndexedSeq(G__57420__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__57421){
var keyvals = cljs.core.seq(arglist__57421);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__57422 = cljs.core.nnext(in$);
var G__57423 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__57422;
out = G__57423;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__57424__i = 0, G__57424__a = new Array(arguments.length -  1);
while (G__57424__i < G__57424__a.length) {G__57424__a[G__57424__i] = arguments[G__57424__i + 1]; ++G__57424__i;}
  keyvals = new cljs.core.IndexedSeq(G__57424__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__57425){
var comparator = cljs.core.first(arglist__57425);
var keyvals = cljs.core.rest(arglist__57425);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__57426 = self__.mseq;
if(G__57426){
var bit__4424__auto__ = (G__57426.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4424__auto__) || (G__57426.cljs$core$INext$)){
return true;
} else {
if((!G__57426.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__57426);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__57426);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__57427 = self__.mseq;
if(G__57427){
var bit__4424__auto__ = (G__57427.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4424__auto__) || (G__57427.cljs$core$INext$)){
return true;
} else {
if((!G__57427.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__57427);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__57427);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__57428 = self__.mseq;
if(G__57428){
var bit__4424__auto__ = (G__57428.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4424__auto__) || (G__57428.cljs$core$INext$)){
return true;
} else {
if((!G__57428.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__57428);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__57428);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__57429 = self__.mseq;
if(G__57429){
var bit__4424__auto__ = (G__57429.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4424__auto__) || (G__57429.cljs$core$INext$)){
return true;
} else {
if((!G__57429.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__57429);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__57429);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__57430_SHARP_,p2__57431_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3743__auto__ = p1__57430_SHARP_;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__57431_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__57432__i = 0, G__57432__a = new Array(arguments.length -  0);
while (G__57432__i < G__57432__a.length) {G__57432__a[G__57432__i] = arguments[G__57432__i + 0]; ++G__57432__i;}
  maps = new cljs.core.IndexedSeq(G__57432__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__57433){
var maps = cljs.core.seq(arglist__57433);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__57436 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__57437 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57436,G__57437) : f.call(null,G__57436,G__57437));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3743__auto__ = m1;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__57438__i = 0, G__57438__a = new Array(arguments.length -  1);
while (G__57438__i < G__57438__a.length) {G__57438__a[G__57438__i] = arguments[G__57438__i + 1]; ++G__57438__i;}
  maps = new cljs.core.IndexedSeq(G__57438__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__57439){
var f = cljs.core.first(arglist__57439);
var maps = cljs.core.rest(arglist__57439);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$14);
var G__57440 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$14))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__57441 = cljs.core.next(keys);
ret = G__57440;
keys = G__57441;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__57444 = cljs.core.seq(coll);
var chunk__57445 = null;
var count__57446 = (0);
var i__57447 = (0);
while(true){
if((i__57447 < count__57446)){
var vec__57448 = chunk__57445.cljs$core$IIndexed$_nth$arity$2(null,i__57447);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57448,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57448,(1),null);
var G__57449_57454 = v;
var G__57450_57455 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57449_57454,G__57450_57455) : f.call(null,G__57449_57454,G__57450_57455));

var G__57456 = seq__57444;
var G__57457 = chunk__57445;
var G__57458 = count__57446;
var G__57459 = (i__57447 + (1));
seq__57444 = G__57456;
chunk__57445 = G__57457;
count__57446 = G__57458;
i__57447 = G__57459;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__57444);
if(temp__4126__auto__){
var seq__57444__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__57444__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__57444__$1);
var G__57460 = cljs.core.chunk_rest(seq__57444__$1);
var G__57461 = c__4530__auto__;
var G__57462 = cljs.core.count(c__4530__auto__);
var G__57463 = (0);
seq__57444 = G__57460;
chunk__57445 = G__57461;
count__57446 = G__57462;
i__57447 = G__57463;
continue;
} else {
var vec__57451 = cljs.core.first(seq__57444__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57451,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57451,(1),null);
var G__57452_57464 = v;
var G__57453_57465 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57452_57464,G__57453_57465) : f.call(null,G__57452_57464,G__57453_57465));

var G__57466 = cljs.core.next(seq__57444__$1);
var G__57467 = null;
var G__57468 = (0);
var G__57469 = (0);
seq__57444 = G__57466;
chunk__57445 = G__57467;
count__57446 = G__57468;
i__57447 = G__57469;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__57442_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__57442_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__57470 = null;
var G__57470__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__57470__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__57470 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57470__2.call(this,self__,k);
case 3:
return G__57470__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57470.cljs$core$IFn$_invoke$arity$2 = G__57470__2;
G__57470.cljs$core$IFn$_invoke$arity$3 = G__57470__3;
return G__57470;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args57443){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57443)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__57471 = (i + (1));
var G__57472 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__57471;
out = G__57472;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__57473 = (i + (1));
var G__57474 = cljs.core._conj_BANG_(out,(items[i]));
i = G__57473;
out = G__57474;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__57476 = null;
var G__57476__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__57476__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__57476 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57476__2.call(this,self__,k);
case 3:
return G__57476__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57476.cljs$core$IFn$_invoke$arity$2 = G__57476__2;
G__57476.cljs$core$IFn$_invoke$arity$3 = G__57476__3;
return G__57476;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args57475){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57475)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__57479 = cljs.core.seq(coll);
var chunk__57480 = null;
var count__57481 = (0);
var i__57482 = (0);
while(true){
if((i__57482 < count__57481)){
var vec__57483 = chunk__57480.cljs$core$IIndexed$_nth$arity$2(null,i__57482);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57483,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57483,(1),null);
var G__57484_57489 = v;
var G__57485_57490 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57484_57489,G__57485_57490) : f.call(null,G__57484_57489,G__57485_57490));

var G__57491 = seq__57479;
var G__57492 = chunk__57480;
var G__57493 = count__57481;
var G__57494 = (i__57482 + (1));
seq__57479 = G__57491;
chunk__57480 = G__57492;
count__57481 = G__57493;
i__57482 = G__57494;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__57479);
if(temp__4126__auto__){
var seq__57479__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__57479__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__57479__$1);
var G__57495 = cljs.core.chunk_rest(seq__57479__$1);
var G__57496 = c__4530__auto__;
var G__57497 = cljs.core.count(c__4530__auto__);
var G__57498 = (0);
seq__57479 = G__57495;
chunk__57480 = G__57496;
count__57481 = G__57497;
i__57482 = G__57498;
continue;
} else {
var vec__57486 = cljs.core.first(seq__57479__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57486,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57486,(1),null);
var G__57487_57499 = v;
var G__57488_57500 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57487_57499,G__57488_57500) : f.call(null,G__57487_57499,G__57488_57500));

var G__57501 = cljs.core.next(seq__57479__$1);
var G__57502 = null;
var G__57503 = (0);
var G__57504 = (0);
seq__57479 = G__57501;
chunk__57480 = G__57502;
count__57481 = G__57503;
i__57482 = G__57504;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__57477_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__57477_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__57505 = null;
var G__57505__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__57505__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__57505 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__57505__2.call(this,self__,k);
case 3:
return G__57505__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57505.cljs$core$IFn$_invoke$arity$2 = G__57505__2;
G__57505.cljs$core$IFn$_invoke$arity$3 = G__57505__3;
return G__57505;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args57478){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args57478)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4624__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4624__auto__.length)){
var G__57506 = (i + (1));
var G__57507 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__57506;
res = G__57507;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__57508 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__57509 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__57508;
out = G__57509;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__57510__delegate = function (keys){
return cljs.core.set(keys);
};
var G__57510 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__57511__i = 0, G__57511__a = new Array(arguments.length -  0);
while (G__57511__i < G__57511__a.length) {G__57511__a[G__57511__i] = arguments[G__57511__i + 0]; ++G__57511__i;}
  keys = new cljs.core.IndexedSeq(G__57511__a,0);
} 
return G__57510__delegate.call(this,keys);};
G__57510.cljs$lang$maxFixedArity = 0;
G__57510.cljs$lang$applyTo = (function (arglist__57512){
var keys = cljs.core.seq(arglist__57512);
return G__57510__delegate(keys);
});
G__57510.cljs$core$IFn$_invoke$arity$variadic = G__57510__delegate;
return G__57510;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__57513 = null;
if (arguments.length > 0) {
var G__57514__i = 0, G__57514__a = new Array(arguments.length -  0);
while (G__57514__i < G__57514__a.length) {G__57514__a[G__57514__i] = arguments[G__57514__i + 0]; ++G__57514__i;}
G__57513 = new cljs.core.IndexedSeq(G__57514__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__57513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__57515__i = 0, G__57515__a = new Array(arguments.length -  0);
while (G__57515__i < G__57515__a.length) {G__57515__a[G__57515__i] = arguments[G__57515__i + 0]; ++G__57515__i;}
  keys = new cljs.core.IndexedSeq(G__57515__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__57516){
var keys = cljs.core.seq(arglist__57516);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__57517__i = 0, G__57517__a = new Array(arguments.length -  1);
while (G__57517__i < G__57517__a.length) {G__57517__a[G__57517__i] = arguments[G__57517__i + 1]; ++G__57517__i;}
  keys = new cljs.core.IndexedSeq(G__57517__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__57518){
var comparator = cljs.core.first(arglist__57518);
var keys = cljs.core.rest(arglist__57518);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__57519_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__57519_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__57519_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__57520_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__57520_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__57520_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__57531,seen__$1){
while(true){
var vec__57532 = p__57531;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57532,(0),null);
var xs__$1 = vec__57532;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__57533 = cljs.core.rest(s);
var G__57534 = seen__$1;
p__57531 = G__57533;
seen__$1 = G__57534;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__57535 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__57536 = cljs.core.next(s__$1);
ret = G__57535;
s__$1 = G__57536;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__57538 = x;
if(G__57538){
var bit__4417__auto__ = (G__57538.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4417__auto__) || (G__57538.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__57539 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__57540 = cljs.core.next(ks);
var G__57541 = cljs.core.next(vs);
map = G__57539;
ks = G__57540;
vs = G__57541;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__57552 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__57552) : k.call(null,G__57552));
})() > (function (){var G__57553 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__57553) : k.call(null,G__57553));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__57554__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__57542_SHARP_,p2__57543_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__57542_SHARP_,p2__57543_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__57554 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__57555__i = 0, G__57555__a = new Array(arguments.length -  3);
while (G__57555__i < G__57555__a.length) {G__57555__a[G__57555__i] = arguments[G__57555__i + 3]; ++G__57555__i;}
  more = new cljs.core.IndexedSeq(G__57555__a,0);
} 
return G__57554__delegate.call(this,k,x,y,more);};
G__57554.cljs$lang$maxFixedArity = 3;
G__57554.cljs$lang$applyTo = (function (arglist__57556){
var k = cljs.core.first(arglist__57556);
arglist__57556 = cljs.core.next(arglist__57556);
var x = cljs.core.first(arglist__57556);
arglist__57556 = cljs.core.next(arglist__57556);
var y = cljs.core.first(arglist__57556);
var more = cljs.core.rest(arglist__57556);
return G__57554__delegate(k,x,y,more);
});
G__57554.cljs$core$IFn$_invoke$arity$variadic = G__57554__delegate;
return G__57554;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__57557 = null;
if (arguments.length > 3) {
var G__57558__i = 0, G__57558__a = new Array(arguments.length -  3);
while (G__57558__i < G__57558__a.length) {G__57558__a[G__57558__i] = arguments[G__57558__i + 3]; ++G__57558__i;}
G__57557 = new cljs.core.IndexedSeq(G__57558__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__57557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__57569 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__57569) : k.call(null,G__57569));
})() < (function (){var G__57570 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__57570) : k.call(null,G__57570));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__57571__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__57559_SHARP_,p2__57560_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__57559_SHARP_,p2__57560_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__57571 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__57572__i = 0, G__57572__a = new Array(arguments.length -  3);
while (G__57572__i < G__57572__a.length) {G__57572__a[G__57572__i] = arguments[G__57572__i + 3]; ++G__57572__i;}
  more = new cljs.core.IndexedSeq(G__57572__a,0);
} 
return G__57571__delegate.call(this,k,x,y,more);};
G__57571.cljs$lang$maxFixedArity = 3;
G__57571.cljs$lang$applyTo = (function (arglist__57573){
var k = cljs.core.first(arglist__57573);
arglist__57573 = cljs.core.next(arglist__57573);
var x = cljs.core.first(arglist__57573);
arglist__57573 = cljs.core.next(arglist__57573);
var y = cljs.core.first(arglist__57573);
var more = cljs.core.rest(arglist__57573);
return G__57571__delegate(k,x,y,more);
});
G__57571.cljs$core$IFn$_invoke$arity$variadic = G__57571__delegate;
return G__57571;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__57574 = null;
if (arguments.length > 3) {
var G__57575__i = 0, G__57575__a = new Array(arguments.length -  3);
while (G__57575__i < G__57575__a.length) {G__57575__a[G__57575__i] = arguments[G__57575__i + 3]; ++G__57575__i;}
G__57574 = new cljs.core.IndexedSeq(G__57575__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__57574);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__57592 = null;
var G__57592__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__57592__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__57587 = result;
var G__57588 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__57587,G__57588) : rf.call(null,G__57587,G__57588));
})());
})());
var G__57589 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__57589) : rf.call(null,G__57589));
});
var G__57592__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__57590 = result;
var G__57591 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__57590,G__57591) : rf.call(null,G__57590,G__57591));
} else {
return result;
}
});
G__57592 = function(result,input){
switch(arguments.length){
case 0:
return G__57592__0.call(this);
case 1:
return G__57592__1.call(this,result);
case 2:
return G__57592__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57592.cljs$core$IFn$_invoke$arity$0 = G__57592__0;
G__57592.cljs$core$IFn$_invoke$arity$1 = G__57592__1;
G__57592.cljs$core$IFn$_invoke$arity$2 = G__57592__2;
return G__57592;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__57605 = null;
var G__57605__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__57605__1 = (function (result){
var G__57600 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__57600) : rf.call(null,G__57600));
});
var G__57605__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__57601 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__57601) : pred.call(null,G__57601));
})())){
var G__57602 = result;
var G__57603 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__57602,G__57603) : rf.call(null,G__57602,G__57603));
} else {
return cljs.core.reduced(result);
}
});
G__57605 = function(result,input){
switch(arguments.length){
case 0:
return G__57605__0.call(this);
case 1:
return G__57605__1.call(this,result);
case 2:
return G__57605__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57605.cljs$core$IFn$_invoke$arity$0 = G__57605__0;
G__57605.cljs$core$IFn$_invoke$arity$1 = G__57605__1;
G__57605.cljs$core$IFn$_invoke$arity$2 = G__57605__2;
return G__57605;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__57604 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__57604) : pred.call(null,G__57604));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__57610 = (function (){var G__57612 = cljs.core._entry_key(sc,e);
var G__57613 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__57612,G__57613) : comp.call(null,G__57612,G__57613));
})();
var G__57611 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__57610,G__57611) : test.call(null,G__57610,G__57611));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__57617 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57617,(0),null);
var s = vec__57617;
if(cljs.core.truth_((function (){var G__57618 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__57618) : include.call(null,G__57618));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__57619 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57619,(0),null);
var s = vec__57619;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__57623 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57623,(0),null);
var s = vec__57623;
if(cljs.core.truth_((function (){var G__57624 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__57624) : include.call(null,G__57624));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__57625 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57625,(0),null);
var s = vec__57625;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__57626 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__57626) : Math.ceil.call(null,G__57626));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__57627 = ret;
var G__57628 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57627,G__57628) : f.call(null,G__57627,G__57628));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__57629 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57629) : cljs.core.deref.call(null,G__57629));
} else {
var G__57630 = (i + self__.step);
var G__57631 = ret__$1;
i = G__57630;
ret = G__57631;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__57649 = null;
var G__57649__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__57649__1 = (function (result){
var G__57646 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__57646) : rf.call(null,G__57646));
});
var G__57649__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__57647 = result;
var G__57648 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__57647,G__57648) : rf.call(null,G__57647,G__57648));
} else {
return result;
}
});
G__57649 = function(result,input){
switch(arguments.length){
case 0:
return G__57649__0.call(this);
case 1:
return G__57649__1.call(this,result);
case 2:
return G__57649__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57649.cljs$core$IFn$_invoke$arity$0 = G__57649__0;
G__57649.cljs$core$IFn$_invoke$arity$1 = G__57649__1;
G__57649.cljs$core$IFn$_invoke$arity$2 = G__57649__2;
return G__57649;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (a,pa){
return (function() {
var G__57671 = null;
var G__57671__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__57671__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__57662 = result;
var G__57663 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__57662,G__57663) : rf.call(null,G__57662,G__57663));
})());
})());
var G__57664 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__57664) : rf.call(null,G__57664));
});
var G__57671__2 = (function (result,input){
var pval = (function (){var G__57665 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57665) : cljs.core.deref.call(null,G__57665));
})();
var val = (function (){var G__57666 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__57666) : f.call(null,G__57666));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$15)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__57667 = result;
var G__57668 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__57667,G__57668) : rf.call(null,G__57667,G__57668));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__57671 = function(result,input){
switch(arguments.length){
case 0:
return G__57671__0.call(this);
case 1:
return G__57671__1.call(this,result);
case 2:
return G__57671__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57671.cljs$core$IFn$_invoke$arity$0 = G__57671__0;
G__57671.cljs$core$IFn$_invoke$arity$1 = G__57671__1;
G__57671.cljs$core$IFn$_invoke$arity$2 = G__57671__2;
return G__57671;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__57669 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__57669) : f.call(null,G__57669));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__57650_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__57670 = p1__57650_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__57670) : f.call(null,G__57670));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__57680 = init;
var G__57681 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57680,G__57681) : f.call(null,G__57680,G__57681));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__57776 = null;
var G__57776__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__57776__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__57734 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__57734) : f.call(null,G__57734));
})()],null));
});
var G__57776__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__57735 = x;
var G__57736 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57735,G__57736) : f.call(null,G__57735,G__57736));
})()],null));
});
var G__57776__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__57737 = x;
var G__57738 = y;
var G__57739 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__57737,G__57738,G__57739) : f.call(null,G__57737,G__57738,G__57739));
})()],null));
});
var G__57776__4 = (function() { 
var G__57777__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__57777 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__57778__i = 0, G__57778__a = new Array(arguments.length -  3);
while (G__57778__i < G__57778__a.length) {G__57778__a[G__57778__i] = arguments[G__57778__i + 3]; ++G__57778__i;}
  args = new cljs.core.IndexedSeq(G__57778__a,0);
} 
return G__57777__delegate.call(this,x,y,z,args);};
G__57777.cljs$lang$maxFixedArity = 3;
G__57777.cljs$lang$applyTo = (function (arglist__57779){
var x = cljs.core.first(arglist__57779);
arglist__57779 = cljs.core.next(arglist__57779);
var y = cljs.core.first(arglist__57779);
arglist__57779 = cljs.core.next(arglist__57779);
var z = cljs.core.first(arglist__57779);
var args = cljs.core.rest(arglist__57779);
return G__57777__delegate(x,y,z,args);
});
G__57777.cljs$core$IFn$_invoke$arity$variadic = G__57777__delegate;
return G__57777;
})()
;
G__57776 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__57776__0.call(this);
case 1:
return G__57776__1.call(this,x);
case 2:
return G__57776__2.call(this,x,y);
case 3:
return G__57776__3.call(this,x,y,z);
default:
var G__57780 = null;
if (arguments.length > 3) {
var G__57781__i = 0, G__57781__a = new Array(arguments.length -  3);
while (G__57781__i < G__57781__a.length) {G__57781__a[G__57781__i] = arguments[G__57781__i + 3]; ++G__57781__i;}
G__57780 = new cljs.core.IndexedSeq(G__57781__a,0);
}
return G__57776__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__57780);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57776.cljs$lang$maxFixedArity = 3;
G__57776.cljs$lang$applyTo = G__57776__4.cljs$lang$applyTo;
G__57776.cljs$core$IFn$_invoke$arity$0 = G__57776__0;
G__57776.cljs$core$IFn$_invoke$arity$1 = G__57776__1;
G__57776.cljs$core$IFn$_invoke$arity$2 = G__57776__2;
G__57776.cljs$core$IFn$_invoke$arity$3 = G__57776__3;
G__57776.cljs$core$IFn$_invoke$arity$variadic = G__57776__4.cljs$core$IFn$_invoke$arity$variadic;
return G__57776;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__57782 = null;
var G__57782__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__57782__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__57740 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__57740) : f.call(null,G__57740));
})(),(function (){var G__57741 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__57741) : g.call(null,G__57741));
})()],null));
});
var G__57782__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__57742 = x;
var G__57743 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57742,G__57743) : f.call(null,G__57742,G__57743));
})(),(function (){var G__57744 = x;
var G__57745 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__57744,G__57745) : g.call(null,G__57744,G__57745));
})()],null));
});
var G__57782__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__57746 = x;
var G__57747 = y;
var G__57748 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__57746,G__57747,G__57748) : f.call(null,G__57746,G__57747,G__57748));
})(),(function (){var G__57749 = x;
var G__57750 = y;
var G__57751 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__57749,G__57750,G__57751) : g.call(null,G__57749,G__57750,G__57751));
})()],null));
});
var G__57782__4 = (function() { 
var G__57783__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__57783 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__57784__i = 0, G__57784__a = new Array(arguments.length -  3);
while (G__57784__i < G__57784__a.length) {G__57784__a[G__57784__i] = arguments[G__57784__i + 3]; ++G__57784__i;}
  args = new cljs.core.IndexedSeq(G__57784__a,0);
} 
return G__57783__delegate.call(this,x,y,z,args);};
G__57783.cljs$lang$maxFixedArity = 3;
G__57783.cljs$lang$applyTo = (function (arglist__57785){
var x = cljs.core.first(arglist__57785);
arglist__57785 = cljs.core.next(arglist__57785);
var y = cljs.core.first(arglist__57785);
arglist__57785 = cljs.core.next(arglist__57785);
var z = cljs.core.first(arglist__57785);
var args = cljs.core.rest(arglist__57785);
return G__57783__delegate(x,y,z,args);
});
G__57783.cljs$core$IFn$_invoke$arity$variadic = G__57783__delegate;
return G__57783;
})()
;
G__57782 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__57782__0.call(this);
case 1:
return G__57782__1.call(this,x);
case 2:
return G__57782__2.call(this,x,y);
case 3:
return G__57782__3.call(this,x,y,z);
default:
var G__57786 = null;
if (arguments.length > 3) {
var G__57787__i = 0, G__57787__a = new Array(arguments.length -  3);
while (G__57787__i < G__57787__a.length) {G__57787__a[G__57787__i] = arguments[G__57787__i + 3]; ++G__57787__i;}
G__57786 = new cljs.core.IndexedSeq(G__57787__a,0);
}
return G__57782__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__57786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57782.cljs$lang$maxFixedArity = 3;
G__57782.cljs$lang$applyTo = G__57782__4.cljs$lang$applyTo;
G__57782.cljs$core$IFn$_invoke$arity$0 = G__57782__0;
G__57782.cljs$core$IFn$_invoke$arity$1 = G__57782__1;
G__57782.cljs$core$IFn$_invoke$arity$2 = G__57782__2;
G__57782.cljs$core$IFn$_invoke$arity$3 = G__57782__3;
G__57782.cljs$core$IFn$_invoke$arity$variadic = G__57782__4.cljs$core$IFn$_invoke$arity$variadic;
return G__57782;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__57788 = null;
var G__57788__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__57788__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__57752 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__57752) : f.call(null,G__57752));
})(),(function (){var G__57753 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__57753) : g.call(null,G__57753));
})(),(function (){var G__57754 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__57754) : h.call(null,G__57754));
})()],null));
});
var G__57788__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__57755 = x;
var G__57756 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__57755,G__57756) : f.call(null,G__57755,G__57756));
})(),(function (){var G__57757 = x;
var G__57758 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__57757,G__57758) : g.call(null,G__57757,G__57758));
})(),(function (){var G__57759 = x;
var G__57760 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__57759,G__57760) : h.call(null,G__57759,G__57760));
})()],null));
});
var G__57788__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__57761 = x;
var G__57762 = y;
var G__57763 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__57761,G__57762,G__57763) : f.call(null,G__57761,G__57762,G__57763));
})(),(function (){var G__57764 = x;
var G__57765 = y;
var G__57766 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__57764,G__57765,G__57766) : g.call(null,G__57764,G__57765,G__57766));
})(),(function (){var G__57767 = x;
var G__57768 = y;
var G__57769 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__57767,G__57768,G__57769) : h.call(null,G__57767,G__57768,G__57769));
})()],null));
});
var G__57788__4 = (function() { 
var G__57789__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__57789 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__57790__i = 0, G__57790__a = new Array(arguments.length -  3);
while (G__57790__i < G__57790__a.length) {G__57790__a[G__57790__i] = arguments[G__57790__i + 3]; ++G__57790__i;}
  args = new cljs.core.IndexedSeq(G__57790__a,0);
} 
return G__57789__delegate.call(this,x,y,z,args);};
G__57789.cljs$lang$maxFixedArity = 3;
G__57789.cljs$lang$applyTo = (function (arglist__57791){
var x = cljs.core.first(arglist__57791);
arglist__57791 = cljs.core.next(arglist__57791);
var y = cljs.core.first(arglist__57791);
arglist__57791 = cljs.core.next(arglist__57791);
var z = cljs.core.first(arglist__57791);
var args = cljs.core.rest(arglist__57791);
return G__57789__delegate(x,y,z,args);
});
G__57789.cljs$core$IFn$_invoke$arity$variadic = G__57789__delegate;
return G__57789;
})()
;
G__57788 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__57788__0.call(this);
case 1:
return G__57788__1.call(this,x);
case 2:
return G__57788__2.call(this,x,y);
case 3:
return G__57788__3.call(this,x,y,z);
default:
var G__57792 = null;
if (arguments.length > 3) {
var G__57793__i = 0, G__57793__a = new Array(arguments.length -  3);
while (G__57793__i < G__57793__a.length) {G__57793__a[G__57793__i] = arguments[G__57793__i + 3]; ++G__57793__i;}
G__57792 = new cljs.core.IndexedSeq(G__57793__a,0);
}
return G__57788__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__57792);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57788.cljs$lang$maxFixedArity = 3;
G__57788.cljs$lang$applyTo = G__57788__4.cljs$lang$applyTo;
G__57788.cljs$core$IFn$_invoke$arity$0 = G__57788__0;
G__57788.cljs$core$IFn$_invoke$arity$1 = G__57788__1;
G__57788.cljs$core$IFn$_invoke$arity$2 = G__57788__2;
G__57788.cljs$core$IFn$_invoke$arity$3 = G__57788__3;
G__57788.cljs$core$IFn$_invoke$arity$variadic = G__57788__4.cljs$core$IFn$_invoke$arity$variadic;
return G__57788;
})()
});
var juxt__4 = (function() { 
var G__57794__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__57795 = null;
var G__57795__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__57682_SHARP_,p2__57683_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__57682_SHARP_,(function (){return (p2__57683_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__57683_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__57683_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__57795__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__57684_SHARP_,p2__57685_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__57684_SHARP_,(function (){var G__57770 = x;
return (p2__57685_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__57685_SHARP_.cljs$core$IFn$_invoke$arity$1(G__57770) : p2__57685_SHARP_.call(null,G__57770));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__57795__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__57686_SHARP_,p2__57687_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__57686_SHARP_,(function (){var G__57771 = x;
var G__57772 = y;
return (p2__57687_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__57687_SHARP_.cljs$core$IFn$_invoke$arity$2(G__57771,G__57772) : p2__57687_SHARP_.call(null,G__57771,G__57772));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__57795__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__57688_SHARP_,p2__57689_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__57688_SHARP_,(function (){var G__57773 = x;
var G__57774 = y;
var G__57775 = z;
return (p2__57689_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__57689_SHARP_.cljs$core$IFn$_invoke$arity$3(G__57773,G__57774,G__57775) : p2__57689_SHARP_.call(null,G__57773,G__57774,G__57775));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__57795__4 = (function() { 
var G__57796__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__57690_SHARP_,p2__57691_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__57690_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__57691_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__57796 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__57797__i = 0, G__57797__a = new Array(arguments.length -  3);
while (G__57797__i < G__57797__a.length) {G__57797__a[G__57797__i] = arguments[G__57797__i + 3]; ++G__57797__i;}
  args = new cljs.core.IndexedSeq(G__57797__a,0);
} 
return G__57796__delegate.call(this,x,y,z,args);};
G__57796.cljs$lang$maxFixedArity = 3;
G__57796.cljs$lang$applyTo = (function (arglist__57798){
var x = cljs.core.first(arglist__57798);
arglist__57798 = cljs.core.next(arglist__57798);
var y = cljs.core.first(arglist__57798);
arglist__57798 = cljs.core.next(arglist__57798);
var z = cljs.core.first(arglist__57798);
var args = cljs.core.rest(arglist__57798);
return G__57796__delegate(x,y,z,args);
});
G__57796.cljs$core$IFn$_invoke$arity$variadic = G__57796__delegate;
return G__57796;
})()
;
G__57795 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__57795__0.call(this);
case 1:
return G__57795__1.call(this,x);
case 2:
return G__57795__2.call(this,x,y);
case 3:
return G__57795__3.call(this,x,y,z);
default:
var G__57799 = null;
if (arguments.length > 3) {
var G__57800__i = 0, G__57800__a = new Array(arguments.length -  3);
while (G__57800__i < G__57800__a.length) {G__57800__a[G__57800__i] = arguments[G__57800__i + 3]; ++G__57800__i;}
G__57799 = new cljs.core.IndexedSeq(G__57800__a,0);
}
return G__57795__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__57799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57795.cljs$lang$maxFixedArity = 3;
G__57795.cljs$lang$applyTo = G__57795__4.cljs$lang$applyTo;
G__57795.cljs$core$IFn$_invoke$arity$0 = G__57795__0;
G__57795.cljs$core$IFn$_invoke$arity$1 = G__57795__1;
G__57795.cljs$core$IFn$_invoke$arity$2 = G__57795__2;
G__57795.cljs$core$IFn$_invoke$arity$3 = G__57795__3;
G__57795.cljs$core$IFn$_invoke$arity$variadic = G__57795__4.cljs$core$IFn$_invoke$arity$variadic;
return G__57795;
})()
;})(fs__$1))
};
var G__57794 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__57801__i = 0, G__57801__a = new Array(arguments.length -  3);
while (G__57801__i < G__57801__a.length) {G__57801__a[G__57801__i] = arguments[G__57801__i + 3]; ++G__57801__i;}
  fs = new cljs.core.IndexedSeq(G__57801__a,0);
} 
return G__57794__delegate.call(this,f,g,h,fs);};
G__57794.cljs$lang$maxFixedArity = 3;
G__57794.cljs$lang$applyTo = (function (arglist__57802){
var f = cljs.core.first(arglist__57802);
arglist__57802 = cljs.core.next(arglist__57802);
var g = cljs.core.first(arglist__57802);
arglist__57802 = cljs.core.next(arglist__57802);
var h = cljs.core.first(arglist__57802);
var fs = cljs.core.rest(arglist__57802);
return G__57794__delegate(f,g,h,fs);
});
G__57794.cljs$core$IFn$_invoke$arity$variadic = G__57794__delegate;
return G__57794;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__57803 = null;
if (arguments.length > 3) {
var G__57804__i = 0, G__57804__a = new Array(arguments.length -  3);
while (G__57804__i < G__57804__a.length) {G__57804__a[G__57804__i] = arguments[G__57804__i + 3]; ++G__57804__i;}
G__57803 = new cljs.core.IndexedSeq(G__57804__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__57803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__57805 = cljs.core.next(coll);
coll = G__57805;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__57806 = (n - (1));
var G__57807 = cljs.core.next(coll);
n = G__57806;
coll = G__57807;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__57811 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57811,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57811,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__57811,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_57819 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__57820_57826 = cljs.core.first(coll);
var G__57821_57827 = writer;
var G__57822_57828 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__57820_57826,G__57821_57827,G__57822_57828) : print_one.call(null,G__57820_57826,G__57821_57827,G__57822_57828));
} else {
}

var coll_57829__$1 = cljs.core.next(coll);
var n_57830 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_57829__$1) && (((n_57830 == null)) || (!((n_57830 === (0)))))){
cljs.core._write(writer,sep);

var G__57823_57831 = cljs.core.first(coll_57829__$1);
var G__57824_57832 = writer;
var G__57825_57833 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__57823_57831,G__57824_57832,G__57825_57833) : print_one.call(null,G__57823_57831,G__57824_57832,G__57825_57833));

var G__57834 = cljs.core.next(coll_57829__$1);
var G__57835 = (n_57830 - (1));
coll_57829__$1 = G__57834;
n_57830 = G__57835;
continue;
} else {
if((cljs.core.seq(coll_57829__$1)) && ((n_57830 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_57819;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__57840 = cljs.core.seq(ss);
var chunk__57841 = null;
var count__57842 = (0);
var i__57843 = (0);
while(true){
if((i__57843 < count__57842)){
var s = chunk__57841.cljs$core$IIndexed$_nth$arity$2(null,i__57843);
cljs.core._write(writer,s);

var G__57844 = seq__57840;
var G__57845 = chunk__57841;
var G__57846 = count__57842;
var G__57847 = (i__57843 + (1));
seq__57840 = G__57844;
chunk__57841 = G__57845;
count__57842 = G__57846;
i__57843 = G__57847;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__57840);
if(temp__4126__auto__){
var seq__57840__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__57840__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__57840__$1);
var G__57848 = cljs.core.chunk_rest(seq__57840__$1);
var G__57849 = c__4530__auto__;
var G__57850 = cljs.core.count(c__4530__auto__);
var G__57851 = (0);
seq__57840 = G__57848;
chunk__57841 = G__57849;
count__57842 = G__57850;
i__57843 = G__57851;
continue;
} else {
var s = cljs.core.first(seq__57840__$1);
cljs.core._write(writer,s);

var G__57852 = cljs.core.next(seq__57840__$1);
var G__57853 = null;
var G__57854 = (0);
var G__57855 = (0);
seq__57840 = G__57852;
chunk__57841 = G__57853;
count__57842 = G__57854;
i__57843 = G__57855;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__57856__i = 0, G__57856__a = new Array(arguments.length -  1);
while (G__57856__i < G__57856__a.length) {G__57856__a[G__57856__i] = arguments[G__57856__i + 1]; ++G__57856__i;}
  ss = new cljs.core.IndexedSeq(G__57856__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__57857){
var writer = cljs.core.first(arglist__57857);
var ss = cljs.core.rest(arglist__57857);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj57859 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj57859;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__57862 = "[\\\\\"\b\f\n\r\t]";
var G__57863 = "g";
return RegExp(G__57862,G__57863);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3731__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__57877 = obj;
if(G__57877){
var bit__4424__auto__ = (G__57877.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4424__auto__) || (G__57877.cljs$core$IMeta$)){
return true;
} else {
if((!G__57877.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__57877);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__57877);
}
})();
if(and__3731__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__57878 = obj;
if(G__57878){
var bit__4417__auto__ = (G__57878.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4417__auto__) || (G__57878.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__57879 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__57880 = pr_writer;
var G__57881 = writer;
var G__57882 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__57879,G__57880,G__57881,G__57882) : cljs.core.print_map.call(null,G__57879,G__57880,G__57881,G__57882));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__57883 = obj;
return goog.isString(G__57883);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__57885 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__57885;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__57884 = obj;
if(G__57884){
var bit__4424__auto__ = (G__57884.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4424__auto__) || (G__57884.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__57884.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__57884);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__57884);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__57890 = cljs.core.seq(cljs.core.next(objs));
var chunk__57891 = null;
var count__57892 = (0);
var i__57893 = (0);
while(true){
if((i__57893 < count__57892)){
var obj = chunk__57891.cljs$core$IIndexed$_nth$arity$2(null,i__57893);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__57894 = seq__57890;
var G__57895 = chunk__57891;
var G__57896 = count__57892;
var G__57897 = (i__57893 + (1));
seq__57890 = G__57894;
chunk__57891 = G__57895;
count__57892 = G__57896;
i__57893 = G__57897;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__57890);
if(temp__4126__auto__){
var seq__57890__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__57890__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__57890__$1);
var G__57898 = cljs.core.chunk_rest(seq__57890__$1);
var G__57899 = c__4530__auto__;
var G__57900 = cljs.core.count(c__4530__auto__);
var G__57901 = (0);
seq__57890 = G__57898;
chunk__57891 = G__57899;
count__57892 = G__57900;
i__57893 = G__57901;
continue;
} else {
var obj = cljs.core.first(seq__57890__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__57902 = cljs.core.next(seq__57890__$1);
var G__57903 = null;
var G__57904 = (0);
var G__57905 = (0);
seq__57890 = G__57902;
chunk__57891 = G__57903;
count__57892 = G__57904;
i__57893 = G__57905;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__57906__i = 0, G__57906__a = new Array(arguments.length -  0);
while (G__57906__i < G__57906__a.length) {G__57906__a[G__57906__i] = arguments[G__57906__i + 0]; ++G__57906__i;}
  objs = new cljs.core.IndexedSeq(G__57906__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__57907){
var objs = cljs.core.seq(arglist__57907);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__57908__i = 0, G__57908__a = new Array(arguments.length -  0);
while (G__57908__i < G__57908__a.length) {G__57908__a[G__57908__i] = arguments[G__57908__i + 0]; ++G__57908__i;}
  objs = new cljs.core.IndexedSeq(G__57908__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__57909){
var objs = cljs.core.seq(arglist__57909);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__57910__i = 0, G__57910__a = new Array(arguments.length -  0);
while (G__57910__i < G__57910__a.length) {G__57910__a[G__57910__i] = arguments[G__57910__i + 0]; ++G__57910__i;}
  objs = new cljs.core.IndexedSeq(G__57910__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__57911){
var objs = cljs.core.seq(arglist__57911);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__57912__i = 0, G__57912__a = new Array(arguments.length -  0);
while (G__57912__i < G__57912__a.length) {G__57912__a[G__57912__i] = arguments[G__57912__i + 0]; ++G__57912__i;}
  objs = new cljs.core.IndexedSeq(G__57912__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__57913){
var objs = cljs.core.seq(arglist__57913);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__57914__i = 0, G__57914__a = new Array(arguments.length -  0);
while (G__57914__i < G__57914__a.length) {G__57914__a[G__57914__i] = arguments[G__57914__i + 0]; ++G__57914__i;}
  objs = new cljs.core.IndexedSeq(G__57914__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__57915){
var objs = cljs.core.seq(arglist__57915);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__57916__i = 0, G__57916__a = new Array(arguments.length -  0);
while (G__57916__i < G__57916__a.length) {G__57916__a[G__57916__i] = arguments[G__57916__i + 0]; ++G__57916__i;}
  objs = new cljs.core.IndexedSeq(G__57916__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__57917){
var objs = cljs.core.seq(arglist__57917);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__57918__i = 0, G__57918__a = new Array(arguments.length -  0);
while (G__57918__i < G__57918__a.length) {G__57918__a[G__57918__i] = arguments[G__57918__i + 0]; ++G__57918__i;}
  objs = new cljs.core.IndexedSeq(G__57918__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__57919){
var objs = cljs.core.seq(arglist__57919);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__57920__i = 0, G__57920__a = new Array(arguments.length -  0);
while (G__57920__i < G__57920__a.length) {G__57920__a[G__57920__i] = arguments[G__57920__i + 0]; ++G__57920__i;}
  objs = new cljs.core.IndexedSeq(G__57920__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__57921){
var objs = cljs.core.seq(arglist__57921);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__57928_57934 = cljs.core.key(e);
var G__57929_57935 = w;
var G__57930_57936 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__57928_57934,G__57929_57935,G__57930_57936) : print_one.call(null,G__57928_57934,G__57929_57935,G__57930_57936));

cljs.core._write(w," ");

var G__57931 = cljs.core.val(e);
var G__57932 = w;
var G__57933 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__57931,G__57932,G__57933) : print_one.call(null,G__57931,G__57932,G__57933));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__57937__i = 0, G__57937__a = new Array(arguments.length -  2);
while (G__57937__i < G__57937__a.length) {G__57937__a[G__57937__i] = arguments[G__57937__i + 2]; ++G__57937__i;}
  args = new cljs.core.IndexedSeq(G__57937__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__57938){
var iref = cljs.core.first(arglist__57938);
arglist__57938 = cljs.core.next(arglist__57938);
var f = cljs.core.first(arglist__57938);
var args = cljs.core.rest(arglist__57938);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__57941 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__57941) : cljs.core.atom.call(null,G__57941));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__57943 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57943) : cljs.core.deref.call(null,G__57943));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__57944_SHARP_,p2__57945_SHARP_){
var ret = (function (){var G__57948 = p1__57944_SHARP_;
var G__57949 = p2__57945_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__57948,G__57949) : rf.call(null,G__57948,G__57949));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__57952 = null;
var G__57952__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__57952__1 = (function (result){
var G__57951 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__57951) : rf.call(null,G__57951));
});
var G__57952__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__57952 = function(result,input){
switch(arguments.length){
case 0:
return G__57952__0.call(this);
case 1:
return G__57952__1.call(this,result);
case 2:
return G__57952__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57952.cljs$core$IFn$_invoke$arity$0 = G__57952__0;
G__57952.cljs$core$IFn$_invoke$arity$1 = G__57952__1;
G__57952.cljs$core$IFn$_invoke$arity$2 = G__57952__2;
return G__57952;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (pa){
return (function() {
var G__57961 = null;
var G__57961__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__57961__1 = (function (result){
var G__57957 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__57957) : rf.call(null,G__57957));
});
var G__57961__2 = (function (result,input){
var prior = (function (){var G__57958 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__57958) : cljs.core.deref.call(null,G__57958));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__57959 = result;
var G__57960 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__57959,G__57960) : rf.call(null,G__57959,G__57960));
}
});
G__57961 = function(result,input){
switch(arguments.length){
case 0:
return G__57961__0.call(this);
case 1:
return G__57961__1.call(this,result);
case 2:
return G__57961__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__57961.cljs$core$IFn$_invoke$arity$0 = G__57961__0;
G__57961.cljs$core$IFn$_invoke$arity$1 = G__57961__1;
G__57961.cljs$core$IFn$_invoke$arity$2 = G__57961__2;
return G__57961;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__57963_SHARP_,p2__57962_SHARP_){
var G__57965 = p2__57962_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__57965) : proc.call(null,G__57965));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj57967 = {};
return obj57967;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._clj__GT_js[(function (){var G__57971 = x__4387__auto__;
return goog.typeOf(G__57971);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._key__GT_js[(function (){var G__57975 = x__4387__auto__;
return goog.typeOf(G__57975);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__57978 = k;
if(G__57978){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto__ = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return G__57978.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__57978.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__57978);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__57978);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__57979 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__57979) : cljs.core.clj__GT_js.call(null,G__57979));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__57995 = x;
if(G__57995){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto__ = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return G__57995.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__57995.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__57995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__57995);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj57997 = {};
return obj57997;
})();
var seq__57998_58008 = cljs.core.seq(x);
var chunk__57999_58009 = null;
var count__58000_58010 = (0);
var i__58001_58011 = (0);
while(true){
if((i__58001_58011 < count__58000_58010)){
var vec__58002_58012 = chunk__57999_58009.cljs$core$IIndexed$_nth$arity$2(null,i__58001_58011);
var k_58013 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58002_58012,(0),null);
var v_58014 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58002_58012,(1),null);
(m[cljs.core.key__GT_js(k_58013)] = clj__GT_js(v_58014));

var G__58015 = seq__57998_58008;
var G__58016 = chunk__57999_58009;
var G__58017 = count__58000_58010;
var G__58018 = (i__58001_58011 + (1));
seq__57998_58008 = G__58015;
chunk__57999_58009 = G__58016;
count__58000_58010 = G__58017;
i__58001_58011 = G__58018;
continue;
} else {
var temp__4126__auto___58019 = cljs.core.seq(seq__57998_58008);
if(temp__4126__auto___58019){
var seq__57998_58020__$1 = temp__4126__auto___58019;
if(cljs.core.chunked_seq_QMARK_(seq__57998_58020__$1)){
var c__4530__auto___58021 = cljs.core.chunk_first(seq__57998_58020__$1);
var G__58022 = cljs.core.chunk_rest(seq__57998_58020__$1);
var G__58023 = c__4530__auto___58021;
var G__58024 = cljs.core.count(c__4530__auto___58021);
var G__58025 = (0);
seq__57998_58008 = G__58022;
chunk__57999_58009 = G__58023;
count__58000_58010 = G__58024;
i__58001_58011 = G__58025;
continue;
} else {
var vec__58003_58026 = cljs.core.first(seq__57998_58020__$1);
var k_58027 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58003_58026,(0),null);
var v_58028 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58003_58026,(1),null);
(m[cljs.core.key__GT_js(k_58027)] = clj__GT_js(v_58028));

var G__58029 = cljs.core.next(seq__57998_58020__$1);
var G__58030 = null;
var G__58031 = (0);
var G__58032 = (0);
seq__57998_58008 = G__58029;
chunk__57999_58009 = G__58030;
count__58000_58010 = G__58031;
i__58001_58011 = G__58032;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__58004_58033 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__58005_58034 = null;
var count__58006_58035 = (0);
var i__58007_58036 = (0);
while(true){
if((i__58007_58036 < count__58006_58035)){
var x_58037__$1 = chunk__58005_58034.cljs$core$IIndexed$_nth$arity$2(null,i__58007_58036);
arr.push(x_58037__$1);

var G__58038 = seq__58004_58033;
var G__58039 = chunk__58005_58034;
var G__58040 = count__58006_58035;
var G__58041 = (i__58007_58036 + (1));
seq__58004_58033 = G__58038;
chunk__58005_58034 = G__58039;
count__58006_58035 = G__58040;
i__58007_58036 = G__58041;
continue;
} else {
var temp__4126__auto___58042 = cljs.core.seq(seq__58004_58033);
if(temp__4126__auto___58042){
var seq__58004_58043__$1 = temp__4126__auto___58042;
if(cljs.core.chunked_seq_QMARK_(seq__58004_58043__$1)){
var c__4530__auto___58044 = cljs.core.chunk_first(seq__58004_58043__$1);
var G__58045 = cljs.core.chunk_rest(seq__58004_58043__$1);
var G__58046 = c__4530__auto___58044;
var G__58047 = cljs.core.count(c__4530__auto___58044);
var G__58048 = (0);
seq__58004_58033 = G__58045;
chunk__58005_58034 = G__58046;
count__58006_58035 = G__58047;
i__58007_58036 = G__58048;
continue;
} else {
var x_58049__$1 = cljs.core.first(seq__58004_58043__$1);
arr.push(x_58049__$1);

var G__58050 = cljs.core.next(seq__58004_58043__$1);
var G__58051 = null;
var G__58052 = (0);
var G__58053 = (0);
seq__58004_58033 = G__58050;
chunk__58005_58034 = G__58051;
count__58006_58035 = G__58052;
i__58007_58036 = G__58053;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj58055 = {};
return obj58055;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._js__GT_clj[(function (){var G__58059 = x__4387__auto__;
return goog.typeOf(G__58059);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$16,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__58116__delegate = function (x,opts){
var map__58089 = opts;
var map__58089__$1 = ((cljs.core.seq_QMARK_(map__58089))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__58089):map__58089);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__58089__$1,cljs.core.constant$keyword$16);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__58089,map__58089__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__58105 = x__$1;
if(G__58105){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto__ = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return G__58105.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__58105.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__58105);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__58105);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4499__auto__ = ((function (map__58089,map__58089__$1,keywordize_keys,keyfn){
return (function iter__58106(s__58107){
return (new cljs.core.LazySeq(null,((function (map__58089,map__58089__$1,keywordize_keys,keyfn){
return (function (){
var s__58107__$1 = s__58107;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__58107__$1);
if(temp__4126__auto__){
var s__58107__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__58107__$2)){
var c__4497__auto__ = cljs.core.chunk_first(s__58107__$2);
var size__4498__auto__ = cljs.core.count(c__4497__auto__);
var b__58109 = cljs.core.chunk_buffer(size__4498__auto__);
if((function (){var i__58108 = (0);
while(true){
if((i__58108 < size__4498__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4497__auto__,i__58108);
cljs.core.chunk_append(b__58109,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__58114 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__58114) : keyfn.call(null,G__58114));
})(),thisfn((x__$1[k]))], null));

var G__58117 = (i__58108 + (1));
i__58108 = G__58117;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__58109),iter__58106(cljs.core.chunk_rest(s__58107__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__58109),null);
}
} else {
var k = cljs.core.first(s__58107__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__58115 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__58115) : keyfn.call(null,G__58115));
})(),thisfn((x__$1[k]))], null),iter__58106(cljs.core.rest(s__58107__$2)));
}
} else {
return null;
}
break;
}
});})(map__58089,map__58089__$1,keywordize_keys,keyfn))
,null,null));
});})(map__58089,map__58089__$1,keywordize_keys,keyfn))
;
return iter__4499__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__58089,map__58089__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__58116 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__58118__i = 0, G__58118__a = new Array(arguments.length -  1);
while (G__58118__i < G__58118__a.length) {G__58118__a[G__58118__i] = arguments[G__58118__i + 1]; ++G__58118__i;}
  opts = new cljs.core.IndexedSeq(G__58118__a,0);
} 
return G__58116__delegate.call(this,x,opts);};
G__58116.cljs$lang$maxFixedArity = 1;
G__58116.cljs$lang$applyTo = (function (arglist__58119){
var x = cljs.core.first(arglist__58119);
var opts = cljs.core.rest(arglist__58119);
return G__58116__delegate(x,opts);
});
G__58116.cljs$core$IFn$_invoke$arity$variadic = G__58116__delegate;
return G__58116;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__58120 = null;
if (arguments.length > 1) {
var G__58121__i = 0, G__58121__a = new Array(arguments.length -  1);
while (G__58121__i < G__58121__a.length) {G__58121__a[G__58121__i] = arguments[G__58121__i + 1]; ++G__58121__i;}
G__58120 = new cljs.core.IndexedSeq(G__58121__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__58120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__58124 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__58124) : cljs.core.atom.call(null,G__58124));
})();
return ((function (mem){
return (function() { 
var G__58126__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__58125 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58125) : cljs.core.deref.call(null,G__58125));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__58126 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__58127__i = 0, G__58127__a = new Array(arguments.length -  0);
while (G__58127__i < G__58127__a.length) {G__58127__a[G__58127__i] = arguments[G__58127__i + 0]; ++G__58127__i;}
  args = new cljs.core.IndexedSeq(G__58127__a,0);
} 
return G__58126__delegate.call(this,args);};
G__58126.cljs$lang$maxFixedArity = 0;
G__58126.cljs$lang$applyTo = (function (arglist__58128){
var args = cljs.core.seq(arglist__58128);
return G__58126__delegate(args);
});
G__58126.cljs$core$IFn$_invoke$arity$variadic = G__58126__delegate;
return G__58126;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__58130 = ret;
f = G__58130;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__58131__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__58131 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__58132__i = 0, G__58132__a = new Array(arguments.length -  1);
while (G__58132__i < G__58132__a.length) {G__58132__a[G__58132__i] = arguments[G__58132__i + 1]; ++G__58132__i;}
  args = new cljs.core.IndexedSeq(G__58132__a,0);
} 
return G__58131__delegate.call(this,f,args);};
G__58131.cljs$lang$maxFixedArity = 1;
G__58131.cljs$lang$applyTo = (function (arglist__58133){
var f = cljs.core.first(arglist__58133);
var args = cljs.core.rest(arglist__58133);
return G__58131__delegate(f,args);
});
G__58131.cljs$core$IFn$_invoke$arity$variadic = G__58131__delegate;
return G__58131;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__58134 = null;
if (arguments.length > 1) {
var G__58135__i = 0, G__58135__a = new Array(arguments.length -  1);
while (G__58135__i < G__58135__a.length) {G__58135__a[G__58135__i] = arguments[G__58135__i + 1]; ++G__58135__i;}
G__58134 = new cljs.core.IndexedSeq(G__58135__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__58134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__58138 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__58138) : Math.floor.call(null,G__58138));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__58140 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__58140) : f.call(null,G__58140));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$18,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$19,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__58142 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__58142) : cljs.core.atom.call(null,G__58142));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__58143__i = 0, G__58143__a = new Array(arguments.length -  1);
while (G__58143__i < G__58143__a.length) {G__58143__a[G__58143__i] = arguments[G__58143__i + 1]; ++G__58143__i;}
  args = new cljs.core.IndexedSeq(G__58143__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__58144){
var f = cljs.core.first(arglist__58144);
var args = cljs.core.rest(arglist__58144);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__58209 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58209) : cljs.core.deref.call(null,G__58209));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3743__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
var and__3731__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3731__auto__){
var and__3731__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3731__auto____$1){
var and__3731__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3731__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__58234 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__58232 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__58232) : child.call(null,G__58232));
})(),(function (){var G__58233 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__58233) : parent.call(null,G__58233));
})());
var G__58235 = (i + (1));
ret = G__58234;
i = G__58235;
continue;
}
break;
}
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__58239 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58239) : cljs.core.deref.call(null,G__58239));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__58243 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58243) : cljs.core.deref.call(null,G__58243));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__58247 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58247) : cljs.core.deref.call(null,G__58247));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__58256 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__58256) : targets.call(null,G__58256));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__58257 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__58257) : sources.call(null,G__58257));
})()));
});})(tp,td,ta))
;
var or__3743__auto__ = ((cljs.core.contains_QMARK_((function (){var G__58261 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__58261) : tp.call(null,G__58261));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__58262 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__58262) : ta.call(null,G__58262));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__58263 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__58263) : ta.call(null,G__58263));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$19,tf(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$18,tf(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__58270 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__58270) : parentMap.call(null,G__58270));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__58271 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__58271) : parentMap.call(null,G__58271));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__58264_SHARP_){
return cljs.core.cons(cljs.core.first(p1__58264_SHARP_),cljs.core.interpose(cljs.core.first(p1__58264_SHARP_),cljs.core.second(p1__58264_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__58272 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__58272) : parentMap.call(null,G__58272));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__58265_SHARP_,p2__58266_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__58265_SHARP_,p2__58266_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__58275 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58275) : cljs.core.deref.call(null,G__58275));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__58276 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58276) : cljs.core.deref.call(null,G__58276));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__58292 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58292) : cljs.core.deref.call(null,G__58292));
})().call(null,x);
var or__3743__auto__ = (cljs.core.truth_((function (){var and__3731__auto__ = xprefs;
if(cljs.core.truth_(and__3731__auto__)){
var G__58294 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__58294) : xprefs.call(null,G__58294));
} else {
return and__3731__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__58295 = cljs.core.rest(ps);
ps = G__58295;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__58296 = cljs.core.rest(ps);
ps = G__58296;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3743__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__58310){
var vec__58311 = p__58310;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58311,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__58311,(1),null);
var e = vec__58311;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__58312 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58312) : cljs.core.deref.call(null,G__58312));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3743__auto__ = (be == null);
if(or__3743__auto__){
return or__3743__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__58313 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58313) : cljs.core.deref.call(null,G__58313));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__58314 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58314) : cljs.core.deref.call(null,G__58314));
})(),(function (){var G__58315 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58315) : cljs.core.deref.call(null,G__58315));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj58317 = {};
return obj58317;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._reset[(function (){var G__58321 = x__4387__auto__;
return goog.typeOf(G__58321);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._reset["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._add_method[(function (){var G__58325 = x__4387__auto__;
return goog.typeOf(G__58325);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._add_method["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._remove_method[(function (){var G__58329 = x__4387__auto__;
return goog.typeOf(G__58329);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._prefer_method[(function (){var G__58333 = x__4387__auto__;
return goog.typeOf(G__58333);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._get_method[(function (){var G__58337 = x__4387__auto__;
return goog.typeOf(G__58337);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._get_method["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._methods[(function (){var G__58341 = x__4387__auto__;
return goog.typeOf(G__58341);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._methods["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._prefers[(function (){var G__58345 = x__4387__auto__;
return goog.typeOf(G__58345);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._prefers["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__58347 = this$__$1;
return goog.getUid(G__58347);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__58348 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58348) : cljs.core.deref.call(null,G__58348));
})(),(function (){var G__58349 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58349) : cljs.core.deref.call(null,G__58349));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__58350 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58350) : cljs.core.deref.call(null,G__58350));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__58351 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58351) : cljs.core.deref.call(null,G__58351));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__58352 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58352) : cljs.core.deref.call(null,G__58352));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__58353 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__58353) : cljs.core.deref.call(null,G__58353));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__59194 = null;
var G__59194__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__59194__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58354 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__58354) : self__.dispatch_fn.call(null,G__58354));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58355 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__58355) : target_fn.call(null,G__58355));
});
var G__59194__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58356 = a;
var G__58357 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__58356,G__58357) : self__.dispatch_fn.call(null,G__58356,G__58357));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58358 = a;
var G__58359 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__58358,G__58359) : target_fn.call(null,G__58358,G__58359));
});
var G__59194__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58360 = a;
var G__58361 = b;
var G__58362 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__58360,G__58361,G__58362) : self__.dispatch_fn.call(null,G__58360,G__58361,G__58362));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58363 = a;
var G__58364 = b;
var G__58365 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__58363,G__58364,G__58365) : target_fn.call(null,G__58363,G__58364,G__58365));
});
var G__59194__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58366 = a;
var G__58367 = b;
var G__58368 = c;
var G__58369 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__58366,G__58367,G__58368,G__58369) : self__.dispatch_fn.call(null,G__58366,G__58367,G__58368,G__58369));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58370 = a;
var G__58371 = b;
var G__58372 = c;
var G__58373 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__58370,G__58371,G__58372,G__58373) : target_fn.call(null,G__58370,G__58371,G__58372,G__58373));
});
var G__59194__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58374 = a;
var G__58375 = b;
var G__58376 = c;
var G__58377 = d;
var G__58378 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__58374,G__58375,G__58376,G__58377,G__58378) : self__.dispatch_fn.call(null,G__58374,G__58375,G__58376,G__58377,G__58378));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58379 = a;
var G__58380 = b;
var G__58381 = c;
var G__58382 = d;
var G__58383 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__58379,G__58380,G__58381,G__58382,G__58383) : target_fn.call(null,G__58379,G__58380,G__58381,G__58382,G__58383));
});
var G__59194__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58384 = a;
var G__58385 = b;
var G__58386 = c;
var G__58387 = d;
var G__58388 = e;
var G__58389 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__58384,G__58385,G__58386,G__58387,G__58388,G__58389) : self__.dispatch_fn.call(null,G__58384,G__58385,G__58386,G__58387,G__58388,G__58389));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58390 = a;
var G__58391 = b;
var G__58392 = c;
var G__58393 = d;
var G__58394 = e;
var G__58395 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__58390,G__58391,G__58392,G__58393,G__58394,G__58395) : target_fn.call(null,G__58390,G__58391,G__58392,G__58393,G__58394,G__58395));
});
var G__59194__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58396 = a;
var G__58397 = b;
var G__58398 = c;
var G__58399 = d;
var G__58400 = e;
var G__58401 = f;
var G__58402 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__58396,G__58397,G__58398,G__58399,G__58400,G__58401,G__58402) : self__.dispatch_fn.call(null,G__58396,G__58397,G__58398,G__58399,G__58400,G__58401,G__58402));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58403 = a;
var G__58404 = b;
var G__58405 = c;
var G__58406 = d;
var G__58407 = e;
var G__58408 = f;
var G__58409 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__58403,G__58404,G__58405,G__58406,G__58407,G__58408,G__58409) : target_fn.call(null,G__58403,G__58404,G__58405,G__58406,G__58407,G__58408,G__58409));
});
var G__59194__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58410 = a;
var G__58411 = b;
var G__58412 = c;
var G__58413 = d;
var G__58414 = e;
var G__58415 = f;
var G__58416 = g;
var G__58417 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__58410,G__58411,G__58412,G__58413,G__58414,G__58415,G__58416,G__58417) : self__.dispatch_fn.call(null,G__58410,G__58411,G__58412,G__58413,G__58414,G__58415,G__58416,G__58417));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58418 = a;
var G__58419 = b;
var G__58420 = c;
var G__58421 = d;
var G__58422 = e;
var G__58423 = f;
var G__58424 = g;
var G__58425 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__58418,G__58419,G__58420,G__58421,G__58422,G__58423,G__58424,G__58425) : target_fn.call(null,G__58418,G__58419,G__58420,G__58421,G__58422,G__58423,G__58424,G__58425));
});
var G__59194__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58426 = a;
var G__58427 = b;
var G__58428 = c;
var G__58429 = d;
var G__58430 = e;
var G__58431 = f;
var G__58432 = g;
var G__58433 = h;
var G__58434 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__58426,G__58427,G__58428,G__58429,G__58430,G__58431,G__58432,G__58433,G__58434) : self__.dispatch_fn.call(null,G__58426,G__58427,G__58428,G__58429,G__58430,G__58431,G__58432,G__58433,G__58434));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58435 = a;
var G__58436 = b;
var G__58437 = c;
var G__58438 = d;
var G__58439 = e;
var G__58440 = f;
var G__58441 = g;
var G__58442 = h;
var G__58443 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__58435,G__58436,G__58437,G__58438,G__58439,G__58440,G__58441,G__58442,G__58443) : target_fn.call(null,G__58435,G__58436,G__58437,G__58438,G__58439,G__58440,G__58441,G__58442,G__58443));
});
var G__59194__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58444 = a;
var G__58445 = b;
var G__58446 = c;
var G__58447 = d;
var G__58448 = e;
var G__58449 = f;
var G__58450 = g;
var G__58451 = h;
var G__58452 = i;
var G__58453 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__58444,G__58445,G__58446,G__58447,G__58448,G__58449,G__58450,G__58451,G__58452,G__58453) : self__.dispatch_fn.call(null,G__58444,G__58445,G__58446,G__58447,G__58448,G__58449,G__58450,G__58451,G__58452,G__58453));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58454 = a;
var G__58455 = b;
var G__58456 = c;
var G__58457 = d;
var G__58458 = e;
var G__58459 = f;
var G__58460 = g;
var G__58461 = h;
var G__58462 = i;
var G__58463 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__58454,G__58455,G__58456,G__58457,G__58458,G__58459,G__58460,G__58461,G__58462,G__58463) : target_fn.call(null,G__58454,G__58455,G__58456,G__58457,G__58458,G__58459,G__58460,G__58461,G__58462,G__58463));
});
var G__59194__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58464 = a;
var G__58465 = b;
var G__58466 = c;
var G__58467 = d;
var G__58468 = e;
var G__58469 = f;
var G__58470 = g;
var G__58471 = h;
var G__58472 = i;
var G__58473 = j;
var G__58474 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__58464,G__58465,G__58466,G__58467,G__58468,G__58469,G__58470,G__58471,G__58472,G__58473,G__58474) : self__.dispatch_fn.call(null,G__58464,G__58465,G__58466,G__58467,G__58468,G__58469,G__58470,G__58471,G__58472,G__58473,G__58474));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58475 = a;
var G__58476 = b;
var G__58477 = c;
var G__58478 = d;
var G__58479 = e;
var G__58480 = f;
var G__58481 = g;
var G__58482 = h;
var G__58483 = i;
var G__58484 = j;
var G__58485 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__58475,G__58476,G__58477,G__58478,G__58479,G__58480,G__58481,G__58482,G__58483,G__58484,G__58485) : target_fn.call(null,G__58475,G__58476,G__58477,G__58478,G__58479,G__58480,G__58481,G__58482,G__58483,G__58484,G__58485));
});
var G__59194__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58486 = a;
var G__58487 = b;
var G__58488 = c;
var G__58489 = d;
var G__58490 = e;
var G__58491 = f;
var G__58492 = g;
var G__58493 = h;
var G__58494 = i;
var G__58495 = j;
var G__58496 = k;
var G__58497 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__58486,G__58487,G__58488,G__58489,G__58490,G__58491,G__58492,G__58493,G__58494,G__58495,G__58496,G__58497) : self__.dispatch_fn.call(null,G__58486,G__58487,G__58488,G__58489,G__58490,G__58491,G__58492,G__58493,G__58494,G__58495,G__58496,G__58497));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58498 = a;
var G__58499 = b;
var G__58500 = c;
var G__58501 = d;
var G__58502 = e;
var G__58503 = f;
var G__58504 = g;
var G__58505 = h;
var G__58506 = i;
var G__58507 = j;
var G__58508 = k;
var G__58509 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__58498,G__58499,G__58500,G__58501,G__58502,G__58503,G__58504,G__58505,G__58506,G__58507,G__58508,G__58509) : target_fn.call(null,G__58498,G__58499,G__58500,G__58501,G__58502,G__58503,G__58504,G__58505,G__58506,G__58507,G__58508,G__58509));
});
var G__59194__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58510 = a;
var G__58511 = b;
var G__58512 = c;
var G__58513 = d;
var G__58514 = e;
var G__58515 = f;
var G__58516 = g;
var G__58517 = h;
var G__58518 = i;
var G__58519 = j;
var G__58520 = k;
var G__58521 = l;
var G__58522 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__58510,G__58511,G__58512,G__58513,G__58514,G__58515,G__58516,G__58517,G__58518,G__58519,G__58520,G__58521,G__58522) : self__.dispatch_fn.call(null,G__58510,G__58511,G__58512,G__58513,G__58514,G__58515,G__58516,G__58517,G__58518,G__58519,G__58520,G__58521,G__58522));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58523 = a;
var G__58524 = b;
var G__58525 = c;
var G__58526 = d;
var G__58527 = e;
var G__58528 = f;
var G__58529 = g;
var G__58530 = h;
var G__58531 = i;
var G__58532 = j;
var G__58533 = k;
var G__58534 = l;
var G__58535 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__58523,G__58524,G__58525,G__58526,G__58527,G__58528,G__58529,G__58530,G__58531,G__58532,G__58533,G__58534,G__58535) : target_fn.call(null,G__58523,G__58524,G__58525,G__58526,G__58527,G__58528,G__58529,G__58530,G__58531,G__58532,G__58533,G__58534,G__58535));
});
var G__59194__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58536 = a;
var G__58537 = b;
var G__58538 = c;
var G__58539 = d;
var G__58540 = e;
var G__58541 = f;
var G__58542 = g;
var G__58543 = h;
var G__58544 = i;
var G__58545 = j;
var G__58546 = k;
var G__58547 = l;
var G__58548 = m;
var G__58549 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__58536,G__58537,G__58538,G__58539,G__58540,G__58541,G__58542,G__58543,G__58544,G__58545,G__58546,G__58547,G__58548,G__58549) : self__.dispatch_fn.call(null,G__58536,G__58537,G__58538,G__58539,G__58540,G__58541,G__58542,G__58543,G__58544,G__58545,G__58546,G__58547,G__58548,G__58549));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58550 = a;
var G__58551 = b;
var G__58552 = c;
var G__58553 = d;
var G__58554 = e;
var G__58555 = f;
var G__58556 = g;
var G__58557 = h;
var G__58558 = i;
var G__58559 = j;
var G__58560 = k;
var G__58561 = l;
var G__58562 = m;
var G__58563 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__58550,G__58551,G__58552,G__58553,G__58554,G__58555,G__58556,G__58557,G__58558,G__58559,G__58560,G__58561,G__58562,G__58563) : target_fn.call(null,G__58550,G__58551,G__58552,G__58553,G__58554,G__58555,G__58556,G__58557,G__58558,G__58559,G__58560,G__58561,G__58562,G__58563));
});
var G__59194__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58564 = a;
var G__58565 = b;
var G__58566 = c;
var G__58567 = d;
var G__58568 = e;
var G__58569 = f;
var G__58570 = g;
var G__58571 = h;
var G__58572 = i;
var G__58573 = j;
var G__58574 = k;
var G__58575 = l;
var G__58576 = m;
var G__58577 = n;
var G__58578 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__58564,G__58565,G__58566,G__58567,G__58568,G__58569,G__58570,G__58571,G__58572,G__58573,G__58574,G__58575,G__58576,G__58577,G__58578) : self__.dispatch_fn.call(null,G__58564,G__58565,G__58566,G__58567,G__58568,G__58569,G__58570,G__58571,G__58572,G__58573,G__58574,G__58575,G__58576,G__58577,G__58578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58579 = a;
var G__58580 = b;
var G__58581 = c;
var G__58582 = d;
var G__58583 = e;
var G__58584 = f;
var G__58585 = g;
var G__58586 = h;
var G__58587 = i;
var G__58588 = j;
var G__58589 = k;
var G__58590 = l;
var G__58591 = m;
var G__58592 = n;
var G__58593 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__58579,G__58580,G__58581,G__58582,G__58583,G__58584,G__58585,G__58586,G__58587,G__58588,G__58589,G__58590,G__58591,G__58592,G__58593) : target_fn.call(null,G__58579,G__58580,G__58581,G__58582,G__58583,G__58584,G__58585,G__58586,G__58587,G__58588,G__58589,G__58590,G__58591,G__58592,G__58593));
});
var G__59194__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58594 = a;
var G__58595 = b;
var G__58596 = c;
var G__58597 = d;
var G__58598 = e;
var G__58599 = f;
var G__58600 = g;
var G__58601 = h;
var G__58602 = i;
var G__58603 = j;
var G__58604 = k;
var G__58605 = l;
var G__58606 = m;
var G__58607 = n;
var G__58608 = o;
var G__58609 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__58594,G__58595,G__58596,G__58597,G__58598,G__58599,G__58600,G__58601,G__58602,G__58603,G__58604,G__58605,G__58606,G__58607,G__58608,G__58609) : self__.dispatch_fn.call(null,G__58594,G__58595,G__58596,G__58597,G__58598,G__58599,G__58600,G__58601,G__58602,G__58603,G__58604,G__58605,G__58606,G__58607,G__58608,G__58609));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58610 = a;
var G__58611 = b;
var G__58612 = c;
var G__58613 = d;
var G__58614 = e;
var G__58615 = f;
var G__58616 = g;
var G__58617 = h;
var G__58618 = i;
var G__58619 = j;
var G__58620 = k;
var G__58621 = l;
var G__58622 = m;
var G__58623 = n;
var G__58624 = o;
var G__58625 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__58610,G__58611,G__58612,G__58613,G__58614,G__58615,G__58616,G__58617,G__58618,G__58619,G__58620,G__58621,G__58622,G__58623,G__58624,G__58625) : target_fn.call(null,G__58610,G__58611,G__58612,G__58613,G__58614,G__58615,G__58616,G__58617,G__58618,G__58619,G__58620,G__58621,G__58622,G__58623,G__58624,G__58625));
});
var G__59194__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58626 = a;
var G__58627 = b;
var G__58628 = c;
var G__58629 = d;
var G__58630 = e;
var G__58631 = f;
var G__58632 = g;
var G__58633 = h;
var G__58634 = i;
var G__58635 = j;
var G__58636 = k;
var G__58637 = l;
var G__58638 = m;
var G__58639 = n;
var G__58640 = o;
var G__58641 = p;
var G__58642 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__58626,G__58627,G__58628,G__58629,G__58630,G__58631,G__58632,G__58633,G__58634,G__58635,G__58636,G__58637,G__58638,G__58639,G__58640,G__58641,G__58642) : self__.dispatch_fn.call(null,G__58626,G__58627,G__58628,G__58629,G__58630,G__58631,G__58632,G__58633,G__58634,G__58635,G__58636,G__58637,G__58638,G__58639,G__58640,G__58641,G__58642));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58643 = a;
var G__58644 = b;
var G__58645 = c;
var G__58646 = d;
var G__58647 = e;
var G__58648 = f;
var G__58649 = g;
var G__58650 = h;
var G__58651 = i;
var G__58652 = j;
var G__58653 = k;
var G__58654 = l;
var G__58655 = m;
var G__58656 = n;
var G__58657 = o;
var G__58658 = p;
var G__58659 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__58643,G__58644,G__58645,G__58646,G__58647,G__58648,G__58649,G__58650,G__58651,G__58652,G__58653,G__58654,G__58655,G__58656,G__58657,G__58658,G__58659) : target_fn.call(null,G__58643,G__58644,G__58645,G__58646,G__58647,G__58648,G__58649,G__58650,G__58651,G__58652,G__58653,G__58654,G__58655,G__58656,G__58657,G__58658,G__58659));
});
var G__59194__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58660 = a;
var G__58661 = b;
var G__58662 = c;
var G__58663 = d;
var G__58664 = e;
var G__58665 = f;
var G__58666 = g;
var G__58667 = h;
var G__58668 = i;
var G__58669 = j;
var G__58670 = k;
var G__58671 = l;
var G__58672 = m;
var G__58673 = n;
var G__58674 = o;
var G__58675 = p;
var G__58676 = q;
var G__58677 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__58660,G__58661,G__58662,G__58663,G__58664,G__58665,G__58666,G__58667,G__58668,G__58669,G__58670,G__58671,G__58672,G__58673,G__58674,G__58675,G__58676,G__58677) : self__.dispatch_fn.call(null,G__58660,G__58661,G__58662,G__58663,G__58664,G__58665,G__58666,G__58667,G__58668,G__58669,G__58670,G__58671,G__58672,G__58673,G__58674,G__58675,G__58676,G__58677));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58678 = a;
var G__58679 = b;
var G__58680 = c;
var G__58681 = d;
var G__58682 = e;
var G__58683 = f;
var G__58684 = g;
var G__58685 = h;
var G__58686 = i;
var G__58687 = j;
var G__58688 = k;
var G__58689 = l;
var G__58690 = m;
var G__58691 = n;
var G__58692 = o;
var G__58693 = p;
var G__58694 = q;
var G__58695 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__58678,G__58679,G__58680,G__58681,G__58682,G__58683,G__58684,G__58685,G__58686,G__58687,G__58688,G__58689,G__58690,G__58691,G__58692,G__58693,G__58694,G__58695) : target_fn.call(null,G__58678,G__58679,G__58680,G__58681,G__58682,G__58683,G__58684,G__58685,G__58686,G__58687,G__58688,G__58689,G__58690,G__58691,G__58692,G__58693,G__58694,G__58695));
});
var G__59194__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58696 = a;
var G__58697 = b;
var G__58698 = c;
var G__58699 = d;
var G__58700 = e;
var G__58701 = f;
var G__58702 = g;
var G__58703 = h;
var G__58704 = i;
var G__58705 = j;
var G__58706 = k;
var G__58707 = l;
var G__58708 = m;
var G__58709 = n;
var G__58710 = o;
var G__58711 = p;
var G__58712 = q;
var G__58713 = r;
var G__58714 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__58696,G__58697,G__58698,G__58699,G__58700,G__58701,G__58702,G__58703,G__58704,G__58705,G__58706,G__58707,G__58708,G__58709,G__58710,G__58711,G__58712,G__58713,G__58714) : self__.dispatch_fn.call(null,G__58696,G__58697,G__58698,G__58699,G__58700,G__58701,G__58702,G__58703,G__58704,G__58705,G__58706,G__58707,G__58708,G__58709,G__58710,G__58711,G__58712,G__58713,G__58714));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58715 = a;
var G__58716 = b;
var G__58717 = c;
var G__58718 = d;
var G__58719 = e;
var G__58720 = f;
var G__58721 = g;
var G__58722 = h;
var G__58723 = i;
var G__58724 = j;
var G__58725 = k;
var G__58726 = l;
var G__58727 = m;
var G__58728 = n;
var G__58729 = o;
var G__58730 = p;
var G__58731 = q;
var G__58732 = r;
var G__58733 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__58715,G__58716,G__58717,G__58718,G__58719,G__58720,G__58721,G__58722,G__58723,G__58724,G__58725,G__58726,G__58727,G__58728,G__58729,G__58730,G__58731,G__58732,G__58733) : target_fn.call(null,G__58715,G__58716,G__58717,G__58718,G__58719,G__58720,G__58721,G__58722,G__58723,G__58724,G__58725,G__58726,G__58727,G__58728,G__58729,G__58730,G__58731,G__58732,G__58733));
});
var G__59194__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__58734 = a;
var G__58735 = b;
var G__58736 = c;
var G__58737 = d;
var G__58738 = e;
var G__58739 = f;
var G__58740 = g;
var G__58741 = h;
var G__58742 = i;
var G__58743 = j;
var G__58744 = k;
var G__58745 = l;
var G__58746 = m;
var G__58747 = n;
var G__58748 = o;
var G__58749 = p;
var G__58750 = q;
var G__58751 = r;
var G__58752 = s;
var G__58753 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__58734,G__58735,G__58736,G__58737,G__58738,G__58739,G__58740,G__58741,G__58742,G__58743,G__58744,G__58745,G__58746,G__58747,G__58748,G__58749,G__58750,G__58751,G__58752,G__58753) : self__.dispatch_fn.call(null,G__58734,G__58735,G__58736,G__58737,G__58738,G__58739,G__58740,G__58741,G__58742,G__58743,G__58744,G__58745,G__58746,G__58747,G__58748,G__58749,G__58750,G__58751,G__58752,G__58753));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58754 = a;
var G__58755 = b;
var G__58756 = c;
var G__58757 = d;
var G__58758 = e;
var G__58759 = f;
var G__58760 = g;
var G__58761 = h;
var G__58762 = i;
var G__58763 = j;
var G__58764 = k;
var G__58765 = l;
var G__58766 = m;
var G__58767 = n;
var G__58768 = o;
var G__58769 = p;
var G__58770 = q;
var G__58771 = r;
var G__58772 = s;
var G__58773 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__58754,G__58755,G__58756,G__58757,G__58758,G__58759,G__58760,G__58761,G__58762,G__58763,G__58764,G__58765,G__58766,G__58767,G__58768,G__58769,G__58770,G__58771,G__58772,G__58773) : target_fn.call(null,G__58754,G__58755,G__58756,G__58757,G__58758,G__58759,G__58760,G__58761,G__58762,G__58763,G__58764,G__58765,G__58766,G__58767,G__58768,G__58769,G__58770,G__58771,G__58772,G__58773));
});
var G__59194__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__59194 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__59194__1.call(this,self__);
case 2:
return G__59194__2.call(this,self__,a);
case 3:
return G__59194__3.call(this,self__,a,b);
case 4:
return G__59194__4.call(this,self__,a,b,c);
case 5:
return G__59194__5.call(this,self__,a,b,c,d);
case 6:
return G__59194__6.call(this,self__,a,b,c,d,e);
case 7:
return G__59194__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__59194__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__59194__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__59194__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__59194__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__59194__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__59194__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__59194__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__59194__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__59194__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__59194__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__59194__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__59194__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__59194__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__59194__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__59194__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__59194.cljs$core$IFn$_invoke$arity$1 = G__59194__1;
G__59194.cljs$core$IFn$_invoke$arity$2 = G__59194__2;
G__59194.cljs$core$IFn$_invoke$arity$3 = G__59194__3;
G__59194.cljs$core$IFn$_invoke$arity$4 = G__59194__4;
G__59194.cljs$core$IFn$_invoke$arity$5 = G__59194__5;
G__59194.cljs$core$IFn$_invoke$arity$6 = G__59194__6;
G__59194.cljs$core$IFn$_invoke$arity$7 = G__59194__7;
G__59194.cljs$core$IFn$_invoke$arity$8 = G__59194__8;
G__59194.cljs$core$IFn$_invoke$arity$9 = G__59194__9;
G__59194.cljs$core$IFn$_invoke$arity$10 = G__59194__10;
G__59194.cljs$core$IFn$_invoke$arity$11 = G__59194__11;
G__59194.cljs$core$IFn$_invoke$arity$12 = G__59194__12;
G__59194.cljs$core$IFn$_invoke$arity$13 = G__59194__13;
G__59194.cljs$core$IFn$_invoke$arity$14 = G__59194__14;
G__59194.cljs$core$IFn$_invoke$arity$15 = G__59194__15;
G__59194.cljs$core$IFn$_invoke$arity$16 = G__59194__16;
G__59194.cljs$core$IFn$_invoke$arity$17 = G__59194__17;
G__59194.cljs$core$IFn$_invoke$arity$18 = G__59194__18;
G__59194.cljs$core$IFn$_invoke$arity$19 = G__59194__19;
G__59194.cljs$core$IFn$_invoke$arity$20 = G__59194__20;
G__59194.cljs$core$IFn$_invoke$arity$21 = G__59194__21;
G__59194.cljs$core$IFn$_invoke$arity$22 = G__59194__22;
return G__59194;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args58346){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args58346)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58774 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__58774) : self__.dispatch_fn.call(null,G__58774));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58775 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__58775) : target_fn.call(null,G__58775));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58776 = a;
var G__58777 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__58776,G__58777) : self__.dispatch_fn.call(null,G__58776,G__58777));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58778 = a;
var G__58779 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__58778,G__58779) : target_fn.call(null,G__58778,G__58779));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58780 = a;
var G__58781 = b;
var G__58782 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__58780,G__58781,G__58782) : self__.dispatch_fn.call(null,G__58780,G__58781,G__58782));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58783 = a;
var G__58784 = b;
var G__58785 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__58783,G__58784,G__58785) : target_fn.call(null,G__58783,G__58784,G__58785));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58786 = a;
var G__58787 = b;
var G__58788 = c;
var G__58789 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__58786,G__58787,G__58788,G__58789) : self__.dispatch_fn.call(null,G__58786,G__58787,G__58788,G__58789));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58790 = a;
var G__58791 = b;
var G__58792 = c;
var G__58793 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__58790,G__58791,G__58792,G__58793) : target_fn.call(null,G__58790,G__58791,G__58792,G__58793));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58794 = a;
var G__58795 = b;
var G__58796 = c;
var G__58797 = d;
var G__58798 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__58794,G__58795,G__58796,G__58797,G__58798) : self__.dispatch_fn.call(null,G__58794,G__58795,G__58796,G__58797,G__58798));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58799 = a;
var G__58800 = b;
var G__58801 = c;
var G__58802 = d;
var G__58803 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__58799,G__58800,G__58801,G__58802,G__58803) : target_fn.call(null,G__58799,G__58800,G__58801,G__58802,G__58803));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58804 = a;
var G__58805 = b;
var G__58806 = c;
var G__58807 = d;
var G__58808 = e;
var G__58809 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__58804,G__58805,G__58806,G__58807,G__58808,G__58809) : self__.dispatch_fn.call(null,G__58804,G__58805,G__58806,G__58807,G__58808,G__58809));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58810 = a;
var G__58811 = b;
var G__58812 = c;
var G__58813 = d;
var G__58814 = e;
var G__58815 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__58810,G__58811,G__58812,G__58813,G__58814,G__58815) : target_fn.call(null,G__58810,G__58811,G__58812,G__58813,G__58814,G__58815));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58816 = a;
var G__58817 = b;
var G__58818 = c;
var G__58819 = d;
var G__58820 = e;
var G__58821 = f;
var G__58822 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__58816,G__58817,G__58818,G__58819,G__58820,G__58821,G__58822) : self__.dispatch_fn.call(null,G__58816,G__58817,G__58818,G__58819,G__58820,G__58821,G__58822));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58823 = a;
var G__58824 = b;
var G__58825 = c;
var G__58826 = d;
var G__58827 = e;
var G__58828 = f;
var G__58829 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__58823,G__58824,G__58825,G__58826,G__58827,G__58828,G__58829) : target_fn.call(null,G__58823,G__58824,G__58825,G__58826,G__58827,G__58828,G__58829));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58830 = a;
var G__58831 = b;
var G__58832 = c;
var G__58833 = d;
var G__58834 = e;
var G__58835 = f;
var G__58836 = g;
var G__58837 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__58830,G__58831,G__58832,G__58833,G__58834,G__58835,G__58836,G__58837) : self__.dispatch_fn.call(null,G__58830,G__58831,G__58832,G__58833,G__58834,G__58835,G__58836,G__58837));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58838 = a;
var G__58839 = b;
var G__58840 = c;
var G__58841 = d;
var G__58842 = e;
var G__58843 = f;
var G__58844 = g;
var G__58845 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__58838,G__58839,G__58840,G__58841,G__58842,G__58843,G__58844,G__58845) : target_fn.call(null,G__58838,G__58839,G__58840,G__58841,G__58842,G__58843,G__58844,G__58845));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58846 = a;
var G__58847 = b;
var G__58848 = c;
var G__58849 = d;
var G__58850 = e;
var G__58851 = f;
var G__58852 = g;
var G__58853 = h;
var G__58854 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__58846,G__58847,G__58848,G__58849,G__58850,G__58851,G__58852,G__58853,G__58854) : self__.dispatch_fn.call(null,G__58846,G__58847,G__58848,G__58849,G__58850,G__58851,G__58852,G__58853,G__58854));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58855 = a;
var G__58856 = b;
var G__58857 = c;
var G__58858 = d;
var G__58859 = e;
var G__58860 = f;
var G__58861 = g;
var G__58862 = h;
var G__58863 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__58855,G__58856,G__58857,G__58858,G__58859,G__58860,G__58861,G__58862,G__58863) : target_fn.call(null,G__58855,G__58856,G__58857,G__58858,G__58859,G__58860,G__58861,G__58862,G__58863));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58864 = a;
var G__58865 = b;
var G__58866 = c;
var G__58867 = d;
var G__58868 = e;
var G__58869 = f;
var G__58870 = g;
var G__58871 = h;
var G__58872 = i;
var G__58873 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__58864,G__58865,G__58866,G__58867,G__58868,G__58869,G__58870,G__58871,G__58872,G__58873) : self__.dispatch_fn.call(null,G__58864,G__58865,G__58866,G__58867,G__58868,G__58869,G__58870,G__58871,G__58872,G__58873));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58874 = a;
var G__58875 = b;
var G__58876 = c;
var G__58877 = d;
var G__58878 = e;
var G__58879 = f;
var G__58880 = g;
var G__58881 = h;
var G__58882 = i;
var G__58883 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__58874,G__58875,G__58876,G__58877,G__58878,G__58879,G__58880,G__58881,G__58882,G__58883) : target_fn.call(null,G__58874,G__58875,G__58876,G__58877,G__58878,G__58879,G__58880,G__58881,G__58882,G__58883));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58884 = a;
var G__58885 = b;
var G__58886 = c;
var G__58887 = d;
var G__58888 = e;
var G__58889 = f;
var G__58890 = g;
var G__58891 = h;
var G__58892 = i;
var G__58893 = j;
var G__58894 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__58884,G__58885,G__58886,G__58887,G__58888,G__58889,G__58890,G__58891,G__58892,G__58893,G__58894) : self__.dispatch_fn.call(null,G__58884,G__58885,G__58886,G__58887,G__58888,G__58889,G__58890,G__58891,G__58892,G__58893,G__58894));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58895 = a;
var G__58896 = b;
var G__58897 = c;
var G__58898 = d;
var G__58899 = e;
var G__58900 = f;
var G__58901 = g;
var G__58902 = h;
var G__58903 = i;
var G__58904 = j;
var G__58905 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__58895,G__58896,G__58897,G__58898,G__58899,G__58900,G__58901,G__58902,G__58903,G__58904,G__58905) : target_fn.call(null,G__58895,G__58896,G__58897,G__58898,G__58899,G__58900,G__58901,G__58902,G__58903,G__58904,G__58905));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58906 = a;
var G__58907 = b;
var G__58908 = c;
var G__58909 = d;
var G__58910 = e;
var G__58911 = f;
var G__58912 = g;
var G__58913 = h;
var G__58914 = i;
var G__58915 = j;
var G__58916 = k;
var G__58917 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__58906,G__58907,G__58908,G__58909,G__58910,G__58911,G__58912,G__58913,G__58914,G__58915,G__58916,G__58917) : self__.dispatch_fn.call(null,G__58906,G__58907,G__58908,G__58909,G__58910,G__58911,G__58912,G__58913,G__58914,G__58915,G__58916,G__58917));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58918 = a;
var G__58919 = b;
var G__58920 = c;
var G__58921 = d;
var G__58922 = e;
var G__58923 = f;
var G__58924 = g;
var G__58925 = h;
var G__58926 = i;
var G__58927 = j;
var G__58928 = k;
var G__58929 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__58918,G__58919,G__58920,G__58921,G__58922,G__58923,G__58924,G__58925,G__58926,G__58927,G__58928,G__58929) : target_fn.call(null,G__58918,G__58919,G__58920,G__58921,G__58922,G__58923,G__58924,G__58925,G__58926,G__58927,G__58928,G__58929));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58930 = a;
var G__58931 = b;
var G__58932 = c;
var G__58933 = d;
var G__58934 = e;
var G__58935 = f;
var G__58936 = g;
var G__58937 = h;
var G__58938 = i;
var G__58939 = j;
var G__58940 = k;
var G__58941 = l;
var G__58942 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__58930,G__58931,G__58932,G__58933,G__58934,G__58935,G__58936,G__58937,G__58938,G__58939,G__58940,G__58941,G__58942) : self__.dispatch_fn.call(null,G__58930,G__58931,G__58932,G__58933,G__58934,G__58935,G__58936,G__58937,G__58938,G__58939,G__58940,G__58941,G__58942));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58943 = a;
var G__58944 = b;
var G__58945 = c;
var G__58946 = d;
var G__58947 = e;
var G__58948 = f;
var G__58949 = g;
var G__58950 = h;
var G__58951 = i;
var G__58952 = j;
var G__58953 = k;
var G__58954 = l;
var G__58955 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__58943,G__58944,G__58945,G__58946,G__58947,G__58948,G__58949,G__58950,G__58951,G__58952,G__58953,G__58954,G__58955) : target_fn.call(null,G__58943,G__58944,G__58945,G__58946,G__58947,G__58948,G__58949,G__58950,G__58951,G__58952,G__58953,G__58954,G__58955));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58956 = a;
var G__58957 = b;
var G__58958 = c;
var G__58959 = d;
var G__58960 = e;
var G__58961 = f;
var G__58962 = g;
var G__58963 = h;
var G__58964 = i;
var G__58965 = j;
var G__58966 = k;
var G__58967 = l;
var G__58968 = m;
var G__58969 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__58956,G__58957,G__58958,G__58959,G__58960,G__58961,G__58962,G__58963,G__58964,G__58965,G__58966,G__58967,G__58968,G__58969) : self__.dispatch_fn.call(null,G__58956,G__58957,G__58958,G__58959,G__58960,G__58961,G__58962,G__58963,G__58964,G__58965,G__58966,G__58967,G__58968,G__58969));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58970 = a;
var G__58971 = b;
var G__58972 = c;
var G__58973 = d;
var G__58974 = e;
var G__58975 = f;
var G__58976 = g;
var G__58977 = h;
var G__58978 = i;
var G__58979 = j;
var G__58980 = k;
var G__58981 = l;
var G__58982 = m;
var G__58983 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__58970,G__58971,G__58972,G__58973,G__58974,G__58975,G__58976,G__58977,G__58978,G__58979,G__58980,G__58981,G__58982,G__58983) : target_fn.call(null,G__58970,G__58971,G__58972,G__58973,G__58974,G__58975,G__58976,G__58977,G__58978,G__58979,G__58980,G__58981,G__58982,G__58983));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__58984 = a;
var G__58985 = b;
var G__58986 = c;
var G__58987 = d;
var G__58988 = e;
var G__58989 = f;
var G__58990 = g;
var G__58991 = h;
var G__58992 = i;
var G__58993 = j;
var G__58994 = k;
var G__58995 = l;
var G__58996 = m;
var G__58997 = n;
var G__58998 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__58984,G__58985,G__58986,G__58987,G__58988,G__58989,G__58990,G__58991,G__58992,G__58993,G__58994,G__58995,G__58996,G__58997,G__58998) : self__.dispatch_fn.call(null,G__58984,G__58985,G__58986,G__58987,G__58988,G__58989,G__58990,G__58991,G__58992,G__58993,G__58994,G__58995,G__58996,G__58997,G__58998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__58999 = a;
var G__59000 = b;
var G__59001 = c;
var G__59002 = d;
var G__59003 = e;
var G__59004 = f;
var G__59005 = g;
var G__59006 = h;
var G__59007 = i;
var G__59008 = j;
var G__59009 = k;
var G__59010 = l;
var G__59011 = m;
var G__59012 = n;
var G__59013 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__58999,G__59000,G__59001,G__59002,G__59003,G__59004,G__59005,G__59006,G__59007,G__59008,G__59009,G__59010,G__59011,G__59012,G__59013) : target_fn.call(null,G__58999,G__59000,G__59001,G__59002,G__59003,G__59004,G__59005,G__59006,G__59007,G__59008,G__59009,G__59010,G__59011,G__59012,G__59013));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__59014 = a;
var G__59015 = b;
var G__59016 = c;
var G__59017 = d;
var G__59018 = e;
var G__59019 = f;
var G__59020 = g;
var G__59021 = h;
var G__59022 = i;
var G__59023 = j;
var G__59024 = k;
var G__59025 = l;
var G__59026 = m;
var G__59027 = n;
var G__59028 = o;
var G__59029 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__59014,G__59015,G__59016,G__59017,G__59018,G__59019,G__59020,G__59021,G__59022,G__59023,G__59024,G__59025,G__59026,G__59027,G__59028,G__59029) : self__.dispatch_fn.call(null,G__59014,G__59015,G__59016,G__59017,G__59018,G__59019,G__59020,G__59021,G__59022,G__59023,G__59024,G__59025,G__59026,G__59027,G__59028,G__59029));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__59030 = a;
var G__59031 = b;
var G__59032 = c;
var G__59033 = d;
var G__59034 = e;
var G__59035 = f;
var G__59036 = g;
var G__59037 = h;
var G__59038 = i;
var G__59039 = j;
var G__59040 = k;
var G__59041 = l;
var G__59042 = m;
var G__59043 = n;
var G__59044 = o;
var G__59045 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__59030,G__59031,G__59032,G__59033,G__59034,G__59035,G__59036,G__59037,G__59038,G__59039,G__59040,G__59041,G__59042,G__59043,G__59044,G__59045) : target_fn.call(null,G__59030,G__59031,G__59032,G__59033,G__59034,G__59035,G__59036,G__59037,G__59038,G__59039,G__59040,G__59041,G__59042,G__59043,G__59044,G__59045));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__59046 = a;
var G__59047 = b;
var G__59048 = c;
var G__59049 = d;
var G__59050 = e;
var G__59051 = f;
var G__59052 = g;
var G__59053 = h;
var G__59054 = i;
var G__59055 = j;
var G__59056 = k;
var G__59057 = l;
var G__59058 = m;
var G__59059 = n;
var G__59060 = o;
var G__59061 = p;
var G__59062 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__59046,G__59047,G__59048,G__59049,G__59050,G__59051,G__59052,G__59053,G__59054,G__59055,G__59056,G__59057,G__59058,G__59059,G__59060,G__59061,G__59062) : self__.dispatch_fn.call(null,G__59046,G__59047,G__59048,G__59049,G__59050,G__59051,G__59052,G__59053,G__59054,G__59055,G__59056,G__59057,G__59058,G__59059,G__59060,G__59061,G__59062));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__59063 = a;
var G__59064 = b;
var G__59065 = c;
var G__59066 = d;
var G__59067 = e;
var G__59068 = f;
var G__59069 = g;
var G__59070 = h;
var G__59071 = i;
var G__59072 = j;
var G__59073 = k;
var G__59074 = l;
var G__59075 = m;
var G__59076 = n;
var G__59077 = o;
var G__59078 = p;
var G__59079 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__59063,G__59064,G__59065,G__59066,G__59067,G__59068,G__59069,G__59070,G__59071,G__59072,G__59073,G__59074,G__59075,G__59076,G__59077,G__59078,G__59079) : target_fn.call(null,G__59063,G__59064,G__59065,G__59066,G__59067,G__59068,G__59069,G__59070,G__59071,G__59072,G__59073,G__59074,G__59075,G__59076,G__59077,G__59078,G__59079));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__59080 = a;
var G__59081 = b;
var G__59082 = c;
var G__59083 = d;
var G__59084 = e;
var G__59085 = f;
var G__59086 = g;
var G__59087 = h;
var G__59088 = i;
var G__59089 = j;
var G__59090 = k;
var G__59091 = l;
var G__59092 = m;
var G__59093 = n;
var G__59094 = o;
var G__59095 = p;
var G__59096 = q;
var G__59097 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__59080,G__59081,G__59082,G__59083,G__59084,G__59085,G__59086,G__59087,G__59088,G__59089,G__59090,G__59091,G__59092,G__59093,G__59094,G__59095,G__59096,G__59097) : self__.dispatch_fn.call(null,G__59080,G__59081,G__59082,G__59083,G__59084,G__59085,G__59086,G__59087,G__59088,G__59089,G__59090,G__59091,G__59092,G__59093,G__59094,G__59095,G__59096,G__59097));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__59098 = a;
var G__59099 = b;
var G__59100 = c;
var G__59101 = d;
var G__59102 = e;
var G__59103 = f;
var G__59104 = g;
var G__59105 = h;
var G__59106 = i;
var G__59107 = j;
var G__59108 = k;
var G__59109 = l;
var G__59110 = m;
var G__59111 = n;
var G__59112 = o;
var G__59113 = p;
var G__59114 = q;
var G__59115 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__59098,G__59099,G__59100,G__59101,G__59102,G__59103,G__59104,G__59105,G__59106,G__59107,G__59108,G__59109,G__59110,G__59111,G__59112,G__59113,G__59114,G__59115) : target_fn.call(null,G__59098,G__59099,G__59100,G__59101,G__59102,G__59103,G__59104,G__59105,G__59106,G__59107,G__59108,G__59109,G__59110,G__59111,G__59112,G__59113,G__59114,G__59115));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__59116 = a;
var G__59117 = b;
var G__59118 = c;
var G__59119 = d;
var G__59120 = e;
var G__59121 = f;
var G__59122 = g;
var G__59123 = h;
var G__59124 = i;
var G__59125 = j;
var G__59126 = k;
var G__59127 = l;
var G__59128 = m;
var G__59129 = n;
var G__59130 = o;
var G__59131 = p;
var G__59132 = q;
var G__59133 = r;
var G__59134 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__59116,G__59117,G__59118,G__59119,G__59120,G__59121,G__59122,G__59123,G__59124,G__59125,G__59126,G__59127,G__59128,G__59129,G__59130,G__59131,G__59132,G__59133,G__59134) : self__.dispatch_fn.call(null,G__59116,G__59117,G__59118,G__59119,G__59120,G__59121,G__59122,G__59123,G__59124,G__59125,G__59126,G__59127,G__59128,G__59129,G__59130,G__59131,G__59132,G__59133,G__59134));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__59135 = a;
var G__59136 = b;
var G__59137 = c;
var G__59138 = d;
var G__59139 = e;
var G__59140 = f;
var G__59141 = g;
var G__59142 = h;
var G__59143 = i;
var G__59144 = j;
var G__59145 = k;
var G__59146 = l;
var G__59147 = m;
var G__59148 = n;
var G__59149 = o;
var G__59150 = p;
var G__59151 = q;
var G__59152 = r;
var G__59153 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__59135,G__59136,G__59137,G__59138,G__59139,G__59140,G__59141,G__59142,G__59143,G__59144,G__59145,G__59146,G__59147,G__59148,G__59149,G__59150,G__59151,G__59152,G__59153) : target_fn.call(null,G__59135,G__59136,G__59137,G__59138,G__59139,G__59140,G__59141,G__59142,G__59143,G__59144,G__59145,G__59146,G__59147,G__59148,G__59149,G__59150,G__59151,G__59152,G__59153));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__59154 = a;
var G__59155 = b;
var G__59156 = c;
var G__59157 = d;
var G__59158 = e;
var G__59159 = f;
var G__59160 = g;
var G__59161 = h;
var G__59162 = i;
var G__59163 = j;
var G__59164 = k;
var G__59165 = l;
var G__59166 = m;
var G__59167 = n;
var G__59168 = o;
var G__59169 = p;
var G__59170 = q;
var G__59171 = r;
var G__59172 = s;
var G__59173 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__59154,G__59155,G__59156,G__59157,G__59158,G__59159,G__59160,G__59161,G__59162,G__59163,G__59164,G__59165,G__59166,G__59167,G__59168,G__59169,G__59170,G__59171,G__59172,G__59173) : self__.dispatch_fn.call(null,G__59154,G__59155,G__59156,G__59157,G__59158,G__59159,G__59160,G__59161,G__59162,G__59163,G__59164,G__59165,G__59166,G__59167,G__59168,G__59169,G__59170,G__59171,G__59172,G__59173));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__59174 = a;
var G__59175 = b;
var G__59176 = c;
var G__59177 = d;
var G__59178 = e;
var G__59179 = f;
var G__59180 = g;
var G__59181 = h;
var G__59182 = i;
var G__59183 = j;
var G__59184 = k;
var G__59185 = l;
var G__59186 = m;
var G__59187 = n;
var G__59188 = o;
var G__59189 = p;
var G__59190 = q;
var G__59191 = r;
var G__59192 = s;
var G__59193 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__59174,G__59175,G__59176,G__59177,G__59178,G__59179,G__59180,G__59181,G__59182,G__59183,G__59184,G__59185,G__59186,G__59187,G__59188,G__59189,G__59190,G__59191,G__59192,G__59193) : target_fn.call(null,G__59174,G__59175,G__59176,G__59177,G__59178,G__59179,G__59180,G__59181,G__59182,G__59183,G__59184,G__59185,G__59186,G__59187,G__59188,G__59189,G__59190,G__59191,G__59192,G__59193));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__59195 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__59195);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__59200 = x;
var G__59201 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__59200,G__59201) : pred.call(null,G__59200,G__59201));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__59202 = y;
var G__59203 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__59202,G__59203) : pred.call(null,G__59202,G__59203));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$20;
} else {
return cljs.core.constant$keyword$21;
}
});
