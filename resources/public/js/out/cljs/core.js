// Compiled by ClojureScript 0.0-2665 {:static-fns true}
if(!goog.isProvided_('cljs.core')) {
goog.provide('cljs.core');
}
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__7634__delegate = function (args){
return console.log.apply(console,(function (){var G__7633 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__7633) : cljs.core.into_array.call(null,G__7633));
})());
};
var G__7634 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7635__i = 0, G__7635__a = new Array(arguments.length -  0);
while (G__7635__i < G__7635__a.length) {G__7635__a[G__7635__i] = arguments[G__7635__i + 0]; ++G__7635__i;}
  args = new cljs.core.IndexedSeq(G__7635__a,0);
} 
return G__7634__delegate.call(this,args);};
G__7634.cljs$lang$maxFixedArity = 0;
G__7634.cljs$lang$applyTo = (function (arglist__7636){
var args = cljs.core.seq(arglist__7636);
return G__7634__delegate(args);
});
G__7634.cljs$core$IFn$_invoke$arity$variadic = G__7634__delegate;
return G__7634;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__7638 = x;
return goog.isString(G__7638);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__7640 = x__$1;
return goog.typeOf(G__7640);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3731__auto__ = ty;
if(cljs.core.truth_(and__3731__auto__)){
return ty.cljs$lang$type;
} else {
return and__3731__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__7642 = obj;
return goog.typeOf(G__7642);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__7644 = Symbol;
return goog.typeOf(G__7644);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4630__auto___7646 = len;
var i_7647 = (0);
while(true){
if((i_7647 < n__4630__auto___7646)){
(new_arr[i_7647] = (arr[i_7647]));

var G__7648 = (i_7647 + (1));
i_7647 = G__7648;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__7649 = (i + (1));
i = G__7649;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__7658__delegate = function (array,i,idxs){
var G__7655 = aget;
var G__7656 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__7657 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__7655,G__7656,G__7657) : cljs.core.apply.call(null,G__7655,G__7656,G__7657));
};
var G__7658 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__7659__i = 0, G__7659__a = new Array(arguments.length -  2);
while (G__7659__i < G__7659__a.length) {G__7659__a[G__7659__i] = arguments[G__7659__i + 2]; ++G__7659__i;}
  idxs = new cljs.core.IndexedSeq(G__7659__a,0);
} 
return G__7658__delegate.call(this,array,i,idxs);};
G__7658.cljs$lang$maxFixedArity = 2;
G__7658.cljs$lang$applyTo = (function (arglist__7660){
var array = cljs.core.first(arglist__7660);
arglist__7660 = cljs.core.next(arglist__7660);
var i = cljs.core.first(arglist__7660);
var idxs = cljs.core.rest(arglist__7660);
return G__7658__delegate(array,i,idxs);
});
G__7658.cljs$core$IFn$_invoke$arity$variadic = G__7658__delegate;
return G__7658;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__7661 = null;
if (arguments.length > 2) {
var G__7662__i = 0, G__7662__a = new Array(arguments.length -  2);
while (G__7662__i < G__7662__a.length) {G__7662__a[G__7662__i] = arguments[G__7662__i + 2]; ++G__7662__i;}
G__7661 = new cljs.core.IndexedSeq(G__7662__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__7661);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__7671__delegate = function (array,idx,idx2,idxv){
var G__7667 = aset;
var G__7668 = (array[idx]);
var G__7669 = idx2;
var G__7670 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__7667,G__7668,G__7669,G__7670) : cljs.core.apply.call(null,G__7667,G__7668,G__7669,G__7670));
};
var G__7671 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__7672__i = 0, G__7672__a = new Array(arguments.length -  3);
while (G__7672__i < G__7672__a.length) {G__7672__a[G__7672__i] = arguments[G__7672__i + 3]; ++G__7672__i;}
  idxv = new cljs.core.IndexedSeq(G__7672__a,0);
} 
return G__7671__delegate.call(this,array,idx,idx2,idxv);};
G__7671.cljs$lang$maxFixedArity = 3;
G__7671.cljs$lang$applyTo = (function (arglist__7673){
var array = cljs.core.first(arglist__7673);
arglist__7673 = cljs.core.next(arglist__7673);
var idx = cljs.core.first(arglist__7673);
arglist__7673 = cljs.core.next(arglist__7673);
var idx2 = cljs.core.first(arglist__7673);
var idxv = cljs.core.rest(arglist__7673);
return G__7671__delegate(array,idx,idx2,idxv);
});
G__7671.cljs$core$IFn$_invoke$arity$variadic = G__7671__delegate;
return G__7671;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__7674 = null;
if (arguments.length > 3) {
var G__7675__i = 0, G__7675__a = new Array(arguments.length -  3);
while (G__7675__i < G__7675__a.length) {G__7675__a[G__7675__i] = arguments[G__7675__i + 3]; ++G__7675__i;}
G__7674 = new cljs.core.IndexedSeq(G__7675__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__7674);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__7681 = (function (a,x){
a.push(x);

return a;
});
var G__7682 = [];
var G__7683 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7681,G__7682,G__7683) : cljs.core.reduce.call(null,G__7681,G__7682,G__7683));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__7684__i = 0, G__7684__a = new Array(arguments.length -  2);
while (G__7684__i < G__7684__a.length) {G__7684__a[G__7684__i] = arguments[G__7684__i + 2]; ++G__7684__i;}
  args = new cljs.core.IndexedSeq(G__7684__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__7685){
var obj = cljs.core.first(arglist__7685);
arglist__7685 = cljs.core.next(arglist__7685);
var s = cljs.core.first(arglist__7685);
var args = cljs.core.rest(arglist__7685);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj7687 = {};
return obj7687;
})();


cljs.core.IFn = (function (){var obj7689 = {};
return obj7689;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7735 = x__4387__auto__;
return goog.typeOf(G__7735);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7737 = x__4387__auto__;
return goog.typeOf(G__7737);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7739 = x__4387__auto__;
return goog.typeOf(G__7739);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7741 = x__4387__auto__;
return goog.typeOf(G__7741);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7743 = x__4387__auto__;
return goog.typeOf(G__7743);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7745 = x__4387__auto__;
return goog.typeOf(G__7745);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7747 = x__4387__auto__;
return goog.typeOf(G__7747);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7749 = x__4387__auto__;
return goog.typeOf(G__7749);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7751 = x__4387__auto__;
return goog.typeOf(G__7751);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7753 = x__4387__auto__;
return goog.typeOf(G__7753);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7755 = x__4387__auto__;
return goog.typeOf(G__7755);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7757 = x__4387__auto__;
return goog.typeOf(G__7757);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7759 = x__4387__auto__;
return goog.typeOf(G__7759);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7761 = x__4387__auto__;
return goog.typeOf(G__7761);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7763 = x__4387__auto__;
return goog.typeOf(G__7763);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7765 = x__4387__auto__;
return goog.typeOf(G__7765);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7767 = x__4387__auto__;
return goog.typeOf(G__7767);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7769 = x__4387__auto__;
return goog.typeOf(G__7769);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7771 = x__4387__auto__;
return goog.typeOf(G__7771);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7773 = x__4387__auto__;
return goog.typeOf(G__7773);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7775 = x__4387__auto__;
return goog.typeOf(G__7775);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._invoke[(function (){var G__7777 = x__4387__auto__;
return goog.typeOf(G__7777);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._invoke["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj7779 = {};
return obj7779;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3731__auto__ = value;
if(and__3731__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3731__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4387__auto__ = (((value == null))?null:value);
return (function (){var or__3743__auto__ = (cljs.core._clone[(function (){var G__7783 = x__4387__auto__;
return goog.typeOf(G__7783);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._clone["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj7785 = {};
return obj7785;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._count[(function (){var G__7789 = x__4387__auto__;
return goog.typeOf(G__7789);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._count["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj7791 = {};
return obj7791;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._empty[(function (){var G__7795 = x__4387__auto__;
return goog.typeOf(G__7795);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._empty["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj7797 = {};
return obj7797;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._conj[(function (){var G__7801 = x__4387__auto__;
return goog.typeOf(G__7801);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._conj["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj7803 = {};
return obj7803;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._nth[(function (){var G__7809 = x__4387__auto__;
return goog.typeOf(G__7809);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._nth["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._nth[(function (){var G__7811 = x__4387__auto__;
return goog.typeOf(G__7811);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._nth["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj7813 = {};
return obj7813;
})();


cljs.core.ISeq = (function (){var obj7815 = {};
return obj7815;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._first[(function (){var G__7819 = x__4387__auto__;
return goog.typeOf(G__7819);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._first["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._rest[(function (){var G__7823 = x__4387__auto__;
return goog.typeOf(G__7823);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._rest["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj7825 = {};
return obj7825;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._next[(function (){var G__7829 = x__4387__auto__;
return goog.typeOf(G__7829);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._next["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj7831 = {};
return obj7831;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._lookup[(function (){var G__7837 = x__4387__auto__;
return goog.typeOf(G__7837);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._lookup["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._lookup[(function (){var G__7839 = x__4387__auto__;
return goog.typeOf(G__7839);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._lookup["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj7841 = {};
return obj7841;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__7845 = x__4387__auto__;
return goog.typeOf(G__7845);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._assoc[(function (){var G__7849 = x__4387__auto__;
return goog.typeOf(G__7849);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._assoc["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj7851 = {};
return obj7851;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._dissoc[(function (){var G__7855 = x__4387__auto__;
return goog.typeOf(G__7855);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj7857 = {};
return obj7857;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._key[(function (){var G__7861 = x__4387__auto__;
return goog.typeOf(G__7861);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._key["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._val[(function (){var G__7865 = x__4387__auto__;
return goog.typeOf(G__7865);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._val["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj7867 = {};
return obj7867;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._disjoin[(function (){var G__7871 = x__4387__auto__;
return goog.typeOf(G__7871);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj7873 = {};
return obj7873;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._peek[(function (){var G__7877 = x__4387__auto__;
return goog.typeOf(G__7877);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._peek["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._pop[(function (){var G__7881 = x__4387__auto__;
return goog.typeOf(G__7881);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._pop["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj7883 = {};
return obj7883;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._assoc_n[(function (){var G__7887 = x__4387__auto__;
return goog.typeOf(G__7887);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj7889 = {};
return obj7889;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._deref[(function (){var G__7893 = x__4387__auto__;
return goog.typeOf(G__7893);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._deref["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj7895 = {};
return obj7895;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._deref_with_timeout[(function (){var G__7899 = x__4387__auto__;
return goog.typeOf(G__7899);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj7901 = {};
return obj7901;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._meta[(function (){var G__7905 = x__4387__auto__;
return goog.typeOf(G__7905);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._meta["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj7907 = {};
return obj7907;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._with_meta[(function (){var G__7911 = x__4387__auto__;
return goog.typeOf(G__7911);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj7913 = {};
return obj7913;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._reduce[(function (){var G__7919 = x__4387__auto__;
return goog.typeOf(G__7919);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._reduce["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._reduce[(function (){var G__7921 = x__4387__auto__;
return goog.typeOf(G__7921);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._reduce["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj7923 = {};
return obj7923;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._kv_reduce[(function (){var G__7927 = x__4387__auto__;
return goog.typeOf(G__7927);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj7929 = {};
return obj7929;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._equiv[(function (){var G__7933 = x__4387__auto__;
return goog.typeOf(G__7933);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._equiv["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj7935 = {};
return obj7935;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._hash[(function (){var G__7939 = x__4387__auto__;
return goog.typeOf(G__7939);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._hash["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj7941 = {};
return obj7941;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._seq[(function (){var G__7945 = x__4387__auto__;
return goog.typeOf(G__7945);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._seq["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj7947 = {};
return obj7947;
})();


cljs.core.IList = (function (){var obj7949 = {};
return obj7949;
})();


cljs.core.IRecord = (function (){var obj7951 = {};
return obj7951;
})();


cljs.core.IReversible = (function (){var obj7953 = {};
return obj7953;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._rseq[(function (){var G__7957 = x__4387__auto__;
return goog.typeOf(G__7957);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._rseq["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj7959 = {};
return obj7959;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._sorted_seq[(function (){var G__7963 = x__4387__auto__;
return goog.typeOf(G__7963);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._sorted_seq_from[(function (){var G__7967 = x__4387__auto__;
return goog.typeOf(G__7967);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._entry_key[(function (){var G__7971 = x__4387__auto__;
return goog.typeOf(G__7971);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._comparator[(function (){var G__7975 = x__4387__auto__;
return goog.typeOf(G__7975);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._comparator["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj7977 = {};
return obj7977;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3731__auto__ = writer;
if(and__3731__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3731__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4387__auto__ = (((writer == null))?null:writer);
return (function (){var or__3743__auto__ = (cljs.core._write[(function (){var G__7981 = x__4387__auto__;
return goog.typeOf(G__7981);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._write["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3731__auto__ = writer;
if(and__3731__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3731__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4387__auto__ = (((writer == null))?null:writer);
return (function (){var or__3743__auto__ = (cljs.core._flush[(function (){var G__7985 = x__4387__auto__;
return goog.typeOf(G__7985);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._flush["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj7987 = {};
return obj7987;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._pr_writer[(function (){var G__7991 = x__4387__auto__;
return goog.typeOf(G__7991);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj7993 = {};
return obj7993;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3731__auto__ = d;
if(and__3731__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3731__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4387__auto__ = (((d == null))?null:d);
return (function (){var or__3743__auto__ = (cljs.core._realized_QMARK_[(function (){var G__7997 = x__4387__auto__;
return goog.typeOf(G__7997);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj7999 = {};
return obj7999;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._notify_watches[(function (){var G__8003 = x__4387__auto__;
return goog.typeOf(G__8003);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._add_watch[(function (){var G__8007 = x__4387__auto__;
return goog.typeOf(G__8007);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3731__auto__ = this$;
if(and__3731__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3731__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4387__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3743__auto__ = (cljs.core._remove_watch[(function (){var G__8011 = x__4387__auto__;
return goog.typeOf(G__8011);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj8013 = {};
return obj8013;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._as_transient[(function (){var G__8017 = x__4387__auto__;
return goog.typeOf(G__8017);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj8019 = {};
return obj8019;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._conj_BANG_[(function (){var G__8023 = x__4387__auto__;
return goog.typeOf(G__8023);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._persistent_BANG_[(function (){var G__8027 = x__4387__auto__;
return goog.typeOf(G__8027);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj8029 = {};
return obj8029;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._assoc_BANG_[(function (){var G__8033 = x__4387__auto__;
return goog.typeOf(G__8033);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj8035 = {};
return obj8035;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__8039 = x__4387__auto__;
return goog.typeOf(G__8039);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj8041 = {};
return obj8041;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__8045 = x__4387__auto__;
return goog.typeOf(G__8045);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._pop_BANG_[(function (){var G__8049 = x__4387__auto__;
return goog.typeOf(G__8049);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj8051 = {};
return obj8051;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3731__auto__ = tcoll;
if(and__3731__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4387__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3743__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__8055 = x__4387__auto__;
return goog.typeOf(G__8055);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj8057 = {};
return obj8057;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._compare[(function (){var G__8061 = x__4387__auto__;
return goog.typeOf(G__8061);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._compare["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj8063 = {};
return obj8063;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._drop_first[(function (){var G__8067 = x__4387__auto__;
return goog.typeOf(G__8067);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj8069 = {};
return obj8069;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._chunked_first[(function (){var G__8073 = x__4387__auto__;
return goog.typeOf(G__8073);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._chunked_rest[(function (){var G__8077 = x__4387__auto__;
return goog.typeOf(G__8077);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj8079 = {};
return obj8079;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._chunked_next[(function (){var G__8083 = x__4387__auto__;
return goog.typeOf(G__8083);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj8085 = {};
return obj8085;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._name[(function (){var G__8089 = x__4387__auto__;
return goog.typeOf(G__8089);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._name["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._namespace[(function (){var G__8093 = x__4387__auto__;
return goog.typeOf(G__8093);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._namespace["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj8095 = {};
return obj8095;
})();


cljs.core.IReset = (function (){var obj8097 = {};
return obj8097;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._reset_BANG_[(function (){var G__8101 = x__4387__auto__;
return goog.typeOf(G__8101);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj8103 = {};
return obj8103;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._swap_BANG_[(function (){var G__8113 = x__4387__auto__;
return goog.typeOf(G__8113);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._swap_BANG_[(function (){var G__8115 = x__4387__auto__;
return goog.typeOf(G__8115);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._swap_BANG_[(function (){var G__8117 = x__4387__auto__;
return goog.typeOf(G__8117);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._swap_BANG_[(function (){var G__8119 = x__4387__auto__;
return goog.typeOf(G__8119);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj8121 = {};
return obj8121;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3731__auto__ = o;
if(and__3731__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3731__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4387__auto__ = (((o == null))?null:o);
return (function (){var or__3743__auto__ = (cljs.core._vreset_BANG_[(function (){var G__8125 = x__4387__auto__;
return goog.typeOf(G__8125);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj8127 = {};
return obj8127;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3731__auto__ = coll;
if(and__3731__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3731__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4387__auto__ = (((coll == null))?null:coll);
return (function (){var or__3743__auto__ = (cljs.core._iterator[(function (){var G__8131 = x__4387__auto__;
return goog.typeOf(G__8131);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._iterator["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__8134 = (4294967295);
var G__8135 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__8134,G__8135) : Math.imul.call(null,G__8134,G__8135));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__8138 = a;
var G__8139 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__8138,G__8139) : Math.imul.call(null,G__8138,G__8139));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__8140 = (i + (2));
var G__8141 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__8140;
h1 = G__8141;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj8143 = {};
return obj8143;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__8144 = (i + (1));
var G__8145 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__8144;
hash = G__8145;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj8149 = {};
return obj8149;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__8152 = o;
if(G__8152){
var bit__4417__auto__ = (G__8152.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4417__auto__) || (G__8152.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__8153 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__8153) : Math.floor.call(null,G__8153));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3731__auto__ = cljs.core.not(a.ns);
if(and__3731__auto__){
return b.ns;
} else {
return and__3731__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__8160 = a.ns;
var G__8161 = b.ns;
return goog.array.defaultCompare(G__8160,G__8161);
})();
if(((0) === nsc)){
var G__8162 = a.name;
var G__8163 = b.name;
return goog.array.defaultCompare(G__8162,G__8163);
} else {
return nsc;
}
}
} else {
var G__8164 = a.name;
var G__8165 = b.name;
return goog.array.defaultCompare(G__8164,G__8165);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4164__auto__ = self__._hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__8167 = null;
var G__8167__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__8167__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__8167 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__8167__2.call(this,self__,coll);
case 3:
return G__8167__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8167.cljs$core$IFn$_invoke$arity$2 = G__8167__2;
G__8167.cljs$core$IFn$_invoke$arity$3 = G__8167__3;
return G__8167;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args8166){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8166)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__8171 = x;
if(G__8171){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto__ = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return G__8171.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__8171.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__8171);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__8171);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__8173 = value;
if(G__8173){
var bit__4424__auto__ = (G__8173.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4424__auto__) || (G__8173.cljs$core$ICloneable$)){
return true;
} else {
if((!G__8173.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__8173);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__8173);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__8175 = coll;
if(G__8175){
var bit__4417__auto__ = (G__8175.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4417__auto__) || (G__8175.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__8177 = coll;
if(G__8177){
var bit__4417__auto__ = (G__8177.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4417__auto__) || (G__8177.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__8179 = coll;
if(G__8179){
var bit__4417__auto__ = (G__8179.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4417__auto__) || (G__8179.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__8181 = coll;
if(G__8181){
var bit__4417__auto__ = (G__8181.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4417__auto__) || (G__8181.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__8186__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__8187 = y;
var G__8188 = cljs.core.first(more);
var G__8189 = cljs.core.next(more);
x = G__8187;
y = G__8188;
more = G__8189;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8186 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8190__i = 0, G__8190__a = new Array(arguments.length -  2);
while (G__8190__i < G__8190__a.length) {G__8190__a[G__8190__i] = arguments[G__8190__i + 2]; ++G__8190__i;}
  more = new cljs.core.IndexedSeq(G__8190__a,0);
} 
return G__8186__delegate.call(this,x,y,more);};
G__8186.cljs$lang$maxFixedArity = 2;
G__8186.cljs$lang$applyTo = (function (arglist__8191){
var x = cljs.core.first(arglist__8191);
arglist__8191 = cljs.core.next(arglist__8191);
var y = cljs.core.first(arglist__8191);
var more = cljs.core.rest(arglist__8191);
return G__8186__delegate(x,y,more);
});
G__8186.cljs$core$IFn$_invoke$arity$variadic = G__8186__delegate;
return G__8186;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__8192 = null;
if (arguments.length > 2) {
var G__8193__i = 0, G__8193__a = new Array(arguments.length -  2);
while (G__8193__i < G__8193__a.length) {G__8193__a[G__8193__i] = arguments[G__8193__i + 2]; ++G__8193__i;}
G__8192 = new cljs.core.IndexedSeq(G__8193__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8192);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__8194 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__8194) : cljs.core.es6_iterator_seq.call(null,G__8194));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__8195 = (n + (1));
var G__8196 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__8197 = cljs.core.next(coll__$1);
n = G__8195;
hash_code = G__8196;
coll__$1 = G__8197;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__8198 = (n + (1));
var G__8199 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__8200 = cljs.core.next(coll__$1);
n = G__8198;
hash_code = G__8199;
coll__$1 = G__8200;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__8201 = o;
return goog.getUid(G__8201);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__8203 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8203) : cljs.core.deref.call(null,G__8203));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__8210 = val;
var G__8211 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8210,G__8211) : f.call(null,G__8210,G__8211));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8216 = nval;
var G__8217 = (n + (1));
val = G__8216;
n = G__8217;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__8212 = val__$1;
var G__8213 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8212,G__8213) : f.call(null,G__8212,G__8213));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8218 = nval;
var G__8219 = (n + (1));
val__$1 = G__8218;
n = G__8219;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__8214 = val__$1;
var G__8215 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8214,G__8215) : f.call(null,G__8214,G__8215));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8220 = nval;
var G__8221 = (n + (1));
val__$1 = G__8220;
n = G__8221;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__8228 = val;
var G__8229 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8228,G__8229) : f.call(null,G__8228,G__8229));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8234 = nval;
var G__8235 = (n + (1));
val = G__8234;
n = G__8235;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__8230 = val__$1;
var G__8231 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8230,G__8231) : f.call(null,G__8230,G__8231));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8236 = nval;
var G__8237 = (n + (1));
val__$1 = G__8236;
n = G__8237;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__8232 = val__$1;
var G__8233 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8232,G__8233) : f.call(null,G__8232,G__8233));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8238 = nval;
var G__8239 = (n + (1));
val__$1 = G__8238;
n = G__8239;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__8241 = x;
if(G__8241){
var bit__4424__auto__ = (G__8241.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4424__auto__) || (G__8241.cljs$core$ICounted$)){
return true;
} else {
if((!G__8241.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__8241);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__8241);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__8243 = x;
if(G__8243){
var bit__4424__auto__ = (G__8243.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4424__auto__) || (G__8243.cljs$core$IIndexed$)){
return true;
} else {
if((!G__8243.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__8243);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__8243);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__8244 = coll__$1;
var G__8245 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__8244,G__8245) : cljs.core.equiv_sequential.call(null,G__8244,G__8245));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__8246 = o;
var G__8247 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__8246,G__8247) : cljs.core.cons.call(null,G__8246,G__8247));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__8250 = coll__$1;
var G__8251 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__8250,G__8251) : cljs.core.equiv_sequential.call(null,G__8250,G__8251));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__8252 = cljs.core.List.EMPTY;
var G__8253 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__8252,G__8253) : cljs.core.with_meta.call(null,G__8252,G__8253));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__8254 = f;
var G__8255 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__8254,G__8255) : cljs.core.seq_reduce.call(null,G__8254,G__8255));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__8256 = f;
var G__8257 = start;
var G__8258 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__8256,G__8257,G__8258) : cljs.core.seq_reduce.call(null,G__8256,G__8257,G__8258));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__8259 = o;
var G__8260 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__8259,G__8260) : cljs.core.cons.call(null,G__8259,G__8260));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__8261 = sn;
s = G__8261;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__8266__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__8267 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__8268 = cljs.core.first(xs);
var G__8269 = cljs.core.next(xs);
coll = G__8267;
x = G__8268;
xs = G__8269;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__8266 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__8270__i = 0, G__8270__a = new Array(arguments.length -  2);
while (G__8270__i < G__8270__a.length) {G__8270__a[G__8270__i] = arguments[G__8270__i + 2]; ++G__8270__i;}
  xs = new cljs.core.IndexedSeq(G__8270__a,0);
} 
return G__8266__delegate.call(this,coll,x,xs);};
G__8266.cljs$lang$maxFixedArity = 2;
G__8266.cljs$lang$applyTo = (function (arglist__8271){
var coll = cljs.core.first(arglist__8271);
arglist__8271 = cljs.core.next(arglist__8271);
var x = cljs.core.first(arglist__8271);
var xs = cljs.core.rest(arglist__8271);
return G__8266__delegate(coll,x,xs);
});
G__8266.cljs$core$IFn$_invoke$arity$variadic = G__8266__delegate;
return G__8266;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__8272 = null;
if (arguments.length > 2) {
var G__8273__i = 0, G__8273__a = new Array(arguments.length -  2);
while (G__8273__i < G__8273__a.length) {G__8273__a[G__8273__i] = arguments[G__8273__i + 2]; ++G__8273__i;}
G__8272 = new cljs.core.IndexedSeq(G__8273__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__8272);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__8274 = cljs.core.next(s);
var G__8275 = (acc + (1));
s = G__8274;
acc = G__8275;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__8277 = coll;
if(G__8277){
var bit__4417__auto__ = (G__8277.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4417__auto__) || (G__8277.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__8278 = cljs.core.next(coll);
var G__8279 = (n - (1));
coll = G__8278;
n = G__8279;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__8280 = cljs.core.next(coll);
var G__8281 = (n - (1));
var G__8282 = not_found;
coll = G__8280;
n = G__8281;
not_found = G__8282;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__8287 = coll;
if(G__8287){
var bit__4417__auto__ = (G__8287.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4417__auto__) || (G__8287.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__8288 = coll;
if(G__8288){
var bit__4424__auto__ = (G__8288.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4424__auto__) || (G__8288.cljs$core$ISeq$)){
return true;
} else {
if((!G__8288.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8288);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8288);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__8289 = coll;
if(G__8289){
var bit__4417__auto__ = (G__8289.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4417__auto__) || (G__8289.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__8290 = coll;
if(G__8290){
var bit__4424__auto__ = (G__8290.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4424__auto__) || (G__8290.cljs$core$ISeq$)){
return true;
} else {
if((!G__8290.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8290);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8290);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__8291 = (n__$1 - (1));
var G__8292 = cljs.core.rest(xs);
n__$1 = G__8291;
xs = G__8292;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__8295 = o;
if(G__8295){
var bit__4417__auto__ = (G__8295.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4417__auto__) || (G__8295.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__8296 = o;
if(G__8296){
var bit__4417__auto__ = (G__8296.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4417__auto__) || (G__8296.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__8300__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__8301 = ret;
var G__8302 = cljs.core.first(kvs);
var G__8303 = cljs.core.second(kvs);
var G__8304 = cljs.core.nnext(kvs);
coll = G__8301;
k = G__8302;
v = G__8303;
kvs = G__8304;
continue;
} else {
return ret;
}
break;
}
};
var G__8300 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__8305__i = 0, G__8305__a = new Array(arguments.length -  3);
while (G__8305__i < G__8305__a.length) {G__8305__a[G__8305__i] = arguments[G__8305__i + 3]; ++G__8305__i;}
  kvs = new cljs.core.IndexedSeq(G__8305__a,0);
} 
return G__8300__delegate.call(this,coll,k,v,kvs);};
G__8300.cljs$lang$maxFixedArity = 3;
G__8300.cljs$lang$applyTo = (function (arglist__8306){
var coll = cljs.core.first(arglist__8306);
arglist__8306 = cljs.core.next(arglist__8306);
var k = cljs.core.first(arglist__8306);
arglist__8306 = cljs.core.next(arglist__8306);
var v = cljs.core.first(arglist__8306);
var kvs = cljs.core.rest(arglist__8306);
return G__8300__delegate(coll,k,v,kvs);
});
G__8300.cljs$core$IFn$_invoke$arity$variadic = G__8300__delegate;
return G__8300;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__8307 = null;
if (arguments.length > 3) {
var G__8308__i = 0, G__8308__a = new Array(arguments.length -  3);
while (G__8308__i < G__8308__a.length) {G__8308__a[G__8308__i] = arguments[G__8308__i + 3]; ++G__8308__i;}
G__8307 = new cljs.core.IndexedSeq(G__8308__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__8307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__8311__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8312 = ret;
var G__8313 = cljs.core.first(ks);
var G__8314 = cljs.core.next(ks);
coll = G__8312;
k = G__8313;
ks = G__8314;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8311 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8315__i = 0, G__8315__a = new Array(arguments.length -  2);
while (G__8315__i < G__8315__a.length) {G__8315__a[G__8315__i] = arguments[G__8315__i + 2]; ++G__8315__i;}
  ks = new cljs.core.IndexedSeq(G__8315__a,0);
} 
return G__8311__delegate.call(this,coll,k,ks);};
G__8311.cljs$lang$maxFixedArity = 2;
G__8311.cljs$lang$applyTo = (function (arglist__8316){
var coll = cljs.core.first(arglist__8316);
arglist__8316 = cljs.core.next(arglist__8316);
var k = cljs.core.first(arglist__8316);
var ks = cljs.core.rest(arglist__8316);
return G__8311__delegate(coll,k,ks);
});
G__8311.cljs$core$IFn$_invoke$arity$variadic = G__8311__delegate;
return G__8311;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__8317 = null;
if (arguments.length > 2) {
var G__8318__i = 0, G__8318__a = new Array(arguments.length -  2);
while (G__8318__i < G__8318__a.length) {G__8318__a[G__8318__i] = arguments[G__8318__i + 2]; ++G__8318__i;}
G__8317 = new cljs.core.IndexedSeq(G__8318__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3743__auto__ = (function (){var G__8323 = f;
return goog.isFunction(G__8323);
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__8324 = f;
if(G__8324){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto____$1 = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
return G__8324.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__8324.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__8324);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__8324);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__8790 = null;
var G__8790__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__8790__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8326 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8326) : self__.afn.call(null,G__8326));
});
var G__8790__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8327 = a;
var G__8328 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8327,G__8328) : self__.afn.call(null,G__8327,G__8328));
});
var G__8790__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8329 = a;
var G__8330 = b;
var G__8331 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8329,G__8330,G__8331) : self__.afn.call(null,G__8329,G__8330,G__8331));
});
var G__8790__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8332 = a;
var G__8333 = b;
var G__8334 = c;
var G__8335 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8332,G__8333,G__8334,G__8335) : self__.afn.call(null,G__8332,G__8333,G__8334,G__8335));
});
var G__8790__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8336 = a;
var G__8337 = b;
var G__8338 = c;
var G__8339 = d;
var G__8340 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8336,G__8337,G__8338,G__8339,G__8340) : self__.afn.call(null,G__8336,G__8337,G__8338,G__8339,G__8340));
});
var G__8790__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8341 = a;
var G__8342 = b;
var G__8343 = c;
var G__8344 = d;
var G__8345 = e;
var G__8346 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8341,G__8342,G__8343,G__8344,G__8345,G__8346) : self__.afn.call(null,G__8341,G__8342,G__8343,G__8344,G__8345,G__8346));
});
var G__8790__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8347 = a;
var G__8348 = b;
var G__8349 = c;
var G__8350 = d;
var G__8351 = e;
var G__8352 = f;
var G__8353 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8347,G__8348,G__8349,G__8350,G__8351,G__8352,G__8353) : self__.afn.call(null,G__8347,G__8348,G__8349,G__8350,G__8351,G__8352,G__8353));
});
var G__8790__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8354 = a;
var G__8355 = b;
var G__8356 = c;
var G__8357 = d;
var G__8358 = e;
var G__8359 = f;
var G__8360 = g;
var G__8361 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360,G__8361) : self__.afn.call(null,G__8354,G__8355,G__8356,G__8357,G__8358,G__8359,G__8360,G__8361));
});
var G__8790__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8362 = a;
var G__8363 = b;
var G__8364 = c;
var G__8365 = d;
var G__8366 = e;
var G__8367 = f;
var G__8368 = g;
var G__8369 = h;
var G__8370 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368,G__8369,G__8370) : self__.afn.call(null,G__8362,G__8363,G__8364,G__8365,G__8366,G__8367,G__8368,G__8369,G__8370));
});
var G__8790__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8371 = a;
var G__8372 = b;
var G__8373 = c;
var G__8374 = d;
var G__8375 = e;
var G__8376 = f;
var G__8377 = g;
var G__8378 = h;
var G__8379 = i;
var G__8380 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378,G__8379,G__8380) : self__.afn.call(null,G__8371,G__8372,G__8373,G__8374,G__8375,G__8376,G__8377,G__8378,G__8379,G__8380));
});
var G__8790__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8381 = a;
var G__8382 = b;
var G__8383 = c;
var G__8384 = d;
var G__8385 = e;
var G__8386 = f;
var G__8387 = g;
var G__8388 = h;
var G__8389 = i;
var G__8390 = j;
var G__8391 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387,G__8388,G__8389,G__8390,G__8391) : self__.afn.call(null,G__8381,G__8382,G__8383,G__8384,G__8385,G__8386,G__8387,G__8388,G__8389,G__8390,G__8391));
});
var G__8790__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8392 = a;
var G__8393 = b;
var G__8394 = c;
var G__8395 = d;
var G__8396 = e;
var G__8397 = f;
var G__8398 = g;
var G__8399 = h;
var G__8400 = i;
var G__8401 = j;
var G__8402 = k;
var G__8403 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8392,G__8393,G__8394,G__8395,G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403) : self__.afn.call(null,G__8392,G__8393,G__8394,G__8395,G__8396,G__8397,G__8398,G__8399,G__8400,G__8401,G__8402,G__8403));
});
var G__8790__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8404 = a;
var G__8405 = b;
var G__8406 = c;
var G__8407 = d;
var G__8408 = e;
var G__8409 = f;
var G__8410 = g;
var G__8411 = h;
var G__8412 = i;
var G__8413 = j;
var G__8414 = k;
var G__8415 = l;
var G__8416 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8404,G__8405,G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413,G__8414,G__8415,G__8416) : self__.afn.call(null,G__8404,G__8405,G__8406,G__8407,G__8408,G__8409,G__8410,G__8411,G__8412,G__8413,G__8414,G__8415,G__8416));
});
var G__8790__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8417 = a;
var G__8418 = b;
var G__8419 = c;
var G__8420 = d;
var G__8421 = e;
var G__8422 = f;
var G__8423 = g;
var G__8424 = h;
var G__8425 = i;
var G__8426 = j;
var G__8427 = k;
var G__8428 = l;
var G__8429 = m;
var G__8430 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425,G__8426,G__8427,G__8428,G__8429,G__8430) : self__.afn.call(null,G__8417,G__8418,G__8419,G__8420,G__8421,G__8422,G__8423,G__8424,G__8425,G__8426,G__8427,G__8428,G__8429,G__8430));
});
var G__8790__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8431 = a;
var G__8432 = b;
var G__8433 = c;
var G__8434 = d;
var G__8435 = e;
var G__8436 = f;
var G__8437 = g;
var G__8438 = h;
var G__8439 = i;
var G__8440 = j;
var G__8441 = k;
var G__8442 = l;
var G__8443 = m;
var G__8444 = n;
var G__8445 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8431,G__8432,G__8433,G__8434,G__8435,G__8436,G__8437,G__8438,G__8439,G__8440,G__8441,G__8442,G__8443,G__8444,G__8445) : self__.afn.call(null,G__8431,G__8432,G__8433,G__8434,G__8435,G__8436,G__8437,G__8438,G__8439,G__8440,G__8441,G__8442,G__8443,G__8444,G__8445));
});
var G__8790__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8446 = a;
var G__8447 = b;
var G__8448 = c;
var G__8449 = d;
var G__8450 = e;
var G__8451 = f;
var G__8452 = g;
var G__8453 = h;
var G__8454 = i;
var G__8455 = j;
var G__8456 = k;
var G__8457 = l;
var G__8458 = m;
var G__8459 = n;
var G__8460 = o;
var G__8461 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8446,G__8447,G__8448,G__8449,G__8450,G__8451,G__8452,G__8453,G__8454,G__8455,G__8456,G__8457,G__8458,G__8459,G__8460,G__8461) : self__.afn.call(null,G__8446,G__8447,G__8448,G__8449,G__8450,G__8451,G__8452,G__8453,G__8454,G__8455,G__8456,G__8457,G__8458,G__8459,G__8460,G__8461));
});
var G__8790__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8462 = a;
var G__8463 = b;
var G__8464 = c;
var G__8465 = d;
var G__8466 = e;
var G__8467 = f;
var G__8468 = g;
var G__8469 = h;
var G__8470 = i;
var G__8471 = j;
var G__8472 = k;
var G__8473 = l;
var G__8474 = m;
var G__8475 = n;
var G__8476 = o;
var G__8477 = p;
var G__8478 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8462,G__8463,G__8464,G__8465,G__8466,G__8467,G__8468,G__8469,G__8470,G__8471,G__8472,G__8473,G__8474,G__8475,G__8476,G__8477,G__8478) : self__.afn.call(null,G__8462,G__8463,G__8464,G__8465,G__8466,G__8467,G__8468,G__8469,G__8470,G__8471,G__8472,G__8473,G__8474,G__8475,G__8476,G__8477,G__8478));
});
var G__8790__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8479 = a;
var G__8480 = b;
var G__8481 = c;
var G__8482 = d;
var G__8483 = e;
var G__8484 = f;
var G__8485 = g;
var G__8486 = h;
var G__8487 = i;
var G__8488 = j;
var G__8489 = k;
var G__8490 = l;
var G__8491 = m;
var G__8492 = n;
var G__8493 = o;
var G__8494 = p;
var G__8495 = q;
var G__8496 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8479,G__8480,G__8481,G__8482,G__8483,G__8484,G__8485,G__8486,G__8487,G__8488,G__8489,G__8490,G__8491,G__8492,G__8493,G__8494,G__8495,G__8496) : self__.afn.call(null,G__8479,G__8480,G__8481,G__8482,G__8483,G__8484,G__8485,G__8486,G__8487,G__8488,G__8489,G__8490,G__8491,G__8492,G__8493,G__8494,G__8495,G__8496));
});
var G__8790__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8497 = a;
var G__8498 = b;
var G__8499 = c;
var G__8500 = d;
var G__8501 = e;
var G__8502 = f;
var G__8503 = g;
var G__8504 = h;
var G__8505 = i;
var G__8506 = j;
var G__8507 = k;
var G__8508 = l;
var G__8509 = m;
var G__8510 = n;
var G__8511 = o;
var G__8512 = p;
var G__8513 = q;
var G__8514 = r;
var G__8515 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8497,G__8498,G__8499,G__8500,G__8501,G__8502,G__8503,G__8504,G__8505,G__8506,G__8507,G__8508,G__8509,G__8510,G__8511,G__8512,G__8513,G__8514,G__8515) : self__.afn.call(null,G__8497,G__8498,G__8499,G__8500,G__8501,G__8502,G__8503,G__8504,G__8505,G__8506,G__8507,G__8508,G__8509,G__8510,G__8511,G__8512,G__8513,G__8514,G__8515));
});
var G__8790__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8516 = a;
var G__8517 = b;
var G__8518 = c;
var G__8519 = d;
var G__8520 = e;
var G__8521 = f;
var G__8522 = g;
var G__8523 = h;
var G__8524 = i;
var G__8525 = j;
var G__8526 = k;
var G__8527 = l;
var G__8528 = m;
var G__8529 = n;
var G__8530 = o;
var G__8531 = p;
var G__8532 = q;
var G__8533 = r;
var G__8534 = s;
var G__8535 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8516,G__8517,G__8518,G__8519,G__8520,G__8521,G__8522,G__8523,G__8524,G__8525,G__8526,G__8527,G__8528,G__8529,G__8530,G__8531,G__8532,G__8533,G__8534,G__8535) : self__.afn.call(null,G__8516,G__8517,G__8518,G__8519,G__8520,G__8521,G__8522,G__8523,G__8524,G__8525,G__8526,G__8527,G__8528,G__8529,G__8530,G__8531,G__8532,G__8533,G__8534,G__8535));
});
var G__8790__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__8536 = self__.afn;
var G__8537 = a;
var G__8538 = b;
var G__8539 = c;
var G__8540 = d;
var G__8541 = e;
var G__8542 = f;
var G__8543 = g;
var G__8544 = h;
var G__8545 = i;
var G__8546 = j;
var G__8547 = k;
var G__8548 = l;
var G__8549 = m;
var G__8550 = n;
var G__8551 = o;
var G__8552 = p;
var G__8553 = q;
var G__8554 = r;
var G__8555 = s;
var G__8556 = t;
var G__8557 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8536,G__8537,G__8538,G__8539,G__8540,G__8541,G__8542,G__8543,G__8544,G__8545,G__8546,G__8547,G__8548,G__8549,G__8550,G__8551,G__8552,G__8553,G__8554,G__8555,G__8556,G__8557) : cljs.core.apply.call(null,G__8536,G__8537,G__8538,G__8539,G__8540,G__8541,G__8542,G__8543,G__8544,G__8545,G__8546,G__8547,G__8548,G__8549,G__8550,G__8551,G__8552,G__8553,G__8554,G__8555,G__8556,G__8557));
});
G__8790 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8790__1.call(this,self__);
case 2:
return G__8790__2.call(this,self__,a);
case 3:
return G__8790__3.call(this,self__,a,b);
case 4:
return G__8790__4.call(this,self__,a,b,c);
case 5:
return G__8790__5.call(this,self__,a,b,c,d);
case 6:
return G__8790__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8790__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8790__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8790__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8790__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8790__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8790__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8790__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8790__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8790__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8790__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8790__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8790__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8790__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8790__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8790__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8790__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8790.cljs$core$IFn$_invoke$arity$1 = G__8790__1;
G__8790.cljs$core$IFn$_invoke$arity$2 = G__8790__2;
G__8790.cljs$core$IFn$_invoke$arity$3 = G__8790__3;
G__8790.cljs$core$IFn$_invoke$arity$4 = G__8790__4;
G__8790.cljs$core$IFn$_invoke$arity$5 = G__8790__5;
G__8790.cljs$core$IFn$_invoke$arity$6 = G__8790__6;
G__8790.cljs$core$IFn$_invoke$arity$7 = G__8790__7;
G__8790.cljs$core$IFn$_invoke$arity$8 = G__8790__8;
G__8790.cljs$core$IFn$_invoke$arity$9 = G__8790__9;
G__8790.cljs$core$IFn$_invoke$arity$10 = G__8790__10;
G__8790.cljs$core$IFn$_invoke$arity$11 = G__8790__11;
G__8790.cljs$core$IFn$_invoke$arity$12 = G__8790__12;
G__8790.cljs$core$IFn$_invoke$arity$13 = G__8790__13;
G__8790.cljs$core$IFn$_invoke$arity$14 = G__8790__14;
G__8790.cljs$core$IFn$_invoke$arity$15 = G__8790__15;
G__8790.cljs$core$IFn$_invoke$arity$16 = G__8790__16;
G__8790.cljs$core$IFn$_invoke$arity$17 = G__8790__17;
G__8790.cljs$core$IFn$_invoke$arity$18 = G__8790__18;
G__8790.cljs$core$IFn$_invoke$arity$19 = G__8790__19;
G__8790.cljs$core$IFn$_invoke$arity$20 = G__8790__20;
G__8790.cljs$core$IFn$_invoke$arity$21 = G__8790__21;
G__8790.cljs$core$IFn$_invoke$arity$22 = G__8790__22;
return G__8790;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args8325){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8325)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__8558 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8558) : self__.afn.call(null,G__8558));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__8559 = a;
var G__8560 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8559,G__8560) : self__.afn.call(null,G__8559,G__8560));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__8561 = a;
var G__8562 = b;
var G__8563 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8561,G__8562,G__8563) : self__.afn.call(null,G__8561,G__8562,G__8563));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__8564 = a;
var G__8565 = b;
var G__8566 = c;
var G__8567 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8564,G__8565,G__8566,G__8567) : self__.afn.call(null,G__8564,G__8565,G__8566,G__8567));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__8568 = a;
var G__8569 = b;
var G__8570 = c;
var G__8571 = d;
var G__8572 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8568,G__8569,G__8570,G__8571,G__8572) : self__.afn.call(null,G__8568,G__8569,G__8570,G__8571,G__8572));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__8573 = a;
var G__8574 = b;
var G__8575 = c;
var G__8576 = d;
var G__8577 = e;
var G__8578 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8573,G__8574,G__8575,G__8576,G__8577,G__8578) : self__.afn.call(null,G__8573,G__8574,G__8575,G__8576,G__8577,G__8578));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__8579 = a;
var G__8580 = b;
var G__8581 = c;
var G__8582 = d;
var G__8583 = e;
var G__8584 = f;
var G__8585 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8579,G__8580,G__8581,G__8582,G__8583,G__8584,G__8585) : self__.afn.call(null,G__8579,G__8580,G__8581,G__8582,G__8583,G__8584,G__8585));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__8586 = a;
var G__8587 = b;
var G__8588 = c;
var G__8589 = d;
var G__8590 = e;
var G__8591 = f;
var G__8592 = g;
var G__8593 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8586,G__8587,G__8588,G__8589,G__8590,G__8591,G__8592,G__8593) : self__.afn.call(null,G__8586,G__8587,G__8588,G__8589,G__8590,G__8591,G__8592,G__8593));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__8594 = a;
var G__8595 = b;
var G__8596 = c;
var G__8597 = d;
var G__8598 = e;
var G__8599 = f;
var G__8600 = g;
var G__8601 = h;
var G__8602 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8594,G__8595,G__8596,G__8597,G__8598,G__8599,G__8600,G__8601,G__8602) : self__.afn.call(null,G__8594,G__8595,G__8596,G__8597,G__8598,G__8599,G__8600,G__8601,G__8602));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__8603 = a;
var G__8604 = b;
var G__8605 = c;
var G__8606 = d;
var G__8607 = e;
var G__8608 = f;
var G__8609 = g;
var G__8610 = h;
var G__8611 = i;
var G__8612 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8603,G__8604,G__8605,G__8606,G__8607,G__8608,G__8609,G__8610,G__8611,G__8612) : self__.afn.call(null,G__8603,G__8604,G__8605,G__8606,G__8607,G__8608,G__8609,G__8610,G__8611,G__8612));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__8613 = a;
var G__8614 = b;
var G__8615 = c;
var G__8616 = d;
var G__8617 = e;
var G__8618 = f;
var G__8619 = g;
var G__8620 = h;
var G__8621 = i;
var G__8622 = j;
var G__8623 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8613,G__8614,G__8615,G__8616,G__8617,G__8618,G__8619,G__8620,G__8621,G__8622,G__8623) : self__.afn.call(null,G__8613,G__8614,G__8615,G__8616,G__8617,G__8618,G__8619,G__8620,G__8621,G__8622,G__8623));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__8624 = a;
var G__8625 = b;
var G__8626 = c;
var G__8627 = d;
var G__8628 = e;
var G__8629 = f;
var G__8630 = g;
var G__8631 = h;
var G__8632 = i;
var G__8633 = j;
var G__8634 = k;
var G__8635 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8624,G__8625,G__8626,G__8627,G__8628,G__8629,G__8630,G__8631,G__8632,G__8633,G__8634,G__8635) : self__.afn.call(null,G__8624,G__8625,G__8626,G__8627,G__8628,G__8629,G__8630,G__8631,G__8632,G__8633,G__8634,G__8635));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__8636 = a;
var G__8637 = b;
var G__8638 = c;
var G__8639 = d;
var G__8640 = e;
var G__8641 = f;
var G__8642 = g;
var G__8643 = h;
var G__8644 = i;
var G__8645 = j;
var G__8646 = k;
var G__8647 = l;
var G__8648 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8636,G__8637,G__8638,G__8639,G__8640,G__8641,G__8642,G__8643,G__8644,G__8645,G__8646,G__8647,G__8648) : self__.afn.call(null,G__8636,G__8637,G__8638,G__8639,G__8640,G__8641,G__8642,G__8643,G__8644,G__8645,G__8646,G__8647,G__8648));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__8649 = a;
var G__8650 = b;
var G__8651 = c;
var G__8652 = d;
var G__8653 = e;
var G__8654 = f;
var G__8655 = g;
var G__8656 = h;
var G__8657 = i;
var G__8658 = j;
var G__8659 = k;
var G__8660 = l;
var G__8661 = m;
var G__8662 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8649,G__8650,G__8651,G__8652,G__8653,G__8654,G__8655,G__8656,G__8657,G__8658,G__8659,G__8660,G__8661,G__8662) : self__.afn.call(null,G__8649,G__8650,G__8651,G__8652,G__8653,G__8654,G__8655,G__8656,G__8657,G__8658,G__8659,G__8660,G__8661,G__8662));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__8663 = a;
var G__8664 = b;
var G__8665 = c;
var G__8666 = d;
var G__8667 = e;
var G__8668 = f;
var G__8669 = g;
var G__8670 = h;
var G__8671 = i;
var G__8672 = j;
var G__8673 = k;
var G__8674 = l;
var G__8675 = m;
var G__8676 = n;
var G__8677 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8663,G__8664,G__8665,G__8666,G__8667,G__8668,G__8669,G__8670,G__8671,G__8672,G__8673,G__8674,G__8675,G__8676,G__8677) : self__.afn.call(null,G__8663,G__8664,G__8665,G__8666,G__8667,G__8668,G__8669,G__8670,G__8671,G__8672,G__8673,G__8674,G__8675,G__8676,G__8677));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__8678 = a;
var G__8679 = b;
var G__8680 = c;
var G__8681 = d;
var G__8682 = e;
var G__8683 = f;
var G__8684 = g;
var G__8685 = h;
var G__8686 = i;
var G__8687 = j;
var G__8688 = k;
var G__8689 = l;
var G__8690 = m;
var G__8691 = n;
var G__8692 = o;
var G__8693 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8678,G__8679,G__8680,G__8681,G__8682,G__8683,G__8684,G__8685,G__8686,G__8687,G__8688,G__8689,G__8690,G__8691,G__8692,G__8693) : self__.afn.call(null,G__8678,G__8679,G__8680,G__8681,G__8682,G__8683,G__8684,G__8685,G__8686,G__8687,G__8688,G__8689,G__8690,G__8691,G__8692,G__8693));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__8694 = a;
var G__8695 = b;
var G__8696 = c;
var G__8697 = d;
var G__8698 = e;
var G__8699 = f;
var G__8700 = g;
var G__8701 = h;
var G__8702 = i;
var G__8703 = j;
var G__8704 = k;
var G__8705 = l;
var G__8706 = m;
var G__8707 = n;
var G__8708 = o;
var G__8709 = p;
var G__8710 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8694,G__8695,G__8696,G__8697,G__8698,G__8699,G__8700,G__8701,G__8702,G__8703,G__8704,G__8705,G__8706,G__8707,G__8708,G__8709,G__8710) : self__.afn.call(null,G__8694,G__8695,G__8696,G__8697,G__8698,G__8699,G__8700,G__8701,G__8702,G__8703,G__8704,G__8705,G__8706,G__8707,G__8708,G__8709,G__8710));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__8711 = a;
var G__8712 = b;
var G__8713 = c;
var G__8714 = d;
var G__8715 = e;
var G__8716 = f;
var G__8717 = g;
var G__8718 = h;
var G__8719 = i;
var G__8720 = j;
var G__8721 = k;
var G__8722 = l;
var G__8723 = m;
var G__8724 = n;
var G__8725 = o;
var G__8726 = p;
var G__8727 = q;
var G__8728 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8711,G__8712,G__8713,G__8714,G__8715,G__8716,G__8717,G__8718,G__8719,G__8720,G__8721,G__8722,G__8723,G__8724,G__8725,G__8726,G__8727,G__8728) : self__.afn.call(null,G__8711,G__8712,G__8713,G__8714,G__8715,G__8716,G__8717,G__8718,G__8719,G__8720,G__8721,G__8722,G__8723,G__8724,G__8725,G__8726,G__8727,G__8728));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__8729 = a;
var G__8730 = b;
var G__8731 = c;
var G__8732 = d;
var G__8733 = e;
var G__8734 = f;
var G__8735 = g;
var G__8736 = h;
var G__8737 = i;
var G__8738 = j;
var G__8739 = k;
var G__8740 = l;
var G__8741 = m;
var G__8742 = n;
var G__8743 = o;
var G__8744 = p;
var G__8745 = q;
var G__8746 = r;
var G__8747 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8729,G__8730,G__8731,G__8732,G__8733,G__8734,G__8735,G__8736,G__8737,G__8738,G__8739,G__8740,G__8741,G__8742,G__8743,G__8744,G__8745,G__8746,G__8747) : self__.afn.call(null,G__8729,G__8730,G__8731,G__8732,G__8733,G__8734,G__8735,G__8736,G__8737,G__8738,G__8739,G__8740,G__8741,G__8742,G__8743,G__8744,G__8745,G__8746,G__8747));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__8748 = a;
var G__8749 = b;
var G__8750 = c;
var G__8751 = d;
var G__8752 = e;
var G__8753 = f;
var G__8754 = g;
var G__8755 = h;
var G__8756 = i;
var G__8757 = j;
var G__8758 = k;
var G__8759 = l;
var G__8760 = m;
var G__8761 = n;
var G__8762 = o;
var G__8763 = p;
var G__8764 = q;
var G__8765 = r;
var G__8766 = s;
var G__8767 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8748,G__8749,G__8750,G__8751,G__8752,G__8753,G__8754,G__8755,G__8756,G__8757,G__8758,G__8759,G__8760,G__8761,G__8762,G__8763,G__8764,G__8765,G__8766,G__8767) : self__.afn.call(null,G__8748,G__8749,G__8750,G__8751,G__8752,G__8753,G__8754,G__8755,G__8756,G__8757,G__8758,G__8759,G__8760,G__8761,G__8762,G__8763,G__8764,G__8765,G__8766,G__8767));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__8768 = self__.afn;
var G__8769 = a;
var G__8770 = b;
var G__8771 = c;
var G__8772 = d;
var G__8773 = e;
var G__8774 = f;
var G__8775 = g;
var G__8776 = h;
var G__8777 = i;
var G__8778 = j;
var G__8779 = k;
var G__8780 = l;
var G__8781 = m;
var G__8782 = n;
var G__8783 = o;
var G__8784 = p;
var G__8785 = q;
var G__8786 = r;
var G__8787 = s;
var G__8788 = t;
var G__8789 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8768,G__8769,G__8770,G__8771,G__8772,G__8773,G__8774,G__8775,G__8776,G__8777,G__8778,G__8779,G__8780,G__8781,G__8782,G__8783,G__8784,G__8785,G__8786,G__8787,G__8788,G__8789) : cljs.core.apply.call(null,G__8768,G__8769,G__8770,G__8771,G__8772,G__8773,G__8774,G__8775,G__8776,G__8777,G__8778,G__8779,G__8780,G__8781,G__8782,G__8783,G__8784,G__8785,G__8786,G__8787,G__8788,G__8789));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__8794 = o;
if(G__8794){
var bit__4424__auto__ = (G__8794.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4424__auto__) || (G__8794.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__8794.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8794);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8794);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3731__auto__ = !((o == null));
if(and__3731__auto__){
var G__8798 = o;
if(G__8798){
var bit__4424__auto__ = (G__8798.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4424__auto__) || (G__8798.cljs$core$IMeta$)){
return true;
} else {
if((!G__8798.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8798);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8798);
}
} else {
return and__3731__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__8801__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8802 = ret;
var G__8803 = cljs.core.first(ks);
var G__8804 = cljs.core.next(ks);
coll = G__8802;
k = G__8803;
ks = G__8804;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8801 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8805__i = 0, G__8805__a = new Array(arguments.length -  2);
while (G__8805__i < G__8805__a.length) {G__8805__a[G__8805__i] = arguments[G__8805__i + 2]; ++G__8805__i;}
  ks = new cljs.core.IndexedSeq(G__8805__a,0);
} 
return G__8801__delegate.call(this,coll,k,ks);};
G__8801.cljs$lang$maxFixedArity = 2;
G__8801.cljs$lang$applyTo = (function (arglist__8806){
var coll = cljs.core.first(arglist__8806);
arglist__8806 = cljs.core.next(arglist__8806);
var k = cljs.core.first(arglist__8806);
var ks = cljs.core.rest(arglist__8806);
return G__8801__delegate(coll,k,ks);
});
G__8801.cljs$core$IFn$_invoke$arity$variadic = G__8801__delegate;
return G__8801;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__8807 = null;
if (arguments.length > 2) {
var G__8808__i = 0, G__8808__a = new Array(arguments.length -  2);
while (G__8808__i < G__8808__a.length) {G__8808__a[G__8808__i] = arguments[G__8808__i + 2]; ++G__8808__i;}
G__8807 = new cljs.core.IndexedSeq(G__8808__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8810 = x;
if(G__8810){
var bit__4424__auto__ = (G__8810.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4424__auto__) || (G__8810.cljs$core$ICollection$)){
return true;
} else {
if((!G__8810.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8810);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8810);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8812 = x;
if(G__8812){
var bit__4424__auto__ = (G__8812.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4424__auto__) || (G__8812.cljs$core$ISet$)){
return true;
} else {
if((!G__8812.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8812);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8812);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__8814 = x;
if(G__8814){
var bit__4424__auto__ = (G__8814.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4424__auto__) || (G__8814.cljs$core$IAssociative$)){
return true;
} else {
if((!G__8814.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8814);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8814);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__8816 = x;
if(G__8816){
var bit__4424__auto__ = (G__8816.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4424__auto__) || (G__8816.cljs$core$ISequential$)){
return true;
} else {
if((!G__8816.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8816);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8816);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__8818 = x;
if(G__8818){
var bit__4424__auto__ = (G__8818.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4424__auto__) || (G__8818.cljs$core$ISorted$)){
return true;
} else {
if((!G__8818.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8818);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8818);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__8820 = x;
if(G__8820){
var bit__4424__auto__ = (G__8820.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4424__auto__) || (G__8820.cljs$core$IReduce$)){
return true;
} else {
if((!G__8820.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8820);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8820);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8822 = x;
if(G__8822){
var bit__4424__auto__ = (G__8822.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4424__auto__) || (G__8822.cljs$core$IMap$)){
return true;
} else {
if((!G__8822.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8822);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8822);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__8824 = x;
if(G__8824){
var bit__4424__auto__ = (G__8824.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4424__auto__) || (G__8824.cljs$core$IVector$)){
return true;
} else {
if((!G__8824.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8824);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8824);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__8826 = x;
if(G__8826){
var bit__4417__auto__ = (G__8826.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4417__auto__) || (G__8826.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj8832 = {};
return obj8832;
});
var js_obj__1 = (function() { 
var G__8835__delegate = function (keyvals){
var G__8833 = goog.object.create;
var G__8834 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__8833,G__8834) : cljs.core.apply.call(null,G__8833,G__8834));
};
var G__8835 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8836__i = 0, G__8836__a = new Array(arguments.length -  0);
while (G__8836__i < G__8836__a.length) {G__8836__a[G__8836__i] = arguments[G__8836__i + 0]; ++G__8836__i;}
  keyvals = new cljs.core.IndexedSeq(G__8836__a,0);
} 
return G__8835__delegate.call(this,keyvals);};
G__8835.cljs$lang$maxFixedArity = 0;
G__8835.cljs$lang$applyTo = (function (arglist__8837){
var keyvals = cljs.core.seq(arglist__8837);
return G__8835__delegate(keyvals);
});
G__8835.cljs$core$IFn$_invoke$arity$variadic = G__8835__delegate;
return G__8835;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__8838 = null;
if (arguments.length > 0) {
var G__8839__i = 0, G__8839__a = new Array(arguments.length -  0);
while (G__8839__i < G__8839__a.length) {G__8839__a[G__8839__i] = arguments[G__8839__i + 0]; ++G__8839__i;}
G__8838 = new cljs.core.IndexedSeq(G__8839__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__8838);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__8842_8844 = obj;
var G__8843_8845 = ((function (G__8842_8844,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__8842_8844,keys))
;
goog.object.forEach(G__8842_8844,G__8843_8845);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8846 = (i__$1 + (1));
var G__8847 = (j__$1 + (1));
var G__8848 = (len__$1 - (1));
i__$1 = G__8846;
j__$1 = G__8847;
len__$1 = G__8848;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8849 = (i__$1 - (1));
var G__8850 = (j__$1 - (1));
var G__8851 = (len__$1 - (1));
i__$1 = G__8849;
j__$1 = G__8850;
len__$1 = G__8851;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj8853 = {};
return obj8853;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__8855 = s;
if(G__8855){
var bit__4424__auto__ = (G__8855.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4424__auto__) || (G__8855.cljs$core$ISeq$)){
return true;
} else {
if((!G__8855.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8855);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8855);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__8857 = s;
if(G__8857){
var bit__4424__auto__ = (G__8857.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4424__auto__) || (G__8857.cljs$core$ISeqable$)){
return true;
} else {
if((!G__8857.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8857);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8857);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3743__auto__ = cljs.core.fn_QMARK_(f);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var G__8861 = f;
if(G__8861){
var bit__4424__auto__ = (G__8861.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4424__auto__) || (G__8861.cljs$core$IFn$)){
return true;
} else {
if((!G__8861.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8861);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8861);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__8874 = n;
return isNaN(G__8874);
})())) && (!((n === Infinity))) && (((function (){var G__8875 = n;
return parseFloat(G__8875);
})() === (function (){var G__8876 = n;
var G__8877 = (10);
return parseInt(G__8876,G__8877);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__8878__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__8879 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__8880 = etc;
s = G__8879;
xs = G__8880;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__8878 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8881__i = 0, G__8881__a = new Array(arguments.length -  2);
while (G__8881__i < G__8881__a.length) {G__8881__a[G__8881__i] = arguments[G__8881__i + 2]; ++G__8881__i;}
  more = new cljs.core.IndexedSeq(G__8881__a,0);
} 
return G__8878__delegate.call(this,x,y,more);};
G__8878.cljs$lang$maxFixedArity = 2;
G__8878.cljs$lang$applyTo = (function (arglist__8882){
var x = cljs.core.first(arglist__8882);
arglist__8882 = cljs.core.next(arglist__8882);
var y = cljs.core.first(arglist__8882);
var more = cljs.core.rest(arglist__8882);
return G__8878__delegate(x,y,more);
});
G__8878.cljs$core$IFn$_invoke$arity$variadic = G__8878__delegate;
return G__8878;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__8883 = null;
if (arguments.length > 2) {
var G__8884__i = 0, G__8884__a = new Array(arguments.length -  2);
while (G__8884__i < G__8884__a.length) {G__8884__a[G__8884__i] = arguments[G__8884__i + 2]; ++G__8884__i;}
G__8883 = new cljs.core.IndexedSeq(G__8884__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8883);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__8888 = x;
if(G__8888){
var bit__4417__auto__ = (G__8888.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4417__auto__) || (G__8888.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__8889 = x;
var G__8890 = y;
return goog.array.defaultCompare(G__8889,G__8890);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__8895 = xs;
var G__8896 = ys;
var G__8897 = len;
var G__8898 = (n + (1));
xs = G__8895;
ys = G__8896;
len = G__8897;
n = G__8898;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__8903 = x;
var G__8904 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8903,G__8904) : f.call(null,G__8903,G__8904));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__8905 = y;
var G__8906 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8905,G__8906) : f.call(null,G__8905,G__8906));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__8912 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8912) : cljs.core.to_array.call(null,G__8912));
})();
var G__8913_8915 = a;
var G__8914_8916 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__8913_8915,G__8914_8916);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__8922 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8922) : keyfn.call(null,G__8922));
})(),(function (){var G__8923 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8923) : keyfn.call(null,G__8923));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__8929 = f;
var G__8930 = cljs.core.first(s);
var G__8931 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8929,G__8930,G__8931) : cljs.core.reduce.call(null,G__8929,G__8930,G__8931));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__8932 = val__$1;
var G__8933 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8932,G__8933) : f.call(null,G__8932,G__8933));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8934 = nval;
var G__8935 = cljs.core.next(coll__$1);
val__$1 = G__8934;
coll__$1 = G__8935;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__8939 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8939) : cljs.core.to_array.call(null,G__8939));
})();
var G__8940_8942 = a;
goog.array.shuffle(G__8940_8942);

var G__8941 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__8941) : cljs.core.vec.call(null,G__8941));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__8945 = coll;
if(G__8945){
var bit__4417__auto__ = (G__8945.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4417__auto__) || (G__8945.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__8946 = coll;
if(G__8946){
var bit__4417__auto__ = (G__8946.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4417__auto__) || (G__8946.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__8955 = null;
var G__8955__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__8955__1 = (function (x){
var G__8952 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__8952) : cf.call(null,G__8952));
});
var G__8955__2 = (function (x,y){
var G__8953 = x;
var G__8954 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8953,G__8954) : f.call(null,G__8953,G__8954));
});
G__8955 = function(x,y){
switch(arguments.length){
case 0:
return G__8955__0.call(this);
case 1:
return G__8955__1.call(this,x);
case 2:
return G__8955__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8955.cljs$core$IFn$_invoke$arity$0 = G__8955__0;
G__8955.cljs$core$IFn$_invoke$arity$1 = G__8955__1;
G__8955.cljs$core$IFn$_invoke$arity$2 = G__8955__2;
return G__8955;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__8962 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8962) : xform.call(null,G__8962));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__8963 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__8963) : f__$1.call(null,G__8963));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__8964__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__8964 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8965__i = 0, G__8965__a = new Array(arguments.length -  2);
while (G__8965__i < G__8965__a.length) {G__8965__a[G__8965__i] = arguments[G__8965__i + 2]; ++G__8965__i;}
  more = new cljs.core.IndexedSeq(G__8965__a,0);
} 
return G__8964__delegate.call(this,x,y,more);};
G__8964.cljs$lang$maxFixedArity = 2;
G__8964.cljs$lang$applyTo = (function (arglist__8966){
var x = cljs.core.first(arglist__8966);
arglist__8966 = cljs.core.next(arglist__8966);
var y = cljs.core.first(arglist__8966);
var more = cljs.core.rest(arglist__8966);
return G__8964__delegate(x,y,more);
});
G__8964.cljs$core$IFn$_invoke$arity$variadic = G__8964__delegate;
return G__8964;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__8967 = null;
if (arguments.length > 2) {
var G__8968__i = 0, G__8968__a = new Array(arguments.length -  2);
while (G__8968__i < G__8968__a.length) {G__8968__a[G__8968__i] = arguments[G__8968__i + 2]; ++G__8968__i;}
G__8967 = new cljs.core.IndexedSeq(G__8968__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__8969__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__8969 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8970__i = 0, G__8970__a = new Array(arguments.length -  2);
while (G__8970__i < G__8970__a.length) {G__8970__a[G__8970__i] = arguments[G__8970__i + 2]; ++G__8970__i;}
  more = new cljs.core.IndexedSeq(G__8970__a,0);
} 
return G__8969__delegate.call(this,x,y,more);};
G__8969.cljs$lang$maxFixedArity = 2;
G__8969.cljs$lang$applyTo = (function (arglist__8971){
var x = cljs.core.first(arglist__8971);
arglist__8971 = cljs.core.next(arglist__8971);
var y = cljs.core.first(arglist__8971);
var more = cljs.core.rest(arglist__8971);
return G__8969__delegate(x,y,more);
});
G__8969.cljs$core$IFn$_invoke$arity$variadic = G__8969__delegate;
return G__8969;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__8972 = null;
if (arguments.length > 2) {
var G__8973__i = 0, G__8973__a = new Array(arguments.length -  2);
while (G__8973__i < G__8973__a.length) {G__8973__a[G__8973__i] = arguments[G__8973__i + 2]; ++G__8973__i;}
G__8972 = new cljs.core.IndexedSeq(G__8973__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__8974__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__8974 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8975__i = 0, G__8975__a = new Array(arguments.length -  2);
while (G__8975__i < G__8975__a.length) {G__8975__a[G__8975__i] = arguments[G__8975__i + 2]; ++G__8975__i;}
  more = new cljs.core.IndexedSeq(G__8975__a,0);
} 
return G__8974__delegate.call(this,x,y,more);};
G__8974.cljs$lang$maxFixedArity = 2;
G__8974.cljs$lang$applyTo = (function (arglist__8976){
var x = cljs.core.first(arglist__8976);
arglist__8976 = cljs.core.next(arglist__8976);
var y = cljs.core.first(arglist__8976);
var more = cljs.core.rest(arglist__8976);
return G__8974__delegate(x,y,more);
});
G__8974.cljs$core$IFn$_invoke$arity$variadic = G__8974__delegate;
return G__8974;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__8977 = null;
if (arguments.length > 2) {
var G__8978__i = 0, G__8978__a = new Array(arguments.length -  2);
while (G__8978__i < G__8978__a.length) {G__8978__a[G__8978__i] = arguments[G__8978__i + 2]; ++G__8978__i;}
G__8977 = new cljs.core.IndexedSeq(G__8978__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8977);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__8983__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8983 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8984__i = 0, G__8984__a = new Array(arguments.length -  2);
while (G__8984__i < G__8984__a.length) {G__8984__a[G__8984__i] = arguments[G__8984__i + 2]; ++G__8984__i;}
  more = new cljs.core.IndexedSeq(G__8984__a,0);
} 
return G__8983__delegate.call(this,x,y,more);};
G__8983.cljs$lang$maxFixedArity = 2;
G__8983.cljs$lang$applyTo = (function (arglist__8985){
var x = cljs.core.first(arglist__8985);
arglist__8985 = cljs.core.next(arglist__8985);
var y = cljs.core.first(arglist__8985);
var more = cljs.core.rest(arglist__8985);
return G__8983__delegate(x,y,more);
});
G__8983.cljs$core$IFn$_invoke$arity$variadic = G__8983__delegate;
return G__8983;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__8986 = null;
if (arguments.length > 2) {
var G__8987__i = 0, G__8987__a = new Array(arguments.length -  2);
while (G__8987__i < G__8987__a.length) {G__8987__a[G__8987__i] = arguments[G__8987__i + 2]; ++G__8987__i;}
G__8986 = new cljs.core.IndexedSeq(G__8987__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8986);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__8988__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__8989 = y;
var G__8990 = cljs.core.first(more);
var G__8991 = cljs.core.next(more);
x = G__8989;
y = G__8990;
more = G__8991;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8988 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8992__i = 0, G__8992__a = new Array(arguments.length -  2);
while (G__8992__i < G__8992__a.length) {G__8992__a[G__8992__i] = arguments[G__8992__i + 2]; ++G__8992__i;}
  more = new cljs.core.IndexedSeq(G__8992__a,0);
} 
return G__8988__delegate.call(this,x,y,more);};
G__8988.cljs$lang$maxFixedArity = 2;
G__8988.cljs$lang$applyTo = (function (arglist__8993){
var x = cljs.core.first(arglist__8993);
arglist__8993 = cljs.core.next(arglist__8993);
var y = cljs.core.first(arglist__8993);
var more = cljs.core.rest(arglist__8993);
return G__8988__delegate(x,y,more);
});
G__8988.cljs$core$IFn$_invoke$arity$variadic = G__8988__delegate;
return G__8988;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__8994 = null;
if (arguments.length > 2) {
var G__8995__i = 0, G__8995__a = new Array(arguments.length -  2);
while (G__8995__i < G__8995__a.length) {G__8995__a[G__8995__i] = arguments[G__8995__i + 2]; ++G__8995__i;}
G__8994 = new cljs.core.IndexedSeq(G__8995__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8994);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__8996__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__8997 = y;
var G__8998 = cljs.core.first(more);
var G__8999 = cljs.core.next(more);
x = G__8997;
y = G__8998;
more = G__8999;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8996 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9000__i = 0, G__9000__a = new Array(arguments.length -  2);
while (G__9000__i < G__9000__a.length) {G__9000__a[G__9000__i] = arguments[G__9000__i + 2]; ++G__9000__i;}
  more = new cljs.core.IndexedSeq(G__9000__a,0);
} 
return G__8996__delegate.call(this,x,y,more);};
G__8996.cljs$lang$maxFixedArity = 2;
G__8996.cljs$lang$applyTo = (function (arglist__9001){
var x = cljs.core.first(arglist__9001);
arglist__9001 = cljs.core.next(arglist__9001);
var y = cljs.core.first(arglist__9001);
var more = cljs.core.rest(arglist__9001);
return G__8996__delegate(x,y,more);
});
G__8996.cljs$core$IFn$_invoke$arity$variadic = G__8996__delegate;
return G__8996;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__9002 = null;
if (arguments.length > 2) {
var G__9003__i = 0, G__9003__a = new Array(arguments.length -  2);
while (G__9003__i < G__9003__a.length) {G__9003__a[G__9003__i] = arguments[G__9003__i + 2]; ++G__9003__i;}
G__9002 = new cljs.core.IndexedSeq(G__9003__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__9004__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__9005 = y;
var G__9006 = cljs.core.first(more);
var G__9007 = cljs.core.next(more);
x = G__9005;
y = G__9006;
more = G__9007;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__9004 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9008__i = 0, G__9008__a = new Array(arguments.length -  2);
while (G__9008__i < G__9008__a.length) {G__9008__a[G__9008__i] = arguments[G__9008__i + 2]; ++G__9008__i;}
  more = new cljs.core.IndexedSeq(G__9008__a,0);
} 
return G__9004__delegate.call(this,x,y,more);};
G__9004.cljs$lang$maxFixedArity = 2;
G__9004.cljs$lang$applyTo = (function (arglist__9009){
var x = cljs.core.first(arglist__9009);
arglist__9009 = cljs.core.next(arglist__9009);
var y = cljs.core.first(arglist__9009);
var more = cljs.core.rest(arglist__9009);
return G__9004__delegate(x,y,more);
});
G__9004.cljs$core$IFn$_invoke$arity$variadic = G__9004__delegate;
return G__9004;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__9010 = null;
if (arguments.length > 2) {
var G__9011__i = 0, G__9011__a = new Array(arguments.length -  2);
while (G__9011__i < G__9011__a.length) {G__9011__a[G__9011__i] = arguments[G__9011__i + 2]; ++G__9011__i;}
G__9010 = new cljs.core.IndexedSeq(G__9011__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__9012__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__9013 = y;
var G__9014 = cljs.core.first(more);
var G__9015 = cljs.core.next(more);
x = G__9013;
y = G__9014;
more = G__9015;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__9012 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9016__i = 0, G__9016__a = new Array(arguments.length -  2);
while (G__9016__i < G__9016__a.length) {G__9016__a[G__9016__i] = arguments[G__9016__i + 2]; ++G__9016__i;}
  more = new cljs.core.IndexedSeq(G__9016__a,0);
} 
return G__9012__delegate.call(this,x,y,more);};
G__9012.cljs$lang$maxFixedArity = 2;
G__9012.cljs$lang$applyTo = (function (arglist__9017){
var x = cljs.core.first(arglist__9017);
arglist__9017 = cljs.core.next(arglist__9017);
var y = cljs.core.first(arglist__9017);
var more = cljs.core.rest(arglist__9017);
return G__9012__delegate(x,y,more);
});
G__9012.cljs$core$IFn$_invoke$arity$variadic = G__9012__delegate;
return G__9012;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__9018 = null;
if (arguments.length > 2) {
var G__9019__i = 0, G__9019__a = new Array(arguments.length -  2);
while (G__9019__i < G__9019__a.length) {G__9019__a[G__9019__i] = arguments[G__9019__i + 2]; ++G__9019__i;}
G__9018 = new cljs.core.IndexedSeq(G__9019__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9018);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4060__auto__ = x;
var y__4061__auto__ = y;
return ((x__4060__auto__ > y__4061__auto__) ? x__4060__auto__ : y__4061__auto__);
});
var max__3 = (function() { 
var G__9020__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4060__auto__ = x;
var y__4061__auto__ = y;
return ((x__4060__auto__ > y__4061__auto__) ? x__4060__auto__ : y__4061__auto__);
})(),more);
};
var G__9020 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9021__i = 0, G__9021__a = new Array(arguments.length -  2);
while (G__9021__i < G__9021__a.length) {G__9021__a[G__9021__i] = arguments[G__9021__i + 2]; ++G__9021__i;}
  more = new cljs.core.IndexedSeq(G__9021__a,0);
} 
return G__9020__delegate.call(this,x,y,more);};
G__9020.cljs$lang$maxFixedArity = 2;
G__9020.cljs$lang$applyTo = (function (arglist__9022){
var x = cljs.core.first(arglist__9022);
arglist__9022 = cljs.core.next(arglist__9022);
var y = cljs.core.first(arglist__9022);
var more = cljs.core.rest(arglist__9022);
return G__9020__delegate(x,y,more);
});
G__9020.cljs$core$IFn$_invoke$arity$variadic = G__9020__delegate;
return G__9020;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__9023 = null;
if (arguments.length > 2) {
var G__9024__i = 0, G__9024__a = new Array(arguments.length -  2);
while (G__9024__i < G__9024__a.length) {G__9024__a[G__9024__i] = arguments[G__9024__i + 2]; ++G__9024__i;}
G__9023 = new cljs.core.IndexedSeq(G__9024__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9023);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4067__auto__ = x;
var y__4068__auto__ = y;
return ((x__4067__auto__ < y__4068__auto__) ? x__4067__auto__ : y__4068__auto__);
});
var min__3 = (function() { 
var G__9025__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4067__auto__ = x;
var y__4068__auto__ = y;
return ((x__4067__auto__ < y__4068__auto__) ? x__4067__auto__ : y__4068__auto__);
})(),more);
};
var G__9025 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9026__i = 0, G__9026__a = new Array(arguments.length -  2);
while (G__9026__i < G__9026__a.length) {G__9026__a[G__9026__i] = arguments[G__9026__i + 2]; ++G__9026__i;}
  more = new cljs.core.IndexedSeq(G__9026__a,0);
} 
return G__9025__delegate.call(this,x,y,more);};
G__9025.cljs$lang$maxFixedArity = 2;
G__9025.cljs$lang$applyTo = (function (arglist__9027){
var x = cljs.core.first(arglist__9027);
arglist__9027 = cljs.core.next(arglist__9027);
var y = cljs.core.first(arglist__9027);
var more = cljs.core.rest(arglist__9027);
return G__9025__delegate(x,y,more);
});
G__9025.cljs$core$IFn$_invoke$arity$variadic = G__9025__delegate;
return G__9025;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__9028 = null;
if (arguments.length > 2) {
var G__9029__i = 0, G__9029__a = new Array(arguments.length -  2);
while (G__9029__i < G__9029__a.length) {G__9029__a[G__9029__i] = arguments[G__9029__i + 2]; ++G__9029__i;}
G__9028 = new cljs.core.IndexedSeq(G__9029__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9028);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__9030__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__9030 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9031__i = 0, G__9031__a = new Array(arguments.length -  2);
while (G__9031__i < G__9031__a.length) {G__9031__a[G__9031__i] = arguments[G__9031__i + 2]; ++G__9031__i;}
  more = new cljs.core.IndexedSeq(G__9031__a,0);
} 
return G__9030__delegate.call(this,x,y,more);};
G__9030.cljs$lang$maxFixedArity = 2;
G__9030.cljs$lang$applyTo = (function (arglist__9032){
var x = cljs.core.first(arglist__9032);
arglist__9032 = cljs.core.next(arglist__9032);
var y = cljs.core.first(arglist__9032);
var more = cljs.core.rest(arglist__9032);
return G__9030__delegate(x,y,more);
});
G__9030.cljs$core$IFn$_invoke$arity$variadic = G__9030__delegate;
return G__9030;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__9033 = null;
if (arguments.length > 2) {
var G__9034__i = 0, G__9034__a = new Array(arguments.length -  2);
while (G__9034__i < G__9034__a.length) {G__9034__a[G__9034__i] = arguments[G__9034__i + 2]; ++G__9034__i;}
G__9033 = new cljs.core.IndexedSeq(G__9034__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__9035__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__9035 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9036__i = 0, G__9036__a = new Array(arguments.length -  2);
while (G__9036__i < G__9036__a.length) {G__9036__a[G__9036__i] = arguments[G__9036__i + 2]; ++G__9036__i;}
  more = new cljs.core.IndexedSeq(G__9036__a,0);
} 
return G__9035__delegate.call(this,x,y,more);};
G__9035.cljs$lang$maxFixedArity = 2;
G__9035.cljs$lang$applyTo = (function (arglist__9037){
var x = cljs.core.first(arglist__9037);
arglist__9037 = cljs.core.next(arglist__9037);
var y = cljs.core.first(arglist__9037);
var more = cljs.core.rest(arglist__9037);
return G__9035__delegate(x,y,more);
});
G__9035.cljs$core$IFn$_invoke$arity$variadic = G__9035__delegate;
return G__9035;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__9038 = null;
if (arguments.length > 2) {
var G__9039__i = 0, G__9039__a = new Array(arguments.length -  2);
while (G__9039__i < G__9039__a.length) {G__9039__a[G__9039__i] = arguments[G__9039__i + 2]; ++G__9039__i;}
G__9038 = new cljs.core.IndexedSeq(G__9039__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__9044__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__9044 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9045__i = 0, G__9045__a = new Array(arguments.length -  2);
while (G__9045__i < G__9045__a.length) {G__9045__a[G__9045__i] = arguments[G__9045__i + 2]; ++G__9045__i;}
  more = new cljs.core.IndexedSeq(G__9045__a,0);
} 
return G__9044__delegate.call(this,x,y,more);};
G__9044.cljs$lang$maxFixedArity = 2;
G__9044.cljs$lang$applyTo = (function (arglist__9046){
var x = cljs.core.first(arglist__9046);
arglist__9046 = cljs.core.next(arglist__9046);
var y = cljs.core.first(arglist__9046);
var more = cljs.core.rest(arglist__9046);
return G__9044__delegate(x,y,more);
});
G__9044.cljs$core$IFn$_invoke$arity$variadic = G__9044__delegate;
return G__9044;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__9047 = null;
if (arguments.length > 2) {
var G__9048__i = 0, G__9048__a = new Array(arguments.length -  2);
while (G__9048__i < G__9048__a.length) {G__9048__a[G__9048__i] = arguments[G__9048__i + 2]; ++G__9048__i;}
G__9047 = new cljs.core.IndexedSeq(G__9048__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9047);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__9049__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__9049 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9050__i = 0, G__9050__a = new Array(arguments.length -  2);
while (G__9050__i < G__9050__a.length) {G__9050__a[G__9050__i] = arguments[G__9050__i + 2]; ++G__9050__i;}
  more = new cljs.core.IndexedSeq(G__9050__a,0);
} 
return G__9049__delegate.call(this,x,y,more);};
G__9049.cljs$lang$maxFixedArity = 2;
G__9049.cljs$lang$applyTo = (function (arglist__9051){
var x = cljs.core.first(arglist__9051);
arglist__9051 = cljs.core.next(arglist__9051);
var y = cljs.core.first(arglist__9051);
var more = cljs.core.rest(arglist__9051);
return G__9049__delegate(x,y,more);
});
G__9049.cljs$core$IFn$_invoke$arity$variadic = G__9049__delegate;
return G__9049;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__9052 = null;
if (arguments.length > 2) {
var G__9053__i = 0, G__9053__a = new Array(arguments.length -  2);
while (G__9053__i < G__9053__a.length) {G__9053__a[G__9053__i] = arguments[G__9053__i + 2]; ++G__9053__i;}
G__9052 = new cljs.core.IndexedSeq(G__9053__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__9054__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__9054 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9055__i = 0, G__9055__a = new Array(arguments.length -  2);
while (G__9055__i < G__9055__a.length) {G__9055__a[G__9055__i] = arguments[G__9055__i + 2]; ++G__9055__i;}
  more = new cljs.core.IndexedSeq(G__9055__a,0);
} 
return G__9054__delegate.call(this,x,y,more);};
G__9054.cljs$lang$maxFixedArity = 2;
G__9054.cljs$lang$applyTo = (function (arglist__9056){
var x = cljs.core.first(arglist__9056);
arglist__9056 = cljs.core.next(arglist__9056);
var y = cljs.core.first(arglist__9056);
var more = cljs.core.rest(arglist__9056);
return G__9054__delegate(x,y,more);
});
G__9054.cljs$core$IFn$_invoke$arity$variadic = G__9054__delegate;
return G__9054;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__9057 = null;
if (arguments.length > 2) {
var G__9058__i = 0, G__9058__a = new Array(arguments.length -  2);
while (G__9058__i < G__9058__a.length) {G__9058__a[G__9058__i] = arguments[G__9058__i + 2]; ++G__9058__i;}
G__9057 = new cljs.core.IndexedSeq(G__9058__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9057);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__9061 = x;
var G__9062 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__9061,G__9062) : cljs.core.mod.call(null,G__9061,G__9062));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__9063__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__9063 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9064__i = 0, G__9064__a = new Array(arguments.length -  2);
while (G__9064__i < G__9064__a.length) {G__9064__a[G__9064__i] = arguments[G__9064__i + 2]; ++G__9064__i;}
  more = new cljs.core.IndexedSeq(G__9064__a,0);
} 
return G__9063__delegate.call(this,x,y,more);};
G__9063.cljs$lang$maxFixedArity = 2;
G__9063.cljs$lang$applyTo = (function (arglist__9065){
var x = cljs.core.first(arglist__9065);
arglist__9065 = cljs.core.next(arglist__9065);
var y = cljs.core.first(arglist__9065);
var more = cljs.core.rest(arglist__9065);
return G__9063__delegate(x,y,more);
});
G__9063.cljs$core$IFn$_invoke$arity$variadic = G__9063__delegate;
return G__9063;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__9066 = null;
if (arguments.length > 2) {
var G__9067__i = 0, G__9067__a = new Array(arguments.length -  2);
while (G__9067__i < G__9067__a.length) {G__9067__a[G__9067__i] = arguments[G__9067__i + 2]; ++G__9067__i;}
G__9066 = new cljs.core.IndexedSeq(G__9067__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9066);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__9068__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__9068 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9069__i = 0, G__9069__a = new Array(arguments.length -  2);
while (G__9069__i < G__9069__a.length) {G__9069__a[G__9069__i] = arguments[G__9069__i + 2]; ++G__9069__i;}
  more = new cljs.core.IndexedSeq(G__9069__a,0);
} 
return G__9068__delegate.call(this,x,y,more);};
G__9068.cljs$lang$maxFixedArity = 2;
G__9068.cljs$lang$applyTo = (function (arglist__9070){
var x = cljs.core.first(arglist__9070);
arglist__9070 = cljs.core.next(arglist__9070);
var y = cljs.core.first(arglist__9070);
var more = cljs.core.rest(arglist__9070);
return G__9068__delegate(x,y,more);
});
G__9068.cljs$core$IFn$_invoke$arity$variadic = G__9068__delegate;
return G__9068;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__9071 = null;
if (arguments.length > 2) {
var G__9072__i = 0, G__9072__a = new Array(arguments.length -  2);
while (G__9072__i < G__9072__a.length) {G__9072__a[G__9072__i] = arguments[G__9072__i + 2]; ++G__9072__i;}
G__9071 = new cljs.core.IndexedSeq(G__9072__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9071);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__9075 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__9075) : Math.floor.call(null,G__9075));
} else {
var G__9076 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9076) : Math.ceil.call(null,G__9076));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__9081__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__9082 = y;
var G__9083 = cljs.core.first(more);
var G__9084 = cljs.core.next(more);
x = G__9082;
y = G__9083;
more = G__9084;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__9081 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9085__i = 0, G__9085__a = new Array(arguments.length -  2);
while (G__9085__i < G__9085__a.length) {G__9085__a[G__9085__i] = arguments[G__9085__i + 2]; ++G__9085__i;}
  more = new cljs.core.IndexedSeq(G__9085__a,0);
} 
return G__9081__delegate.call(this,x,y,more);};
G__9081.cljs$lang$maxFixedArity = 2;
G__9081.cljs$lang$applyTo = (function (arglist__9086){
var x = cljs.core.first(arglist__9086);
arglist__9086 = cljs.core.next(arglist__9086);
var y = cljs.core.first(arglist__9086);
var more = cljs.core.rest(arglist__9086);
return G__9081__delegate(x,y,more);
});
G__9081.cljs$core$IFn$_invoke$arity$variadic = G__9081__delegate;
return G__9081;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__9087 = null;
if (arguments.length > 2) {
var G__9088__i = 0, G__9088__a = new Array(arguments.length -  2);
while (G__9088__i < G__9088__a.length) {G__9088__a[G__9088__i] = arguments[G__9088__i + 2]; ++G__9088__i;}
G__9087 = new cljs.core.IndexedSeq(G__9088__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__9089 = (n__$1 - (1));
var G__9090 = cljs.core.next(xs);
n__$1 = G__9089;
xs = G__9090;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__9094 = x;
return goog.string.buildString(G__9094);
}
});
var str__2 = (function() { 
var G__9095__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__9096 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__9097 = cljs.core.next(more);
sb = G__9096;
more = G__9097;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__9095 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__9098__i = 0, G__9098__a = new Array(arguments.length -  1);
while (G__9098__i < G__9098__a.length) {G__9098__a[G__9098__i] = arguments[G__9098__i + 1]; ++G__9098__i;}
  ys = new cljs.core.IndexedSeq(G__9098__a,0);
} 
return G__9095__delegate.call(this,x,ys);};
G__9095.cljs$lang$maxFixedArity = 1;
G__9095.cljs$lang$applyTo = (function (arglist__9099){
var x = cljs.core.first(arglist__9099);
var ys = cljs.core.rest(arglist__9099);
return G__9095__delegate(x,ys);
});
G__9095.cljs$core$IFn$_invoke$arity$variadic = G__9095__delegate;
return G__9095;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__9100 = null;
if (arguments.length > 1) {
var G__9101__i = 0, G__9101__a = new Array(arguments.length -  1);
while (G__9101__i < G__9101__a.length) {G__9101__a[G__9101__i] = arguments[G__9101__i + 1]; ++G__9101__i;}
G__9100 = new cljs.core.IndexedSeq(G__9101__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__9102 = cljs.core.next(xs);
var G__9103 = cljs.core.next(ys);
xs = G__9102;
ys = G__9103;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__9104 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__9105 = cljs.core.next(s);
res = G__9104;
s = G__9105;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__9110 = ((h + (cljs.core.hash((function (){var G__9108 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9108) : cljs.core.key.call(null,G__9108));
})()) ^ cljs.core.hash((function (){var G__9109 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9109) : cljs.core.val.call(null,G__9109));
})()))) % (4503599627370496));
var G__9111 = cljs.core.next(s);
h = G__9110;
s = G__9111;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__9112 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__9113 = cljs.core.next(s__$1);
h = G__9112;
s__$1 = G__9113;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__9124_9134 = cljs.core.seq(fn_map);
var chunk__9125_9135 = null;
var count__9126_9136 = (0);
var i__9127_9137 = (0);
while(true){
if((i__9127_9137 < count__9126_9136)){
var vec__9128_9138 = chunk__9125_9135.cljs$core$IIndexed$_nth$arity$2(null,i__9127_9137);
var key_name_9139 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9128_9138,(0),null);
var f_9140 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9128_9138,(1),null);
var str_name_9141 = (function (){var G__9129 = key_name_9139;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9129) : cljs.core.name.call(null,G__9129));
})();
(obj[str_name_9141] = f_9140);

var G__9142 = seq__9124_9134;
var G__9143 = chunk__9125_9135;
var G__9144 = count__9126_9136;
var G__9145 = (i__9127_9137 + (1));
seq__9124_9134 = G__9142;
chunk__9125_9135 = G__9143;
count__9126_9136 = G__9144;
i__9127_9137 = G__9145;
continue;
} else {
var temp__4126__auto___9146 = cljs.core.seq(seq__9124_9134);
if(temp__4126__auto___9146){
var seq__9124_9147__$1 = temp__4126__auto___9146;
if(cljs.core.chunked_seq_QMARK_(seq__9124_9147__$1)){
var c__4530__auto___9148 = (function (){var G__9130 = seq__9124_9147__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__9130) : cljs.core.chunk_first.call(null,G__9130));
})();
var G__9149 = (function (){var G__9131 = seq__9124_9147__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__9131) : cljs.core.chunk_rest.call(null,G__9131));
})();
var G__9150 = c__4530__auto___9148;
var G__9151 = cljs.core.count(c__4530__auto___9148);
var G__9152 = (0);
seq__9124_9134 = G__9149;
chunk__9125_9135 = G__9150;
count__9126_9136 = G__9151;
i__9127_9137 = G__9152;
continue;
} else {
var vec__9132_9153 = cljs.core.first(seq__9124_9147__$1);
var key_name_9154 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9132_9153,(0),null);
var f_9155 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9132_9153,(1),null);
var str_name_9156 = (function (){var G__9133 = key_name_9154;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9133) : cljs.core.name.call(null,G__9133));
})();
(obj[str_name_9156] = f_9155);

var G__9157 = cljs.core.next(seq__9124_9147__$1);
var G__9158 = null;
var G__9159 = (0);
var G__9160 = (0);
seq__9124_9134 = G__9157;
chunk__9125_9135 = G__9158;
count__9126_9136 = G__9159;
i__9127_9137 = G__9160;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__9162 = coll;
if(G__9162){
var bit__4424__auto__ = (G__9162.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4424__auto__) || (G__9162.cljs$core$IReversible$)){
return true;
} else {
if((!G__9162.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__9162);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__9162);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__9163 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__9163;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__9164 = (i - (1));
var G__9165 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__9164;
r = G__9165;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__9166__i = 0, G__9166__a = new Array(arguments.length -  0);
while (G__9166__i < G__9166__a.length) {G__9166__a[G__9166__i] = arguments[G__9166__i + 0]; ++G__9166__i;}
  xs = new cljs.core.IndexedSeq(G__9166__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__9167){
var xs = cljs.core.seq(arglist__9167);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3743__auto__ = (coll == null);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var G__9171 = coll;
if(G__9171){
var bit__4417__auto__ = (G__9171.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4417__auto__) || (G__9171.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__9173 = x;
if(G__9173){
var bit__4424__auto__ = (G__9173.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4424__auto__) || (G__9173.cljs$core$IList$)){
return true;
} else {
if((!G__9173.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__9173);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__9173);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3731__auto__ = cljs.core.not(a.ns);
if(and__3731__auto__){
return b.ns;
} else {
return and__3731__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__9180 = a.ns;
var G__9181 = b.ns;
return goog.array.defaultCompare(G__9180,G__9181);
})();
if(((0) === nsc)){
var G__9182 = a.name;
var G__9183 = b.name;
return goog.array.defaultCompare(G__9182,G__9183);
} else {
return nsc;
}
}
} else {
var G__9184 = a.name;
var G__9185 = b.name;
return goog.array.defaultCompare(G__9184,G__9185);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4164__auto__ = self__._hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__9187 = null;
var G__9187__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__9187__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__9187 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__9187__2.call(this,self__,coll);
case 3:
return G__9187__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9187.cljs$core$IFn$_invoke$arity$2 = G__9187__2;
G__9187.cljs$core$IFn$_invoke$arity$3 = G__9187__3;
return G__9187;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args9186){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9186)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__9189 = x;
if(G__9189){
var bit__4417__auto__ = (G__9189.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4417__auto__) || (G__9189.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__9191 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__9191) : cljs.core.name.call(null,G__9191));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__9192 = ls.sval();
ls = G__9192;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__9194 = s;
if(G__9194){
var bit__4417__auto__ = (G__9194.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4417__auto__) || (G__9194.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__9195 = cljs.core.next(s__$1);
s__$1 = G__9195;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_9196 = (0);
var xs_9197 = cljs.core.seq(coll);
while(true){
if(xs_9197){
(ret[i_9196] = cljs.core.to_array(cljs.core.first(xs_9197)));

var G__9198 = (i_9196 + (1));
var G__9199 = cljs.core.next(xs_9197);
i_9196 = G__9198;
xs_9197 = G__9199;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9202 = (i + (1));
var G__9203 = cljs.core.next(s__$1);
i = G__9202;
s__$1 = G__9203;
continue;
} else {
return a;
}
break;
}
} else {
var n__4630__auto___9204 = size;
var i_9205 = (0);
while(true){
if((i_9205 < n__4630__auto___9204)){
(a[i_9205] = init_val_or_seq);

var G__9206 = (i_9205 + (1));
i_9205 = G__9206;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9209 = (i + (1));
var G__9210 = cljs.core.next(s__$1);
i = G__9209;
s__$1 = G__9210;
continue;
} else {
return a;
}
break;
}
} else {
var n__4630__auto___9211 = size;
var i_9212 = (0);
while(true){
if((i_9212 < n__4630__auto___9211)){
(a[i_9212] = init_val_or_seq);

var G__9213 = (i_9212 + (1));
i_9212 = G__9213;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9216 = (i + (1));
var G__9217 = cljs.core.next(s__$1);
i = G__9216;
s__$1 = G__9217;
continue;
} else {
return a;
}
break;
}
} else {
var n__4630__auto___9218 = size;
var i_9219 = (0);
while(true){
if((i_9219 < n__4630__auto___9218)){
(a[i_9219] = init_val_or_seq);

var G__9220 = (i_9219 + (1));
i_9219 = G__9220;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__9223 = (i + (1));
var G__9224 = cljs.core.next(s__$1);
i = G__9223;
s__$1 = G__9224;
continue;
} else {
return a;
}
break;
}
} else {
var n__4630__auto___9225 = size;
var i_9226 = (0);
while(true){
if((i_9226 < n__4630__auto___9225)){
(a[i_9226] = init_val_or_seq);

var G__9227 = (i_9226 + (1));
i_9226 = G__9227;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__9228 = cljs.core.next(s__$1);
var G__9229 = (i - (1));
var G__9230 = (sum + (1));
s__$1 = G__9228;
i = G__9229;
sum = G__9230;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__9250__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__9250 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9251__i = 0, G__9251__a = new Array(arguments.length -  2);
while (G__9251__i < G__9251__a.length) {G__9251__a[G__9251__i] = arguments[G__9251__i + 2]; ++G__9251__i;}
  zs = new cljs.core.IndexedSeq(G__9251__a,0);
} 
return G__9250__delegate.call(this,x,y,zs);};
G__9250.cljs$lang$maxFixedArity = 2;
G__9250.cljs$lang$applyTo = (function (arglist__9252){
var x = cljs.core.first(arglist__9252);
arglist__9252 = cljs.core.next(arglist__9252);
var y = cljs.core.first(arglist__9252);
var zs = cljs.core.rest(arglist__9252);
return G__9250__delegate(x,y,zs);
});
G__9250.cljs$core$IFn$_invoke$arity$variadic = G__9250__delegate;
return G__9250;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__9253 = null;
if (arguments.length > 2) {
var G__9254__i = 0, G__9254__a = new Array(arguments.length -  2);
while (G__9254__i < G__9254__a.length) {G__9254__a[G__9254__i] = arguments[G__9254__i + 2]; ++G__9254__i;}
G__9253 = new cljs.core.IndexedSeq(G__9254__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__9255__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__9255 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__9256__i = 0, G__9256__a = new Array(arguments.length -  4);
while (G__9256__i < G__9256__a.length) {G__9256__a[G__9256__i] = arguments[G__9256__i + 4]; ++G__9256__i;}
  more = new cljs.core.IndexedSeq(G__9256__a,0);
} 
return G__9255__delegate.call(this,a,b,c,d,more);};
G__9255.cljs$lang$maxFixedArity = 4;
G__9255.cljs$lang$applyTo = (function (arglist__9257){
var a = cljs.core.first(arglist__9257);
arglist__9257 = cljs.core.next(arglist__9257);
var b = cljs.core.first(arglist__9257);
arglist__9257 = cljs.core.next(arglist__9257);
var c = cljs.core.first(arglist__9257);
arglist__9257 = cljs.core.next(arglist__9257);
var d = cljs.core.first(arglist__9257);
var more = cljs.core.rest(arglist__9257);
return G__9255__delegate(a,b,c,d,more);
});
G__9255.cljs$core$IFn$_invoke$arity$variadic = G__9255__delegate;
return G__9255;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__9258 = null;
if (arguments.length > 4) {
var G__9259__i = 0, G__9259__a = new Array(arguments.length -  4);
while (G__9259__i < G__9259__a.length) {G__9259__a[G__9259__i] = arguments[G__9259__i + 4]; ++G__9259__i;}
G__9258 = new cljs.core.IndexedSeq(G__9259__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__9258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__9260__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__9261 = ntcoll;
var G__9262 = cljs.core.first(vals);
var G__9263 = cljs.core.next(vals);
tcoll = G__9261;
val = G__9262;
vals = G__9263;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9260 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__9264__i = 0, G__9264__a = new Array(arguments.length -  2);
while (G__9264__i < G__9264__a.length) {G__9264__a[G__9264__i] = arguments[G__9264__i + 2]; ++G__9264__i;}
  vals = new cljs.core.IndexedSeq(G__9264__a,0);
} 
return G__9260__delegate.call(this,tcoll,val,vals);};
G__9260.cljs$lang$maxFixedArity = 2;
G__9260.cljs$lang$applyTo = (function (arglist__9265){
var tcoll = cljs.core.first(arglist__9265);
arglist__9265 = cljs.core.next(arglist__9265);
var val = cljs.core.first(arglist__9265);
var vals = cljs.core.rest(arglist__9265);
return G__9260__delegate(tcoll,val,vals);
});
G__9260.cljs$core$IFn$_invoke$arity$variadic = G__9260__delegate;
return G__9260;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__9266 = null;
if (arguments.length > 2) {
var G__9267__i = 0, G__9267__a = new Array(arguments.length -  2);
while (G__9267__i < G__9267__a.length) {G__9267__a[G__9267__i] = arguments[G__9267__i + 2]; ++G__9267__i;}
G__9266 = new cljs.core.IndexedSeq(G__9267__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__9266);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__9268__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__9269 = ntcoll;
var G__9270 = cljs.core.first(kvs);
var G__9271 = cljs.core.second(kvs);
var G__9272 = cljs.core.nnext(kvs);
tcoll = G__9269;
key = G__9270;
val = G__9271;
kvs = G__9272;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9268 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__9273__i = 0, G__9273__a = new Array(arguments.length -  3);
while (G__9273__i < G__9273__a.length) {G__9273__a[G__9273__i] = arguments[G__9273__i + 3]; ++G__9273__i;}
  kvs = new cljs.core.IndexedSeq(G__9273__a,0);
} 
return G__9268__delegate.call(this,tcoll,key,val,kvs);};
G__9268.cljs$lang$maxFixedArity = 3;
G__9268.cljs$lang$applyTo = (function (arglist__9274){
var tcoll = cljs.core.first(arglist__9274);
arglist__9274 = cljs.core.next(arglist__9274);
var key = cljs.core.first(arglist__9274);
arglist__9274 = cljs.core.next(arglist__9274);
var val = cljs.core.first(arglist__9274);
var kvs = cljs.core.rest(arglist__9274);
return G__9268__delegate(tcoll,key,val,kvs);
});
G__9268.cljs$core$IFn$_invoke$arity$variadic = G__9268__delegate;
return G__9268;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__9275 = null;
if (arguments.length > 3) {
var G__9276__i = 0, G__9276__a = new Array(arguments.length -  3);
while (G__9276__i < G__9276__a.length) {G__9276__a[G__9276__i] = arguments[G__9276__i + 3]; ++G__9276__i;}
G__9275 = new cljs.core.IndexedSeq(G__9276__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__9275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__9277__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__9278 = ntcoll;
var G__9279 = cljs.core.first(ks);
var G__9280 = cljs.core.next(ks);
tcoll = G__9278;
key = G__9279;
ks = G__9280;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9277 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__9281__i = 0, G__9281__a = new Array(arguments.length -  2);
while (G__9281__i < G__9281__a.length) {G__9281__a[G__9281__i] = arguments[G__9281__i + 2]; ++G__9281__i;}
  ks = new cljs.core.IndexedSeq(G__9281__a,0);
} 
return G__9277__delegate.call(this,tcoll,key,ks);};
G__9277.cljs$lang$maxFixedArity = 2;
G__9277.cljs$lang$applyTo = (function (arglist__9282){
var tcoll = cljs.core.first(arglist__9282);
arglist__9282 = cljs.core.next(arglist__9282);
var key = cljs.core.first(arglist__9282);
var ks = cljs.core.rest(arglist__9282);
return G__9277__delegate(tcoll,key,ks);
});
G__9277.cljs$core$IFn$_invoke$arity$variadic = G__9277__delegate;
return G__9277;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__9283 = null;
if (arguments.length > 2) {
var G__9284__i = 0, G__9284__a = new Array(arguments.length -  2);
while (G__9284__i < G__9284__a.length) {G__9284__a[G__9284__i] = arguments[G__9284__i + 2]; ++G__9284__i;}
G__9283 = new cljs.core.IndexedSeq(G__9284__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__9283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__9285__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__9286 = ntcoll;
var G__9287 = cljs.core.first(vals);
var G__9288 = cljs.core.next(vals);
tcoll = G__9286;
val = G__9287;
vals = G__9288;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__9285 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__9289__i = 0, G__9289__a = new Array(arguments.length -  2);
while (G__9289__i < G__9289__a.length) {G__9289__a[G__9289__i] = arguments[G__9289__i + 2]; ++G__9289__i;}
  vals = new cljs.core.IndexedSeq(G__9289__a,0);
} 
return G__9285__delegate.call(this,tcoll,val,vals);};
G__9285.cljs$lang$maxFixedArity = 2;
G__9285.cljs$lang$applyTo = (function (arglist__9290){
var tcoll = cljs.core.first(arglist__9290);
arglist__9290 = cljs.core.next(arglist__9290);
var val = cljs.core.first(arglist__9290);
var vals = cljs.core.rest(arglist__9290);
return G__9285__delegate(tcoll,val,vals);
});
G__9285.cljs$core$IFn$_invoke$arity$variadic = G__9285__delegate;
return G__9285;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__9291 = null;
if (arguments.length > 2) {
var G__9292__i = 0, G__9292__a = new Array(arguments.length -  2);
while (G__9292__i < G__9292__a.length) {G__9292__a[G__9292__i] = arguments[G__9292__i + 2]; ++G__9292__i;}
G__9291 = new cljs.core.IndexedSeq(G__9292__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__9291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4674 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4674);
} else {
var G__9503 = a4674;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9503) : f.call(null,G__9503));
}
} else {
var b4675 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4674,b4675);
} else {
var G__9504 = a4674;
var G__9505 = b4675;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9504,G__9505) : f.call(null,G__9504,G__9505));
}
} else {
var c4676 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4674,b4675,c4676);
} else {
var G__9506 = a4674;
var G__9507 = b4675;
var G__9508 = c4676;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9506,G__9507,G__9508) : f.call(null,G__9506,G__9507,G__9508));
}
} else {
var d4677 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4674,b4675,c4676,d4677);
} else {
var G__9509 = a4674;
var G__9510 = b4675;
var G__9511 = c4676;
var G__9512 = d4677;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9509,G__9510,G__9511,G__9512) : f.call(null,G__9509,G__9510,G__9511,G__9512));
}
} else {
var e4678 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4674,b4675,c4676,d4677,e4678);
} else {
var G__9513 = a4674;
var G__9514 = b4675;
var G__9515 = c4676;
var G__9516 = d4677;
var G__9517 = e4678;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9513,G__9514,G__9515,G__9516,G__9517) : f.call(null,G__9513,G__9514,G__9515,G__9516,G__9517));
}
} else {
var f4679 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4674,b4675,c4676,d4677,e4678,f4679);
} else {
var G__9518 = a4674;
var G__9519 = b4675;
var G__9520 = c4676;
var G__9521 = d4677;
var G__9522 = e4678;
var G__9523 = f4679;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9518,G__9519,G__9520,G__9521,G__9522,G__9523) : f.call(null,G__9518,G__9519,G__9520,G__9521,G__9522,G__9523));
}
} else {
var g4680 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4674,b4675,c4676,d4677,e4678,f4679,g4680);
} else {
var G__9524 = a4674;
var G__9525 = b4675;
var G__9526 = c4676;
var G__9527 = d4677;
var G__9528 = e4678;
var G__9529 = f4679;
var G__9530 = g4680;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__9524,G__9525,G__9526,G__9527,G__9528,G__9529,G__9530) : f.call(null,G__9524,G__9525,G__9526,G__9527,G__9528,G__9529,G__9530));
}
} else {
var h4681 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681);
} else {
var G__9531 = a4674;
var G__9532 = b4675;
var G__9533 = c4676;
var G__9534 = d4677;
var G__9535 = e4678;
var G__9536 = f4679;
var G__9537 = g4680;
var G__9538 = h4681;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__9531,G__9532,G__9533,G__9534,G__9535,G__9536,G__9537,G__9538) : f.call(null,G__9531,G__9532,G__9533,G__9534,G__9535,G__9536,G__9537,G__9538));
}
} else {
var i4682 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682);
} else {
var G__9539 = a4674;
var G__9540 = b4675;
var G__9541 = c4676;
var G__9542 = d4677;
var G__9543 = e4678;
var G__9544 = f4679;
var G__9545 = g4680;
var G__9546 = h4681;
var G__9547 = i4682;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__9539,G__9540,G__9541,G__9542,G__9543,G__9544,G__9545,G__9546,G__9547) : f.call(null,G__9539,G__9540,G__9541,G__9542,G__9543,G__9544,G__9545,G__9546,G__9547));
}
} else {
var j4683 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683);
} else {
var G__9548 = a4674;
var G__9549 = b4675;
var G__9550 = c4676;
var G__9551 = d4677;
var G__9552 = e4678;
var G__9553 = f4679;
var G__9554 = g4680;
var G__9555 = h4681;
var G__9556 = i4682;
var G__9557 = j4683;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__9548,G__9549,G__9550,G__9551,G__9552,G__9553,G__9554,G__9555,G__9556,G__9557) : f.call(null,G__9548,G__9549,G__9550,G__9551,G__9552,G__9553,G__9554,G__9555,G__9556,G__9557));
}
} else {
var k4684 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684);
} else {
var G__9558 = a4674;
var G__9559 = b4675;
var G__9560 = c4676;
var G__9561 = d4677;
var G__9562 = e4678;
var G__9563 = f4679;
var G__9564 = g4680;
var G__9565 = h4681;
var G__9566 = i4682;
var G__9567 = j4683;
var G__9568 = k4684;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__9558,G__9559,G__9560,G__9561,G__9562,G__9563,G__9564,G__9565,G__9566,G__9567,G__9568) : f.call(null,G__9558,G__9559,G__9560,G__9561,G__9562,G__9563,G__9564,G__9565,G__9566,G__9567,G__9568));
}
} else {
var l4685 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685);
} else {
var G__9569 = a4674;
var G__9570 = b4675;
var G__9571 = c4676;
var G__9572 = d4677;
var G__9573 = e4678;
var G__9574 = f4679;
var G__9575 = g4680;
var G__9576 = h4681;
var G__9577 = i4682;
var G__9578 = j4683;
var G__9579 = k4684;
var G__9580 = l4685;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__9569,G__9570,G__9571,G__9572,G__9573,G__9574,G__9575,G__9576,G__9577,G__9578,G__9579,G__9580) : f.call(null,G__9569,G__9570,G__9571,G__9572,G__9573,G__9574,G__9575,G__9576,G__9577,G__9578,G__9579,G__9580));
}
} else {
var m4686 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686);
} else {
var G__9581 = a4674;
var G__9582 = b4675;
var G__9583 = c4676;
var G__9584 = d4677;
var G__9585 = e4678;
var G__9586 = f4679;
var G__9587 = g4680;
var G__9588 = h4681;
var G__9589 = i4682;
var G__9590 = j4683;
var G__9591 = k4684;
var G__9592 = l4685;
var G__9593 = m4686;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__9581,G__9582,G__9583,G__9584,G__9585,G__9586,G__9587,G__9588,G__9589,G__9590,G__9591,G__9592,G__9593) : f.call(null,G__9581,G__9582,G__9583,G__9584,G__9585,G__9586,G__9587,G__9588,G__9589,G__9590,G__9591,G__9592,G__9593));
}
} else {
var n4687 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687);
} else {
var G__9594 = a4674;
var G__9595 = b4675;
var G__9596 = c4676;
var G__9597 = d4677;
var G__9598 = e4678;
var G__9599 = f4679;
var G__9600 = g4680;
var G__9601 = h4681;
var G__9602 = i4682;
var G__9603 = j4683;
var G__9604 = k4684;
var G__9605 = l4685;
var G__9606 = m4686;
var G__9607 = n4687;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__9594,G__9595,G__9596,G__9597,G__9598,G__9599,G__9600,G__9601,G__9602,G__9603,G__9604,G__9605,G__9606,G__9607) : f.call(null,G__9594,G__9595,G__9596,G__9597,G__9598,G__9599,G__9600,G__9601,G__9602,G__9603,G__9604,G__9605,G__9606,G__9607));
}
} else {
var o4688 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688);
} else {
var G__9608 = a4674;
var G__9609 = b4675;
var G__9610 = c4676;
var G__9611 = d4677;
var G__9612 = e4678;
var G__9613 = f4679;
var G__9614 = g4680;
var G__9615 = h4681;
var G__9616 = i4682;
var G__9617 = j4683;
var G__9618 = k4684;
var G__9619 = l4685;
var G__9620 = m4686;
var G__9621 = n4687;
var G__9622 = o4688;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__9608,G__9609,G__9610,G__9611,G__9612,G__9613,G__9614,G__9615,G__9616,G__9617,G__9618,G__9619,G__9620,G__9621,G__9622) : f.call(null,G__9608,G__9609,G__9610,G__9611,G__9612,G__9613,G__9614,G__9615,G__9616,G__9617,G__9618,G__9619,G__9620,G__9621,G__9622));
}
} else {
var p4689 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689);
} else {
var G__9623 = a4674;
var G__9624 = b4675;
var G__9625 = c4676;
var G__9626 = d4677;
var G__9627 = e4678;
var G__9628 = f4679;
var G__9629 = g4680;
var G__9630 = h4681;
var G__9631 = i4682;
var G__9632 = j4683;
var G__9633 = k4684;
var G__9634 = l4685;
var G__9635 = m4686;
var G__9636 = n4687;
var G__9637 = o4688;
var G__9638 = p4689;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__9623,G__9624,G__9625,G__9626,G__9627,G__9628,G__9629,G__9630,G__9631,G__9632,G__9633,G__9634,G__9635,G__9636,G__9637,G__9638) : f.call(null,G__9623,G__9624,G__9625,G__9626,G__9627,G__9628,G__9629,G__9630,G__9631,G__9632,G__9633,G__9634,G__9635,G__9636,G__9637,G__9638));
}
} else {
var q4690 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689,q4690);
} else {
var G__9639 = a4674;
var G__9640 = b4675;
var G__9641 = c4676;
var G__9642 = d4677;
var G__9643 = e4678;
var G__9644 = f4679;
var G__9645 = g4680;
var G__9646 = h4681;
var G__9647 = i4682;
var G__9648 = j4683;
var G__9649 = k4684;
var G__9650 = l4685;
var G__9651 = m4686;
var G__9652 = n4687;
var G__9653 = o4688;
var G__9654 = p4689;
var G__9655 = q4690;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__9639,G__9640,G__9641,G__9642,G__9643,G__9644,G__9645,G__9646,G__9647,G__9648,G__9649,G__9650,G__9651,G__9652,G__9653,G__9654,G__9655) : f.call(null,G__9639,G__9640,G__9641,G__9642,G__9643,G__9644,G__9645,G__9646,G__9647,G__9648,G__9649,G__9650,G__9651,G__9652,G__9653,G__9654,G__9655));
}
} else {
var r4691 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689,q4690,r4691);
} else {
var G__9656 = a4674;
var G__9657 = b4675;
var G__9658 = c4676;
var G__9659 = d4677;
var G__9660 = e4678;
var G__9661 = f4679;
var G__9662 = g4680;
var G__9663 = h4681;
var G__9664 = i4682;
var G__9665 = j4683;
var G__9666 = k4684;
var G__9667 = l4685;
var G__9668 = m4686;
var G__9669 = n4687;
var G__9670 = o4688;
var G__9671 = p4689;
var G__9672 = q4690;
var G__9673 = r4691;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__9656,G__9657,G__9658,G__9659,G__9660,G__9661,G__9662,G__9663,G__9664,G__9665,G__9666,G__9667,G__9668,G__9669,G__9670,G__9671,G__9672,G__9673) : f.call(null,G__9656,G__9657,G__9658,G__9659,G__9660,G__9661,G__9662,G__9663,G__9664,G__9665,G__9666,G__9667,G__9668,G__9669,G__9670,G__9671,G__9672,G__9673));
}
} else {
var s4692 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689,q4690,r4691,s4692);
} else {
var G__9674 = a4674;
var G__9675 = b4675;
var G__9676 = c4676;
var G__9677 = d4677;
var G__9678 = e4678;
var G__9679 = f4679;
var G__9680 = g4680;
var G__9681 = h4681;
var G__9682 = i4682;
var G__9683 = j4683;
var G__9684 = k4684;
var G__9685 = l4685;
var G__9686 = m4686;
var G__9687 = n4687;
var G__9688 = o4688;
var G__9689 = p4689;
var G__9690 = q4690;
var G__9691 = r4691;
var G__9692 = s4692;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__9674,G__9675,G__9676,G__9677,G__9678,G__9679,G__9680,G__9681,G__9682,G__9683,G__9684,G__9685,G__9686,G__9687,G__9688,G__9689,G__9690,G__9691,G__9692) : f.call(null,G__9674,G__9675,G__9676,G__9677,G__9678,G__9679,G__9680,G__9681,G__9682,G__9683,G__9684,G__9685,G__9686,G__9687,G__9688,G__9689,G__9690,G__9691,G__9692));
}
} else {
var t4693 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4674,b4675,c4676,d4677,e4678,f4679,g4680,h4681,i4682,j4683,k4684,l4685,m4686,n4687,o4688,p4689,q4690,r4691,s4692,t4693);
} else {
var G__9693 = a4674;
var G__9694 = b4675;
var G__9695 = c4676;
var G__9696 = d4677;
var G__9697 = e4678;
var G__9698 = f4679;
var G__9699 = g4680;
var G__9700 = h4681;
var G__9701 = i4682;
var G__9702 = j4683;
var G__9703 = k4684;
var G__9704 = l4685;
var G__9705 = m4686;
var G__9706 = n4687;
var G__9707 = o4688;
var G__9708 = p4689;
var G__9709 = q4690;
var G__9710 = r4691;
var G__9711 = s4692;
var G__9712 = t4693;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__9693,G__9694,G__9695,G__9696,G__9697,G__9698,G__9699,G__9700,G__9701,G__9702,G__9703,G__9704,G__9705,G__9706,G__9707,G__9708,G__9709,G__9710,G__9711,G__9712) : f.call(null,G__9693,G__9694,G__9695,G__9696,G__9697,G__9698,G__9699,G__9700,G__9701,G__9702,G__9703,G__9704,G__9705,G__9706,G__9707,G__9708,G__9709,G__9710,G__9711,G__9712));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__9713__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__9713 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__9714__i = 0, G__9714__a = new Array(arguments.length -  5);
while (G__9714__i < G__9714__a.length) {G__9714__a[G__9714__i] = arguments[G__9714__i + 5]; ++G__9714__i;}
  args = new cljs.core.IndexedSeq(G__9714__a,0);
} 
return G__9713__delegate.call(this,f,a,b,c,d,args);};
G__9713.cljs$lang$maxFixedArity = 5;
G__9713.cljs$lang$applyTo = (function (arglist__9715){
var f = cljs.core.first(arglist__9715);
arglist__9715 = cljs.core.next(arglist__9715);
var a = cljs.core.first(arglist__9715);
arglist__9715 = cljs.core.next(arglist__9715);
var b = cljs.core.first(arglist__9715);
arglist__9715 = cljs.core.next(arglist__9715);
var c = cljs.core.first(arglist__9715);
arglist__9715 = cljs.core.next(arglist__9715);
var d = cljs.core.first(arglist__9715);
var args = cljs.core.rest(arglist__9715);
return G__9713__delegate(f,a,b,c,d,args);
});
G__9713.cljs$core$IFn$_invoke$arity$variadic = G__9713__delegate;
return G__9713;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__9716 = null;
if (arguments.length > 5) {
var G__9717__i = 0, G__9717__a = new Array(arguments.length -  5);
while (G__9717__i < G__9717__a.length) {G__9717__a[G__9717__i] = arguments[G__9717__i + 5]; ++G__9717__i;}
G__9716 = new cljs.core.IndexedSeq(G__9717__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__9716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__9733 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9733) : f.call(null,G__9733));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__9734 = cljs.core.meta(obj);
var G__9735 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9734,G__9735) : f.call(null,G__9734,G__9735));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__9736 = cljs.core.meta(obj);
var G__9737 = a;
var G__9738 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9736,G__9737,G__9738) : f.call(null,G__9736,G__9737,G__9738));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__9739 = cljs.core.meta(obj);
var G__9740 = a;
var G__9741 = b;
var G__9742 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9739,G__9740,G__9741,G__9742) : f.call(null,G__9739,G__9740,G__9741,G__9742));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__9743 = cljs.core.meta(obj);
var G__9744 = a;
var G__9745 = b;
var G__9746 = c;
var G__9747 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9743,G__9744,G__9745,G__9746,G__9747) : f.call(null,G__9743,G__9744,G__9745,G__9746,G__9747));
})());
});
var vary_meta__7 = (function() { 
var G__9748__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__9748 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__9749__i = 0, G__9749__a = new Array(arguments.length -  6);
while (G__9749__i < G__9749__a.length) {G__9749__a[G__9749__i] = arguments[G__9749__i + 6]; ++G__9749__i;}
  args = new cljs.core.IndexedSeq(G__9749__a,0);
} 
return G__9748__delegate.call(this,obj,f,a,b,c,d,args);};
G__9748.cljs$lang$maxFixedArity = 6;
G__9748.cljs$lang$applyTo = (function (arglist__9750){
var obj = cljs.core.first(arglist__9750);
arglist__9750 = cljs.core.next(arglist__9750);
var f = cljs.core.first(arglist__9750);
arglist__9750 = cljs.core.next(arglist__9750);
var a = cljs.core.first(arglist__9750);
arglist__9750 = cljs.core.next(arglist__9750);
var b = cljs.core.first(arglist__9750);
arglist__9750 = cljs.core.next(arglist__9750);
var c = cljs.core.first(arglist__9750);
arglist__9750 = cljs.core.next(arglist__9750);
var d = cljs.core.first(arglist__9750);
var args = cljs.core.rest(arglist__9750);
return G__9748__delegate(obj,f,a,b,c,d,args);
});
G__9748.cljs$core$IFn$_invoke$arity$variadic = G__9748__delegate;
return G__9748;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__9751 = null;
if (arguments.length > 6) {
var G__9752__i = 0, G__9752__a = new Array(arguments.length -  6);
while (G__9752__i < G__9752__a.length) {G__9752__a[G__9752__i] = arguments[G__9752__i + 6]; ++G__9752__i;}
G__9751 = new cljs.core.IndexedSeq(G__9752__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__9751);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__9753__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__9753 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9754__i = 0, G__9754__a = new Array(arguments.length -  2);
while (G__9754__i < G__9754__a.length) {G__9754__a[G__9754__i] = arguments[G__9754__i + 2]; ++G__9754__i;}
  more = new cljs.core.IndexedSeq(G__9754__a,0);
} 
return G__9753__delegate.call(this,x,y,more);};
G__9753.cljs$lang$maxFixedArity = 2;
G__9753.cljs$lang$applyTo = (function (arglist__9755){
var x = cljs.core.first(arglist__9755);
arglist__9755 = cljs.core.next(arglist__9755);
var y = cljs.core.first(arglist__9755);
var more = cljs.core.rest(arglist__9755);
return G__9753__delegate(x,y,more);
});
G__9753.cljs$core$IFn$_invoke$arity$variadic = G__9753__delegate;
return G__9753;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__9756 = null;
if (arguments.length > 2) {
var G__9757__i = 0, G__9757__a = new Array(arguments.length -  2);
while (G__9757__i < G__9757__a.length) {G__9757__a[G__9757__i] = arguments[G__9757__i + 2]; ++G__9757__i;}
G__9756 = new cljs.core.IndexedSeq(G__9757__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t9761 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t9761 = (function (nil_iter,meta9762){
this.nil_iter = nil_iter;
this.meta9762 = meta9762;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t9761.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t9761.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t9761.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t9761.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_9763){
var self__ = this;
var _9763__$1 = this;
return self__.meta9762;
});

cljs.core.t9761.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_9763,meta9762__$1){
var self__ = this;
var _9763__$1 = this;
return (new cljs.core.t9761(self__.nil_iter,meta9762__$1));
});

cljs.core.t9761.cljs$lang$type = true;

cljs.core.t9761.cljs$lang$ctorStr = "cljs.core/t9761";

cljs.core.t9761.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/t9761");
});

cljs.core.__GT_t9761 = (function __GT_t9761(nil_iter__$1,meta9762){
return (new cljs.core.t9761(nil_iter__$1,meta9762));
});

}

return (new cljs.core.t9761(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"D:\\prog\\projects\\pure\\clojure\\shoplist\\resources\\public\\js\\out\\cljs\\core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3731__auto__ = !((lt.stepper == null));
if(and__3731__auto__){
return self__.iter.hasNext();
} else {
return and__3731__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__9764 = lt;
var G__9765 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__9764,G__9765) : self__.xform.call(null,G__9764,G__9765));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9766 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9766) : self__.xform.call(null,G__9766));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__9768 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9768) : xform.call(null,G__9768));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__9770 = cljs.core.next(iters__$1);
iters__$1 = G__9770;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4630__auto___9771 = self__.iters.length;
var i_9772 = (0);
while(true){
if((i_9772 < n__4630__auto___9771)){
(self__.nexts[i_9772] = (self__.iters[i_9772]).next());

var G__9773 = (i_9772 + (1));
i_9772 = G__9773;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3731__auto__ = !((lt.stepper == null));
if(and__3731__auto__){
return this$.hasNext();
} else {
return and__3731__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9769 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9769) : self__.xform.call(null,G__9769));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__9778 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9778) : xform.call(null,G__9778));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__9779_9783 = cljs.core.seq(colls);
var chunk__9780_9784 = null;
var count__9781_9785 = (0);
var i__9782_9786 = (0);
while(true){
if((i__9782_9786 < count__9781_9785)){
var coll_9787 = chunk__9780_9784.cljs$core$IIndexed$_nth$arity$2(null,i__9782_9786);
iters.push(cljs.core.iter(coll_9787));

var G__9788 = seq__9779_9783;
var G__9789 = chunk__9780_9784;
var G__9790 = count__9781_9785;
var G__9791 = (i__9782_9786 + (1));
seq__9779_9783 = G__9788;
chunk__9780_9784 = G__9789;
count__9781_9785 = G__9790;
i__9782_9786 = G__9791;
continue;
} else {
var temp__4126__auto___9792 = cljs.core.seq(seq__9779_9783);
if(temp__4126__auto___9792){
var seq__9779_9793__$1 = temp__4126__auto___9792;
if(cljs.core.chunked_seq_QMARK_(seq__9779_9793__$1)){
var c__4530__auto___9794 = cljs.core.chunk_first(seq__9779_9793__$1);
var G__9795 = cljs.core.chunk_rest(seq__9779_9793__$1);
var G__9796 = c__4530__auto___9794;
var G__9797 = cljs.core.count(c__4530__auto___9794);
var G__9798 = (0);
seq__9779_9783 = G__9795;
chunk__9780_9784 = G__9796;
count__9781_9785 = G__9797;
i__9782_9786 = G__9798;
continue;
} else {
var coll_9799 = cljs.core.first(seq__9779_9793__$1);
iters.push(cljs.core.iter(coll_9799));

var G__9800 = cljs.core.next(seq__9779_9793__$1);
var G__9801 = null;
var G__9802 = (0);
var G__9803 = (0);
seq__9779_9783 = G__9800;
chunk__9780_9784 = G__9801;
count__9781_9785 = G__9802;
i__9782_9786 = G__9803;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3743__auto__ = cljs.core.seq(coll);
if(or__3743__auto__){
return or__3743__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__9804__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__9804 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9805__i = 0, G__9805__a = new Array(arguments.length -  2);
while (G__9805__i < G__9805__a.length) {G__9805__a[G__9805__i] = arguments[G__9805__i + 2]; ++G__9805__i;}
  colls = new cljs.core.IndexedSeq(G__9805__a,0);
} 
return G__9804__delegate.call(this,xform,coll,colls);};
G__9804.cljs$lang$maxFixedArity = 2;
G__9804.cljs$lang$applyTo = (function (arglist__9806){
var xform = cljs.core.first(arglist__9806);
arglist__9806 = cljs.core.next(arglist__9806);
var coll = cljs.core.first(arglist__9806);
var colls = cljs.core.rest(arglist__9806);
return G__9804__delegate(xform,coll,colls);
});
G__9804.cljs$core$IFn$_invoke$arity$variadic = G__9804__delegate;
return G__9804;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__9807 = null;
if (arguments.length > 2) {
var G__9808__i = 0, G__9808__a = new Array(arguments.length -  2);
while (G__9808__i < G__9808__a.length) {G__9808__a[G__9808__i] = arguments[G__9808__i + 2]; ++G__9808__i;}
G__9807 = new cljs.core.IndexedSeq(G__9808__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__9807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__9810 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9810) : pred.call(null,G__9810));
})())){
var G__9811 = pred;
var G__9812 = cljs.core.next(coll);
pred = G__9811;
coll = G__9812;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3743__auto__ = (function (){var G__9816 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9816) : pred.call(null,G__9816));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__9817 = pred;
var G__9818 = cljs.core.next(coll);
pred = G__9817;
coll = G__9818;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__9825 = null;
var G__9825__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__9825__1 = (function (x){
return cljs.core.not((function (){var G__9822 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9822) : f.call(null,G__9822));
})());
});
var G__9825__2 = (function (x,y){
return cljs.core.not((function (){var G__9823 = x;
var G__9824 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9823,G__9824) : f.call(null,G__9823,G__9824));
})());
});
var G__9825__3 = (function() { 
var G__9826__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__9826 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9827__i = 0, G__9827__a = new Array(arguments.length -  2);
while (G__9827__i < G__9827__a.length) {G__9827__a[G__9827__i] = arguments[G__9827__i + 2]; ++G__9827__i;}
  zs = new cljs.core.IndexedSeq(G__9827__a,0);
} 
return G__9826__delegate.call(this,x,y,zs);};
G__9826.cljs$lang$maxFixedArity = 2;
G__9826.cljs$lang$applyTo = (function (arglist__9828){
var x = cljs.core.first(arglist__9828);
arglist__9828 = cljs.core.next(arglist__9828);
var y = cljs.core.first(arglist__9828);
var zs = cljs.core.rest(arglist__9828);
return G__9826__delegate(x,y,zs);
});
G__9826.cljs$core$IFn$_invoke$arity$variadic = G__9826__delegate;
return G__9826;
})()
;
G__9825 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__9825__0.call(this);
case 1:
return G__9825__1.call(this,x);
case 2:
return G__9825__2.call(this,x,y);
default:
var G__9829 = null;
if (arguments.length > 2) {
var G__9830__i = 0, G__9830__a = new Array(arguments.length -  2);
while (G__9830__i < G__9830__a.length) {G__9830__a[G__9830__i] = arguments[G__9830__i + 2]; ++G__9830__i;}
G__9829 = new cljs.core.IndexedSeq(G__9830__a,0);
}
return G__9825__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9829);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9825.cljs$lang$maxFixedArity = 2;
G__9825.cljs$lang$applyTo = G__9825__3.cljs$lang$applyTo;
G__9825.cljs$core$IFn$_invoke$arity$0 = G__9825__0;
G__9825.cljs$core$IFn$_invoke$arity$1 = G__9825__1;
G__9825.cljs$core$IFn$_invoke$arity$2 = G__9825__2;
G__9825.cljs$core$IFn$_invoke$arity$variadic = G__9825__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9825;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__9831__delegate = function (args){
return x;
};
var G__9831 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9832__i = 0, G__9832__a = new Array(arguments.length -  0);
while (G__9832__i < G__9832__a.length) {G__9832__a[G__9832__i] = arguments[G__9832__i + 0]; ++G__9832__i;}
  args = new cljs.core.IndexedSeq(G__9832__a,0);
} 
return G__9831__delegate.call(this,args);};
G__9831.cljs$lang$maxFixedArity = 0;
G__9831.cljs$lang$applyTo = (function (arglist__9833){
var args = cljs.core.seq(arglist__9833);
return G__9831__delegate(args);
});
G__9831.cljs$core$IFn$_invoke$arity$variadic = G__9831__delegate;
return G__9831;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__9888 = null;
var G__9888__0 = (function (){
var G__9861 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9861) : f.call(null,G__9861));
});
var G__9888__1 = (function (x){
var G__9862 = (function (){var G__9863 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9863) : g.call(null,G__9863));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9862) : f.call(null,G__9862));
});
var G__9888__2 = (function (x,y){
var G__9864 = (function (){var G__9865 = x;
var G__9866 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9865,G__9866) : g.call(null,G__9865,G__9866));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9864) : f.call(null,G__9864));
});
var G__9888__3 = (function (x,y,z){
var G__9867 = (function (){var G__9868 = x;
var G__9869 = y;
var G__9870 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9868,G__9869,G__9870) : g.call(null,G__9868,G__9869,G__9870));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9867) : f.call(null,G__9867));
});
var G__9888__4 = (function() { 
var G__9889__delegate = function (x,y,z,args){
var G__9871 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9871) : f.call(null,G__9871));
};
var G__9889 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9890__i = 0, G__9890__a = new Array(arguments.length -  3);
while (G__9890__i < G__9890__a.length) {G__9890__a[G__9890__i] = arguments[G__9890__i + 3]; ++G__9890__i;}
  args = new cljs.core.IndexedSeq(G__9890__a,0);
} 
return G__9889__delegate.call(this,x,y,z,args);};
G__9889.cljs$lang$maxFixedArity = 3;
G__9889.cljs$lang$applyTo = (function (arglist__9891){
var x = cljs.core.first(arglist__9891);
arglist__9891 = cljs.core.next(arglist__9891);
var y = cljs.core.first(arglist__9891);
arglist__9891 = cljs.core.next(arglist__9891);
var z = cljs.core.first(arglist__9891);
var args = cljs.core.rest(arglist__9891);
return G__9889__delegate(x,y,z,args);
});
G__9889.cljs$core$IFn$_invoke$arity$variadic = G__9889__delegate;
return G__9889;
})()
;
G__9888 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9888__0.call(this);
case 1:
return G__9888__1.call(this,x);
case 2:
return G__9888__2.call(this,x,y);
case 3:
return G__9888__3.call(this,x,y,z);
default:
var G__9892 = null;
if (arguments.length > 3) {
var G__9893__i = 0, G__9893__a = new Array(arguments.length -  3);
while (G__9893__i < G__9893__a.length) {G__9893__a[G__9893__i] = arguments[G__9893__i + 3]; ++G__9893__i;}
G__9892 = new cljs.core.IndexedSeq(G__9893__a,0);
}
return G__9888__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9888.cljs$lang$maxFixedArity = 3;
G__9888.cljs$lang$applyTo = G__9888__4.cljs$lang$applyTo;
G__9888.cljs$core$IFn$_invoke$arity$0 = G__9888__0;
G__9888.cljs$core$IFn$_invoke$arity$1 = G__9888__1;
G__9888.cljs$core$IFn$_invoke$arity$2 = G__9888__2;
G__9888.cljs$core$IFn$_invoke$arity$3 = G__9888__3;
G__9888.cljs$core$IFn$_invoke$arity$variadic = G__9888__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9888;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__9894 = null;
var G__9894__0 = (function (){
var G__9872 = (function (){var G__9873 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9873) : g.call(null,G__9873));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9872) : f.call(null,G__9872));
});
var G__9894__1 = (function (x){
var G__9874 = (function (){var G__9875 = (function (){var G__9876 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9876) : h.call(null,G__9876));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9875) : g.call(null,G__9875));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9874) : f.call(null,G__9874));
});
var G__9894__2 = (function (x,y){
var G__9877 = (function (){var G__9878 = (function (){var G__9879 = x;
var G__9880 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9879,G__9880) : h.call(null,G__9879,G__9880));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9878) : g.call(null,G__9878));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9877) : f.call(null,G__9877));
});
var G__9894__3 = (function (x,y,z){
var G__9881 = (function (){var G__9882 = (function (){var G__9883 = x;
var G__9884 = y;
var G__9885 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9883,G__9884,G__9885) : h.call(null,G__9883,G__9884,G__9885));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9882) : g.call(null,G__9882));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9881) : f.call(null,G__9881));
});
var G__9894__4 = (function() { 
var G__9895__delegate = function (x,y,z,args){
var G__9886 = (function (){var G__9887 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9887) : g.call(null,G__9887));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9886) : f.call(null,G__9886));
};
var G__9895 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9896__i = 0, G__9896__a = new Array(arguments.length -  3);
while (G__9896__i < G__9896__a.length) {G__9896__a[G__9896__i] = arguments[G__9896__i + 3]; ++G__9896__i;}
  args = new cljs.core.IndexedSeq(G__9896__a,0);
} 
return G__9895__delegate.call(this,x,y,z,args);};
G__9895.cljs$lang$maxFixedArity = 3;
G__9895.cljs$lang$applyTo = (function (arglist__9897){
var x = cljs.core.first(arglist__9897);
arglist__9897 = cljs.core.next(arglist__9897);
var y = cljs.core.first(arglist__9897);
arglist__9897 = cljs.core.next(arglist__9897);
var z = cljs.core.first(arglist__9897);
var args = cljs.core.rest(arglist__9897);
return G__9895__delegate(x,y,z,args);
});
G__9895.cljs$core$IFn$_invoke$arity$variadic = G__9895__delegate;
return G__9895;
})()
;
G__9894 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9894__0.call(this);
case 1:
return G__9894__1.call(this,x);
case 2:
return G__9894__2.call(this,x,y);
case 3:
return G__9894__3.call(this,x,y,z);
default:
var G__9898 = null;
if (arguments.length > 3) {
var G__9899__i = 0, G__9899__a = new Array(arguments.length -  3);
while (G__9899__i < G__9899__a.length) {G__9899__a[G__9899__i] = arguments[G__9899__i + 3]; ++G__9899__i;}
G__9898 = new cljs.core.IndexedSeq(G__9899__a,0);
}
return G__9894__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9894.cljs$lang$maxFixedArity = 3;
G__9894.cljs$lang$applyTo = G__9894__4.cljs$lang$applyTo;
G__9894.cljs$core$IFn$_invoke$arity$0 = G__9894__0;
G__9894.cljs$core$IFn$_invoke$arity$1 = G__9894__1;
G__9894.cljs$core$IFn$_invoke$arity$2 = G__9894__2;
G__9894.cljs$core$IFn$_invoke$arity$3 = G__9894__3;
G__9894.cljs$core$IFn$_invoke$arity$variadic = G__9894__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9894;
})()
});
var comp__4 = (function() { 
var G__9900__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__9901__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__9902 = cljs.core.first(fs__$2).call(null,ret);
var G__9903 = cljs.core.next(fs__$2);
ret = G__9902;
fs__$2 = G__9903;
continue;
} else {
return ret;
}
break;
}
};
var G__9901 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9904__i = 0, G__9904__a = new Array(arguments.length -  0);
while (G__9904__i < G__9904__a.length) {G__9904__a[G__9904__i] = arguments[G__9904__i + 0]; ++G__9904__i;}
  args = new cljs.core.IndexedSeq(G__9904__a,0);
} 
return G__9901__delegate.call(this,args);};
G__9901.cljs$lang$maxFixedArity = 0;
G__9901.cljs$lang$applyTo = (function (arglist__9905){
var args = cljs.core.seq(arglist__9905);
return G__9901__delegate(args);
});
G__9901.cljs$core$IFn$_invoke$arity$variadic = G__9901__delegate;
return G__9901;
})()
;
;})(fs__$1))
};
var G__9900 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9906__i = 0, G__9906__a = new Array(arguments.length -  3);
while (G__9906__i < G__9906__a.length) {G__9906__a[G__9906__i] = arguments[G__9906__i + 3]; ++G__9906__i;}
  fs = new cljs.core.IndexedSeq(G__9906__a,0);
} 
return G__9900__delegate.call(this,f1,f2,f3,fs);};
G__9900.cljs$lang$maxFixedArity = 3;
G__9900.cljs$lang$applyTo = (function (arglist__9907){
var f1 = cljs.core.first(arglist__9907);
arglist__9907 = cljs.core.next(arglist__9907);
var f2 = cljs.core.first(arglist__9907);
arglist__9907 = cljs.core.next(arglist__9907);
var f3 = cljs.core.first(arglist__9907);
var fs = cljs.core.rest(arglist__9907);
return G__9900__delegate(f1,f2,f3,fs);
});
G__9900.cljs$core$IFn$_invoke$arity$variadic = G__9900__delegate;
return G__9900;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__9908 = null;
if (arguments.length > 3) {
var G__9909__i = 0, G__9909__a = new Array(arguments.length -  3);
while (G__9909__i < G__9909__a.length) {G__9909__a[G__9909__i] = arguments[G__9909__i + 3]; ++G__9909__i;}
G__9908 = new cljs.core.IndexedSeq(G__9909__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__9908);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__9994 = null;
var G__9994__0 = (function (){
var G__9952 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9952) : f.call(null,G__9952));
});
var G__9994__1 = (function (x){
var G__9953 = arg1;
var G__9954 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9953,G__9954) : f.call(null,G__9953,G__9954));
});
var G__9994__2 = (function (x,y){
var G__9955 = arg1;
var G__9956 = x;
var G__9957 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9955,G__9956,G__9957) : f.call(null,G__9955,G__9956,G__9957));
});
var G__9994__3 = (function (x,y,z){
var G__9958 = arg1;
var G__9959 = x;
var G__9960 = y;
var G__9961 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9958,G__9959,G__9960,G__9961) : f.call(null,G__9958,G__9959,G__9960,G__9961));
});
var G__9994__4 = (function() { 
var G__9995__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__9995 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9996__i = 0, G__9996__a = new Array(arguments.length -  3);
while (G__9996__i < G__9996__a.length) {G__9996__a[G__9996__i] = arguments[G__9996__i + 3]; ++G__9996__i;}
  args = new cljs.core.IndexedSeq(G__9996__a,0);
} 
return G__9995__delegate.call(this,x,y,z,args);};
G__9995.cljs$lang$maxFixedArity = 3;
G__9995.cljs$lang$applyTo = (function (arglist__9997){
var x = cljs.core.first(arglist__9997);
arglist__9997 = cljs.core.next(arglist__9997);
var y = cljs.core.first(arglist__9997);
arglist__9997 = cljs.core.next(arglist__9997);
var z = cljs.core.first(arglist__9997);
var args = cljs.core.rest(arglist__9997);
return G__9995__delegate(x,y,z,args);
});
G__9995.cljs$core$IFn$_invoke$arity$variadic = G__9995__delegate;
return G__9995;
})()
;
G__9994 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9994__0.call(this);
case 1:
return G__9994__1.call(this,x);
case 2:
return G__9994__2.call(this,x,y);
case 3:
return G__9994__3.call(this,x,y,z);
default:
var G__9998 = null;
if (arguments.length > 3) {
var G__9999__i = 0, G__9999__a = new Array(arguments.length -  3);
while (G__9999__i < G__9999__a.length) {G__9999__a[G__9999__i] = arguments[G__9999__i + 3]; ++G__9999__i;}
G__9998 = new cljs.core.IndexedSeq(G__9999__a,0);
}
return G__9994__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9998);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9994.cljs$lang$maxFixedArity = 3;
G__9994.cljs$lang$applyTo = G__9994__4.cljs$lang$applyTo;
G__9994.cljs$core$IFn$_invoke$arity$0 = G__9994__0;
G__9994.cljs$core$IFn$_invoke$arity$1 = G__9994__1;
G__9994.cljs$core$IFn$_invoke$arity$2 = G__9994__2;
G__9994.cljs$core$IFn$_invoke$arity$3 = G__9994__3;
G__9994.cljs$core$IFn$_invoke$arity$variadic = G__9994__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9994;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__10000 = null;
var G__10000__0 = (function (){
var G__9962 = arg1;
var G__9963 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9962,G__9963) : f.call(null,G__9962,G__9963));
});
var G__10000__1 = (function (x){
var G__9964 = arg1;
var G__9965 = arg2;
var G__9966 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9964,G__9965,G__9966) : f.call(null,G__9964,G__9965,G__9966));
});
var G__10000__2 = (function (x,y){
var G__9967 = arg1;
var G__9968 = arg2;
var G__9969 = x;
var G__9970 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9967,G__9968,G__9969,G__9970) : f.call(null,G__9967,G__9968,G__9969,G__9970));
});
var G__10000__3 = (function (x,y,z){
var G__9971 = arg1;
var G__9972 = arg2;
var G__9973 = x;
var G__9974 = y;
var G__9975 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9971,G__9972,G__9973,G__9974,G__9975) : f.call(null,G__9971,G__9972,G__9973,G__9974,G__9975));
});
var G__10000__4 = (function() { 
var G__10001__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__10001 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10002__i = 0, G__10002__a = new Array(arguments.length -  3);
while (G__10002__i < G__10002__a.length) {G__10002__a[G__10002__i] = arguments[G__10002__i + 3]; ++G__10002__i;}
  args = new cljs.core.IndexedSeq(G__10002__a,0);
} 
return G__10001__delegate.call(this,x,y,z,args);};
G__10001.cljs$lang$maxFixedArity = 3;
G__10001.cljs$lang$applyTo = (function (arglist__10003){
var x = cljs.core.first(arglist__10003);
arglist__10003 = cljs.core.next(arglist__10003);
var y = cljs.core.first(arglist__10003);
arglist__10003 = cljs.core.next(arglist__10003);
var z = cljs.core.first(arglist__10003);
var args = cljs.core.rest(arglist__10003);
return G__10001__delegate(x,y,z,args);
});
G__10001.cljs$core$IFn$_invoke$arity$variadic = G__10001__delegate;
return G__10001;
})()
;
G__10000 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10000__0.call(this);
case 1:
return G__10000__1.call(this,x);
case 2:
return G__10000__2.call(this,x,y);
case 3:
return G__10000__3.call(this,x,y,z);
default:
var G__10004 = null;
if (arguments.length > 3) {
var G__10005__i = 0, G__10005__a = new Array(arguments.length -  3);
while (G__10005__i < G__10005__a.length) {G__10005__a[G__10005__i] = arguments[G__10005__i + 3]; ++G__10005__i;}
G__10004 = new cljs.core.IndexedSeq(G__10005__a,0);
}
return G__10000__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10000.cljs$lang$maxFixedArity = 3;
G__10000.cljs$lang$applyTo = G__10000__4.cljs$lang$applyTo;
G__10000.cljs$core$IFn$_invoke$arity$0 = G__10000__0;
G__10000.cljs$core$IFn$_invoke$arity$1 = G__10000__1;
G__10000.cljs$core$IFn$_invoke$arity$2 = G__10000__2;
G__10000.cljs$core$IFn$_invoke$arity$3 = G__10000__3;
G__10000.cljs$core$IFn$_invoke$arity$variadic = G__10000__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10000;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__10006 = null;
var G__10006__0 = (function (){
var G__9976 = arg1;
var G__9977 = arg2;
var G__9978 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9976,G__9977,G__9978) : f.call(null,G__9976,G__9977,G__9978));
});
var G__10006__1 = (function (x){
var G__9979 = arg1;
var G__9980 = arg2;
var G__9981 = arg3;
var G__9982 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9979,G__9980,G__9981,G__9982) : f.call(null,G__9979,G__9980,G__9981,G__9982));
});
var G__10006__2 = (function (x,y){
var G__9983 = arg1;
var G__9984 = arg2;
var G__9985 = arg3;
var G__9986 = x;
var G__9987 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9983,G__9984,G__9985,G__9986,G__9987) : f.call(null,G__9983,G__9984,G__9985,G__9986,G__9987));
});
var G__10006__3 = (function (x,y,z){
var G__9988 = arg1;
var G__9989 = arg2;
var G__9990 = arg3;
var G__9991 = x;
var G__9992 = y;
var G__9993 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9988,G__9989,G__9990,G__9991,G__9992,G__9993) : f.call(null,G__9988,G__9989,G__9990,G__9991,G__9992,G__9993));
});
var G__10006__4 = (function() { 
var G__10007__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__10007 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10008__i = 0, G__10008__a = new Array(arguments.length -  3);
while (G__10008__i < G__10008__a.length) {G__10008__a[G__10008__i] = arguments[G__10008__i + 3]; ++G__10008__i;}
  args = new cljs.core.IndexedSeq(G__10008__a,0);
} 
return G__10007__delegate.call(this,x,y,z,args);};
G__10007.cljs$lang$maxFixedArity = 3;
G__10007.cljs$lang$applyTo = (function (arglist__10009){
var x = cljs.core.first(arglist__10009);
arglist__10009 = cljs.core.next(arglist__10009);
var y = cljs.core.first(arglist__10009);
arglist__10009 = cljs.core.next(arglist__10009);
var z = cljs.core.first(arglist__10009);
var args = cljs.core.rest(arglist__10009);
return G__10007__delegate(x,y,z,args);
});
G__10007.cljs$core$IFn$_invoke$arity$variadic = G__10007__delegate;
return G__10007;
})()
;
G__10006 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10006__0.call(this);
case 1:
return G__10006__1.call(this,x);
case 2:
return G__10006__2.call(this,x,y);
case 3:
return G__10006__3.call(this,x,y,z);
default:
var G__10010 = null;
if (arguments.length > 3) {
var G__10011__i = 0, G__10011__a = new Array(arguments.length -  3);
while (G__10011__i < G__10011__a.length) {G__10011__a[G__10011__i] = arguments[G__10011__i + 3]; ++G__10011__i;}
G__10010 = new cljs.core.IndexedSeq(G__10011__a,0);
}
return G__10006__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10006.cljs$lang$maxFixedArity = 3;
G__10006.cljs$lang$applyTo = G__10006__4.cljs$lang$applyTo;
G__10006.cljs$core$IFn$_invoke$arity$0 = G__10006__0;
G__10006.cljs$core$IFn$_invoke$arity$1 = G__10006__1;
G__10006.cljs$core$IFn$_invoke$arity$2 = G__10006__2;
G__10006.cljs$core$IFn$_invoke$arity$3 = G__10006__3;
G__10006.cljs$core$IFn$_invoke$arity$variadic = G__10006__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10006;
})()
});
var partial__5 = (function() { 
var G__10012__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__10013__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__10013 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10014__i = 0, G__10014__a = new Array(arguments.length -  0);
while (G__10014__i < G__10014__a.length) {G__10014__a[G__10014__i] = arguments[G__10014__i + 0]; ++G__10014__i;}
  args = new cljs.core.IndexedSeq(G__10014__a,0);
} 
return G__10013__delegate.call(this,args);};
G__10013.cljs$lang$maxFixedArity = 0;
G__10013.cljs$lang$applyTo = (function (arglist__10015){
var args = cljs.core.seq(arglist__10015);
return G__10013__delegate(args);
});
G__10013.cljs$core$IFn$_invoke$arity$variadic = G__10013__delegate;
return G__10013;
})()
;
};
var G__10012 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__10016__i = 0, G__10016__a = new Array(arguments.length -  4);
while (G__10016__i < G__10016__a.length) {G__10016__a[G__10016__i] = arguments[G__10016__i + 4]; ++G__10016__i;}
  more = new cljs.core.IndexedSeq(G__10016__a,0);
} 
return G__10012__delegate.call(this,f,arg1,arg2,arg3,more);};
G__10012.cljs$lang$maxFixedArity = 4;
G__10012.cljs$lang$applyTo = (function (arglist__10017){
var f = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var arg1 = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var arg2 = cljs.core.first(arglist__10017);
arglist__10017 = cljs.core.next(arglist__10017);
var arg3 = cljs.core.first(arglist__10017);
var more = cljs.core.rest(arglist__10017);
return G__10012__delegate(f,arg1,arg2,arg3,more);
});
G__10012.cljs$core$IFn$_invoke$arity$variadic = G__10012__delegate;
return G__10012;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__10018 = null;
if (arguments.length > 4) {
var G__10019__i = 0, G__10019__a = new Array(arguments.length -  4);
while (G__10019__i < G__10019__a.length) {G__10019__a[G__10019__i] = arguments[G__10019__i + 4]; ++G__10019__i;}
G__10018 = new cljs.core.IndexedSeq(G__10019__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__10018);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__10052 = null;
var G__10052__1 = (function (a){
var G__10036 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10036) : f.call(null,G__10036));
});
var G__10052__2 = (function (a,b){
var G__10037 = (((a == null))?x:a);
var G__10038 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10037,G__10038) : f.call(null,G__10037,G__10038));
});
var G__10052__3 = (function (a,b,c){
var G__10039 = (((a == null))?x:a);
var G__10040 = b;
var G__10041 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10039,G__10040,G__10041) : f.call(null,G__10039,G__10040,G__10041));
});
var G__10052__4 = (function() { 
var G__10053__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__10053 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__10054__i = 0, G__10054__a = new Array(arguments.length -  3);
while (G__10054__i < G__10054__a.length) {G__10054__a[G__10054__i] = arguments[G__10054__i + 3]; ++G__10054__i;}
  ds = new cljs.core.IndexedSeq(G__10054__a,0);
} 
return G__10053__delegate.call(this,a,b,c,ds);};
G__10053.cljs$lang$maxFixedArity = 3;
G__10053.cljs$lang$applyTo = (function (arglist__10055){
var a = cljs.core.first(arglist__10055);
arglist__10055 = cljs.core.next(arglist__10055);
var b = cljs.core.first(arglist__10055);
arglist__10055 = cljs.core.next(arglist__10055);
var c = cljs.core.first(arglist__10055);
var ds = cljs.core.rest(arglist__10055);
return G__10053__delegate(a,b,c,ds);
});
G__10053.cljs$core$IFn$_invoke$arity$variadic = G__10053__delegate;
return G__10053;
})()
;
G__10052 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__10052__1.call(this,a);
case 2:
return G__10052__2.call(this,a,b);
case 3:
return G__10052__3.call(this,a,b,c);
default:
var G__10056 = null;
if (arguments.length > 3) {
var G__10057__i = 0, G__10057__a = new Array(arguments.length -  3);
while (G__10057__i < G__10057__a.length) {G__10057__a[G__10057__i] = arguments[G__10057__i + 3]; ++G__10057__i;}
G__10056 = new cljs.core.IndexedSeq(G__10057__a,0);
}
return G__10052__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__10056);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10052.cljs$lang$maxFixedArity = 3;
G__10052.cljs$lang$applyTo = G__10052__4.cljs$lang$applyTo;
G__10052.cljs$core$IFn$_invoke$arity$1 = G__10052__1;
G__10052.cljs$core$IFn$_invoke$arity$2 = G__10052__2;
G__10052.cljs$core$IFn$_invoke$arity$3 = G__10052__3;
G__10052.cljs$core$IFn$_invoke$arity$variadic = G__10052__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10052;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__10058 = null;
var G__10058__2 = (function (a,b){
var G__10042 = (((a == null))?x:a);
var G__10043 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10042,G__10043) : f.call(null,G__10042,G__10043));
});
var G__10058__3 = (function (a,b,c){
var G__10044 = (((a == null))?x:a);
var G__10045 = (((b == null))?y:b);
var G__10046 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10044,G__10045,G__10046) : f.call(null,G__10044,G__10045,G__10046));
});
var G__10058__4 = (function() { 
var G__10059__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__10059 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__10060__i = 0, G__10060__a = new Array(arguments.length -  3);
while (G__10060__i < G__10060__a.length) {G__10060__a[G__10060__i] = arguments[G__10060__i + 3]; ++G__10060__i;}
  ds = new cljs.core.IndexedSeq(G__10060__a,0);
} 
return G__10059__delegate.call(this,a,b,c,ds);};
G__10059.cljs$lang$maxFixedArity = 3;
G__10059.cljs$lang$applyTo = (function (arglist__10061){
var a = cljs.core.first(arglist__10061);
arglist__10061 = cljs.core.next(arglist__10061);
var b = cljs.core.first(arglist__10061);
arglist__10061 = cljs.core.next(arglist__10061);
var c = cljs.core.first(arglist__10061);
var ds = cljs.core.rest(arglist__10061);
return G__10059__delegate(a,b,c,ds);
});
G__10059.cljs$core$IFn$_invoke$arity$variadic = G__10059__delegate;
return G__10059;
})()
;
G__10058 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__10058__2.call(this,a,b);
case 3:
return G__10058__3.call(this,a,b,c);
default:
var G__10062 = null;
if (arguments.length > 3) {
var G__10063__i = 0, G__10063__a = new Array(arguments.length -  3);
while (G__10063__i < G__10063__a.length) {G__10063__a[G__10063__i] = arguments[G__10063__i + 3]; ++G__10063__i;}
G__10062 = new cljs.core.IndexedSeq(G__10063__a,0);
}
return G__10058__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__10062);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10058.cljs$lang$maxFixedArity = 3;
G__10058.cljs$lang$applyTo = G__10058__4.cljs$lang$applyTo;
G__10058.cljs$core$IFn$_invoke$arity$2 = G__10058__2;
G__10058.cljs$core$IFn$_invoke$arity$3 = G__10058__3;
G__10058.cljs$core$IFn$_invoke$arity$variadic = G__10058__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10058;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__10064 = null;
var G__10064__2 = (function (a,b){
var G__10047 = (((a == null))?x:a);
var G__10048 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10047,G__10048) : f.call(null,G__10047,G__10048));
});
var G__10064__3 = (function (a,b,c){
var G__10049 = (((a == null))?x:a);
var G__10050 = (((b == null))?y:b);
var G__10051 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10049,G__10050,G__10051) : f.call(null,G__10049,G__10050,G__10051));
});
var G__10064__4 = (function() { 
var G__10065__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__10065 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__10066__i = 0, G__10066__a = new Array(arguments.length -  3);
while (G__10066__i < G__10066__a.length) {G__10066__a[G__10066__i] = arguments[G__10066__i + 3]; ++G__10066__i;}
  ds = new cljs.core.IndexedSeq(G__10066__a,0);
} 
return G__10065__delegate.call(this,a,b,c,ds);};
G__10065.cljs$lang$maxFixedArity = 3;
G__10065.cljs$lang$applyTo = (function (arglist__10067){
var a = cljs.core.first(arglist__10067);
arglist__10067 = cljs.core.next(arglist__10067);
var b = cljs.core.first(arglist__10067);
arglist__10067 = cljs.core.next(arglist__10067);
var c = cljs.core.first(arglist__10067);
var ds = cljs.core.rest(arglist__10067);
return G__10065__delegate(a,b,c,ds);
});
G__10065.cljs$core$IFn$_invoke$arity$variadic = G__10065__delegate;
return G__10065;
})()
;
G__10064 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__10064__2.call(this,a,b);
case 3:
return G__10064__3.call(this,a,b,c);
default:
var G__10068 = null;
if (arguments.length > 3) {
var G__10069__i = 0, G__10069__a = new Array(arguments.length -  3);
while (G__10069__i < G__10069__a.length) {G__10069__a[G__10069__i] = arguments[G__10069__i + 3]; ++G__10069__i;}
G__10068 = new cljs.core.IndexedSeq(G__10069__a,0);
}
return G__10064__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__10068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10064.cljs$lang$maxFixedArity = 3;
G__10064.cljs$lang$applyTo = G__10064__4.cljs$lang$applyTo;
G__10064.cljs$core$IFn$_invoke$arity$2 = G__10064__2;
G__10064.cljs$core$IFn$_invoke$arity$3 = G__10064__3;
G__10064.cljs$core$IFn$_invoke$arity$variadic = G__10064__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10064;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___10118 = size;
var i_10119 = (0);
while(true){
if((i_10119 < n__4630__auto___10118)){
cljs.core.chunk_append(b,(function (){var G__10114 = (idx + i_10119);
var G__10115 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10119);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10114,G__10115) : f.call(null,G__10114,G__10115));
})());

var G__10120 = (i_10119 + (1));
i_10119 = G__10120;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__10116 = idx;
var G__10117 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10116,G__10117) : f.call(null,G__10116,G__10117));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__10139 = null;
var G__10139__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10139__1 = (function (result){
var G__10133 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10133) : rf.call(null,G__10133));
});
var G__10139__2 = (function (result,input){
var v = (function (){var G__10134 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10134) : f.call(null,G__10134));
})();
if((v == null)){
return result;
} else {
var G__10135 = result;
var G__10136 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10135,G__10136) : rf.call(null,G__10135,G__10136));
}
});
G__10139 = function(result,input){
switch(arguments.length){
case 0:
return G__10139__0.call(this);
case 1:
return G__10139__1.call(this,result);
case 2:
return G__10139__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10139.cljs$core$IFn$_invoke$arity$0 = G__10139__0;
G__10139.cljs$core$IFn$_invoke$arity$1 = G__10139__1;
G__10139.cljs$core$IFn$_invoke$arity$2 = G__10139__2;
return G__10139;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___10140 = size;
var i_10141 = (0);
while(true){
if((i_10141 < n__4630__auto___10140)){
var x_10142 = (function (){var G__10137 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10141);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10137) : f.call(null,G__10137));
})();
if((x_10142 == null)){
} else {
cljs.core.chunk_append(b,x_10142);
}

var G__10143 = (i_10141 + (1));
i_10141 = G__10143;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__10138 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10138) : f.call(null,G__10138));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10144 = this$__$1;
return goog.getUid(G__10144);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__10145 = cljs.core.seq(self__.watches);
var chunk__10146 = null;
var count__10147 = (0);
var i__10148 = (0);
while(true){
if((i__10148 < count__10147)){
var vec__10149 = chunk__10146.cljs$core$IIndexed$_nth$arity$2(null,i__10148);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10149,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10149,(1),null);
var G__10150_10159 = key;
var G__10151_10160 = this$__$1;
var G__10152_10161 = oldval;
var G__10153_10162 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10150_10159,G__10151_10160,G__10152_10161,G__10153_10162) : f.call(null,G__10150_10159,G__10151_10160,G__10152_10161,G__10153_10162));

var G__10163 = seq__10145;
var G__10164 = chunk__10146;
var G__10165 = count__10147;
var G__10166 = (i__10148 + (1));
seq__10145 = G__10163;
chunk__10146 = G__10164;
count__10147 = G__10165;
i__10148 = G__10166;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10145);
if(temp__4126__auto__){
var seq__10145__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10145__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__10145__$1);
var G__10167 = cljs.core.chunk_rest(seq__10145__$1);
var G__10168 = c__4530__auto__;
var G__10169 = cljs.core.count(c__4530__auto__);
var G__10170 = (0);
seq__10145 = G__10167;
chunk__10146 = G__10168;
count__10147 = G__10169;
i__10148 = G__10170;
continue;
} else {
var vec__10154 = cljs.core.first(seq__10145__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10154,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10154,(1),null);
var G__10155_10171 = key;
var G__10156_10172 = this$__$1;
var G__10157_10173 = oldval;
var G__10158_10174 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10155_10171,G__10156_10172,G__10157_10173,G__10158_10174) : f.call(null,G__10155_10171,G__10156_10172,G__10157_10173,G__10158_10174));

var G__10175 = cljs.core.next(seq__10145__$1);
var G__10176 = null;
var G__10177 = (0);
var G__10178 = (0);
seq__10145 = G__10175;
chunk__10146 = G__10176;
count__10147 = G__10177;
i__10148 = G__10178;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__10182__delegate = function (x,p__10179){
var map__10181 = p__10179;
var map__10181__$1 = ((cljs.core.seq_QMARK_(map__10181))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10181):map__10181);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10181__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10181__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__10182 = function (x,var_args){
var p__10179 = null;
if (arguments.length > 1) {
var G__10183__i = 0, G__10183__a = new Array(arguments.length -  1);
while (G__10183__i < G__10183__a.length) {G__10183__a[G__10183__i] = arguments[G__10183__i + 1]; ++G__10183__i;}
  p__10179 = new cljs.core.IndexedSeq(G__10183__a,0);
} 
return G__10182__delegate.call(this,x,p__10179);};
G__10182.cljs$lang$maxFixedArity = 1;
G__10182.cljs$lang$applyTo = (function (arglist__10184){
var x = cljs.core.first(arglist__10184);
var p__10179 = cljs.core.rest(arglist__10184);
return G__10182__delegate(x,p__10179);
});
G__10182.cljs$core$IFn$_invoke$arity$variadic = G__10182__delegate;
return G__10182;
})()
;
atom = function(x,var_args){
var p__10179 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__10185 = null;
if (arguments.length > 1) {
var G__10186__i = 0, G__10186__a = new Array(arguments.length -  1);
while (G__10186__i < G__10186__a.length) {G__10186__a[G__10186__i] = arguments[G__10186__i + 1]; ++G__10186__i;}
G__10185 = new cljs.core.IndexedSeq(G__10186__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__10189 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__10189) : validate.call(null,G__10189));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__10190 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__10190) : cljs.core.pr_str.call(null,G__10190));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__10197 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10197) : f.call(null,G__10197));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__10198 = a.state;
var G__10199 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10198,G__10199) : f.call(null,G__10198,G__10199));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__10200 = a.state;
var G__10201 = x;
var G__10202 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10200,G__10201,G__10202) : f.call(null,G__10200,G__10201,G__10202));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__10203__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__10203 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__10204__i = 0, G__10204__a = new Array(arguments.length -  4);
while (G__10204__i < G__10204__a.length) {G__10204__a[G__10204__i] = arguments[G__10204__i + 4]; ++G__10204__i;}
  more = new cljs.core.IndexedSeq(G__10204__a,0);
} 
return G__10203__delegate.call(this,a,f,x,y,more);};
G__10203.cljs$lang$maxFixedArity = 4;
G__10203.cljs$lang$applyTo = (function (arglist__10205){
var a = cljs.core.first(arglist__10205);
arglist__10205 = cljs.core.next(arglist__10205);
var f = cljs.core.first(arglist__10205);
arglist__10205 = cljs.core.next(arglist__10205);
var x = cljs.core.first(arglist__10205);
arglist__10205 = cljs.core.next(arglist__10205);
var y = cljs.core.first(arglist__10205);
var more = cljs.core.rest(arglist__10205);
return G__10203__delegate(a,f,x,y,more);
});
G__10203.cljs$core$IFn$_invoke$arity$variadic = G__10203__delegate;
return G__10203;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__10206 = null;
if (arguments.length > 4) {
var G__10207__i = 0, G__10207__a = new Array(arguments.length -  4);
while (G__10207__i < G__10207__a.length) {G__10207__a[G__10207__i] = arguments[G__10207__i + 4]; ++G__10207__i;}
G__10206 = new cljs.core.IndexedSeq(G__10207__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__10206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10274 = null;
var G__10274__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10274__1 = (function (result){
var G__10241 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10241) : rf.call(null,G__10241));
});
var G__10274__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__10242 = i;
var G__10243 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10242,G__10243) : f.call(null,G__10242,G__10243));
})();
if((v == null)){
return result;
} else {
var G__10244 = result;
var G__10245 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10244,G__10245) : rf.call(null,G__10244,G__10245));
}
});
G__10274 = function(result,input){
switch(arguments.length){
case 0:
return G__10274__0.call(this);
case 1:
return G__10274__1.call(this,result);
case 2:
return G__10274__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10274.cljs$core$IFn$_invoke$arity$0 = G__10274__0;
G__10274.cljs$core$IFn$_invoke$arity$1 = G__10274__1;
G__10274.cljs$core$IFn$_invoke$arity$2 = G__10274__2;
return G__10274;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___10275 = size;
var i_10276 = (0);
while(true){
if((i_10276 < n__4630__auto___10275)){
var x_10277 = (function (){var G__10270 = (idx + i_10276);
var G__10271 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10276);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10270,G__10271) : f.call(null,G__10270,G__10271));
})();
if((x_10277 == null)){
} else {
cljs.core.chunk_append(b,x_10277);
}

var G__10278 = (i_10276 + (1));
i_10276 = G__10278;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__10272 = idx;
var G__10273 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10272,G__10273) : f.call(null,G__10272,G__10273));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__10492 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10492) : p.call(null,G__10492));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__10494 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10494) : p.call(null,G__10494));
})();
if(cljs.core.truth_(and__3731__auto__)){
var G__10495 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10495) : p.call(null,G__10495));
} else {
return and__3731__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__10497 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10497) : p.call(null,G__10497));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__10499 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10499) : p.call(null,G__10499));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var G__10500 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10500) : p.call(null,G__10500));
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__10669__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__10669 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10670__i = 0, G__10670__a = new Array(arguments.length -  3);
while (G__10670__i < G__10670__a.length) {G__10670__a[G__10670__i] = arguments[G__10670__i + 3]; ++G__10670__i;}
  args = new cljs.core.IndexedSeq(G__10670__a,0);
} 
return G__10669__delegate.call(this,x,y,z,args);};
G__10669.cljs$lang$maxFixedArity = 3;
G__10669.cljs$lang$applyTo = (function (arglist__10671){
var x = cljs.core.first(arglist__10671);
arglist__10671 = cljs.core.next(arglist__10671);
var y = cljs.core.first(arglist__10671);
arglist__10671 = cljs.core.next(arglist__10671);
var z = cljs.core.first(arglist__10671);
var args = cljs.core.rest(arglist__10671);
return G__10669__delegate(x,y,z,args);
});
G__10669.cljs$core$IFn$_invoke$arity$variadic = G__10669__delegate;
return G__10669;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__10672 = null;
if (arguments.length > 3) {
var G__10673__i = 0, G__10673__a = new Array(arguments.length -  3);
while (G__10673__i < G__10673__a.length) {G__10673__a[G__10673__i] = arguments[G__10673__i + 3]; ++G__10673__i;}
G__10672 = new cljs.core.IndexedSeq(G__10673__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__10532 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10532) : p1.call(null,G__10532));
})();
if(cljs.core.truth_(and__3731__auto__)){
var G__10533 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10533) : p2.call(null,G__10533));
} else {
return and__3731__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__10535 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10535) : p1.call(null,G__10535));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__10537 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10537) : p1.call(null,G__10537));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var and__3731__auto____$2 = (function (){var G__10539 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10539) : p2.call(null,G__10539));
})();
if(cljs.core.truth_(and__3731__auto____$2)){
var G__10540 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10540) : p2.call(null,G__10540));
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__10542 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10542) : p1.call(null,G__10542));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__10544 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10544) : p1.call(null,G__10544));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var and__3731__auto____$2 = (function (){var G__10546 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10546) : p1.call(null,G__10546));
})();
if(cljs.core.truth_(and__3731__auto____$2)){
var and__3731__auto____$3 = (function (){var G__10548 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10548) : p2.call(null,G__10548));
})();
if(cljs.core.truth_(and__3731__auto____$3)){
var and__3731__auto____$4 = (function (){var G__10550 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10550) : p2.call(null,G__10550));
})();
if(cljs.core.truth_(and__3731__auto____$4)){
var G__10551 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10551) : p2.call(null,G__10551));
} else {
return and__3731__auto____$4;
}
} else {
return and__3731__auto____$3;
}
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__10674__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__10279_SHARP_){
var and__3731__auto__ = (function (){var G__10556 = p1__10279_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10556) : p1.call(null,G__10556));
})();
if(cljs.core.truth_(and__3731__auto__)){
var G__10557 = p1__10279_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10557) : p2.call(null,G__10557));
} else {
return and__3731__auto__;
}
}),args)));
};
var G__10674 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10675__i = 0, G__10675__a = new Array(arguments.length -  3);
while (G__10675__i < G__10675__a.length) {G__10675__a[G__10675__i] = arguments[G__10675__i + 3]; ++G__10675__i;}
  args = new cljs.core.IndexedSeq(G__10675__a,0);
} 
return G__10674__delegate.call(this,x,y,z,args);};
G__10674.cljs$lang$maxFixedArity = 3;
G__10674.cljs$lang$applyTo = (function (arglist__10676){
var x = cljs.core.first(arglist__10676);
arglist__10676 = cljs.core.next(arglist__10676);
var y = cljs.core.first(arglist__10676);
arglist__10676 = cljs.core.next(arglist__10676);
var z = cljs.core.first(arglist__10676);
var args = cljs.core.rest(arglist__10676);
return G__10674__delegate(x,y,z,args);
});
G__10674.cljs$core$IFn$_invoke$arity$variadic = G__10674__delegate;
return G__10674;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__10677 = null;
if (arguments.length > 3) {
var G__10678__i = 0, G__10678__a = new Array(arguments.length -  3);
while (G__10678__i < G__10678__a.length) {G__10678__a[G__10678__i] = arguments[G__10678__i + 3]; ++G__10678__i;}
G__10677 = new cljs.core.IndexedSeq(G__10678__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__10603 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10603) : p1.call(null,G__10603));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__10605 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10605) : p2.call(null,G__10605));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var G__10606 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10606) : p3.call(null,G__10606));
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__10608 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10608) : p1.call(null,G__10608));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__10610 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10610) : p2.call(null,G__10610));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var and__3731__auto____$2 = (function (){var G__10612 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10612) : p3.call(null,G__10612));
})();
if(cljs.core.truth_(and__3731__auto____$2)){
var and__3731__auto____$3 = (function (){var G__10614 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10614) : p1.call(null,G__10614));
})();
if(cljs.core.truth_(and__3731__auto____$3)){
var and__3731__auto____$4 = (function (){var G__10616 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10616) : p2.call(null,G__10616));
})();
if(cljs.core.truth_(and__3731__auto____$4)){
var G__10617 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10617) : p3.call(null,G__10617));
} else {
return and__3731__auto____$4;
}
} else {
return and__3731__auto____$3;
}
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3731__auto__ = (function (){var G__10619 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10619) : p1.call(null,G__10619));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__10621 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10621) : p2.call(null,G__10621));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var and__3731__auto____$2 = (function (){var G__10623 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10623) : p3.call(null,G__10623));
})();
if(cljs.core.truth_(and__3731__auto____$2)){
var and__3731__auto____$3 = (function (){var G__10625 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10625) : p1.call(null,G__10625));
})();
if(cljs.core.truth_(and__3731__auto____$3)){
var and__3731__auto____$4 = (function (){var G__10627 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10627) : p2.call(null,G__10627));
})();
if(cljs.core.truth_(and__3731__auto____$4)){
var and__3731__auto____$5 = (function (){var G__10629 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10629) : p3.call(null,G__10629));
})();
if(cljs.core.truth_(and__3731__auto____$5)){
var and__3731__auto____$6 = (function (){var G__10631 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10631) : p1.call(null,G__10631));
})();
if(cljs.core.truth_(and__3731__auto____$6)){
var and__3731__auto____$7 = (function (){var G__10633 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10633) : p2.call(null,G__10633));
})();
if(cljs.core.truth_(and__3731__auto____$7)){
var G__10634 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10634) : p3.call(null,G__10634));
} else {
return and__3731__auto____$7;
}
} else {
return and__3731__auto____$6;
}
} else {
return and__3731__auto____$5;
}
} else {
return and__3731__auto____$4;
}
} else {
return and__3731__auto____$3;
}
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__10679__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__10280_SHARP_){
var and__3731__auto__ = (function (){var G__10641 = p1__10280_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10641) : p1.call(null,G__10641));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__10643 = p1__10280_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10643) : p2.call(null,G__10643));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var G__10644 = p1__10280_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10644) : p3.call(null,G__10644));
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
}),args)));
};
var G__10679 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10680__i = 0, G__10680__a = new Array(arguments.length -  3);
while (G__10680__i < G__10680__a.length) {G__10680__a[G__10680__i] = arguments[G__10680__i + 3]; ++G__10680__i;}
  args = new cljs.core.IndexedSeq(G__10680__a,0);
} 
return G__10679__delegate.call(this,x,y,z,args);};
G__10679.cljs$lang$maxFixedArity = 3;
G__10679.cljs$lang$applyTo = (function (arglist__10681){
var x = cljs.core.first(arglist__10681);
arglist__10681 = cljs.core.next(arglist__10681);
var y = cljs.core.first(arglist__10681);
arglist__10681 = cljs.core.next(arglist__10681);
var z = cljs.core.first(arglist__10681);
var args = cljs.core.rest(arglist__10681);
return G__10679__delegate(x,y,z,args);
});
G__10679.cljs$core$IFn$_invoke$arity$variadic = G__10679__delegate;
return G__10679;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__10682 = null;
if (arguments.length > 3) {
var G__10683__i = 0, G__10683__a = new Array(arguments.length -  3);
while (G__10683__i < G__10683__a.length) {G__10683__a[G__10683__i] = arguments[G__10683__i + 3]; ++G__10683__i;}
G__10682 = new cljs.core.IndexedSeq(G__10683__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__10684__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10281_SHARP_){
var G__10660 = x;
return (p1__10281_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10281_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10660) : p1__10281_SHARP_.call(null,G__10660));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10282_SHARP_){
var and__3731__auto__ = (function (){var G__10662 = x;
return (p1__10282_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10282_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10662) : p1__10282_SHARP_.call(null,G__10662));
})();
if(cljs.core.truth_(and__3731__auto__)){
var G__10663 = y;
return (p1__10282_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10282_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10663) : p1__10282_SHARP_.call(null,G__10663));
} else {
return and__3731__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10283_SHARP_){
var and__3731__auto__ = (function (){var G__10665 = x;
return (p1__10283_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10283_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10665) : p1__10283_SHARP_.call(null,G__10665));
})();
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__10667 = y;
return (p1__10283_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10283_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10667) : p1__10283_SHARP_.call(null,G__10667));
})();
if(cljs.core.truth_(and__3731__auto____$1)){
var G__10668 = z;
return (p1__10283_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10283_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10668) : p1__10283_SHARP_.call(null,G__10668));
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__10685__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__10284_SHARP_){
return cljs.core.every_QMARK_(p1__10284_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__10685 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10686__i = 0, G__10686__a = new Array(arguments.length -  3);
while (G__10686__i < G__10686__a.length) {G__10686__a[G__10686__i] = arguments[G__10686__i + 3]; ++G__10686__i;}
  args = new cljs.core.IndexedSeq(G__10686__a,0);
} 
return G__10685__delegate.call(this,x,y,z,args);};
G__10685.cljs$lang$maxFixedArity = 3;
G__10685.cljs$lang$applyTo = (function (arglist__10687){
var x = cljs.core.first(arglist__10687);
arglist__10687 = cljs.core.next(arglist__10687);
var y = cljs.core.first(arglist__10687);
arglist__10687 = cljs.core.next(arglist__10687);
var z = cljs.core.first(arglist__10687);
var args = cljs.core.rest(arglist__10687);
return G__10685__delegate(x,y,z,args);
});
G__10685.cljs$core$IFn$_invoke$arity$variadic = G__10685__delegate;
return G__10685;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__10688 = null;
if (arguments.length > 3) {
var G__10689__i = 0, G__10689__a = new Array(arguments.length -  3);
while (G__10689__i < G__10689__a.length) {G__10689__a[G__10689__i] = arguments[G__10689__i + 3]; ++G__10689__i;}
G__10688 = new cljs.core.IndexedSeq(G__10689__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10688);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__10684 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10690__i = 0, G__10690__a = new Array(arguments.length -  3);
while (G__10690__i < G__10690__a.length) {G__10690__a[G__10690__i] = arguments[G__10690__i + 3]; ++G__10690__i;}
  ps = new cljs.core.IndexedSeq(G__10690__a,0);
} 
return G__10684__delegate.call(this,p1,p2,p3,ps);};
G__10684.cljs$lang$maxFixedArity = 3;
G__10684.cljs$lang$applyTo = (function (arglist__10691){
var p1 = cljs.core.first(arglist__10691);
arglist__10691 = cljs.core.next(arglist__10691);
var p2 = cljs.core.first(arglist__10691);
arglist__10691 = cljs.core.next(arglist__10691);
var p3 = cljs.core.first(arglist__10691);
var ps = cljs.core.rest(arglist__10691);
return G__10684__delegate(p1,p2,p3,ps);
});
G__10684.cljs$core$IFn$_invoke$arity$variadic = G__10684__delegate;
return G__10684;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__10692 = null;
if (arguments.length > 3) {
var G__10693__i = 0, G__10693__a = new Array(arguments.length -  3);
while (G__10693__i < G__10693__a.length) {G__10693__a[G__10693__i] = arguments[G__10693__i + 3]; ++G__10693__i;}
G__10692 = new cljs.core.IndexedSeq(G__10693__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10692);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__10899 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10899) : p.call(null,G__10899));
});
var sp1__2 = (function (x,y){
var or__3743__auto__ = (function (){var G__10901 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10901) : p.call(null,G__10901));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__10902 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10902) : p.call(null,G__10902));
}
});
var sp1__3 = (function (x,y,z){
var or__3743__auto__ = (function (){var G__10904 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10904) : p.call(null,G__10904));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__10906 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10906) : p.call(null,G__10906));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var G__10907 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10907) : p.call(null,G__10907));
}
}
});
var sp1__4 = (function() { 
var G__11068__delegate = function (x,y,z,args){
var or__3743__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__11068 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11069__i = 0, G__11069__a = new Array(arguments.length -  3);
while (G__11069__i < G__11069__a.length) {G__11069__a[G__11069__i] = arguments[G__11069__i + 3]; ++G__11069__i;}
  args = new cljs.core.IndexedSeq(G__11069__a,0);
} 
return G__11068__delegate.call(this,x,y,z,args);};
G__11068.cljs$lang$maxFixedArity = 3;
G__11068.cljs$lang$applyTo = (function (arglist__11070){
var x = cljs.core.first(arglist__11070);
arglist__11070 = cljs.core.next(arglist__11070);
var y = cljs.core.first(arglist__11070);
arglist__11070 = cljs.core.next(arglist__11070);
var z = cljs.core.first(arglist__11070);
var args = cljs.core.rest(arglist__11070);
return G__11068__delegate(x,y,z,args);
});
G__11068.cljs$core$IFn$_invoke$arity$variadic = G__11068__delegate;
return G__11068;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__11071 = null;
if (arguments.length > 3) {
var G__11072__i = 0, G__11072__a = new Array(arguments.length -  3);
while (G__11072__i < G__11072__a.length) {G__11072__a[G__11072__i] = arguments[G__11072__i + 3]; ++G__11072__i;}
G__11071 = new cljs.core.IndexedSeq(G__11072__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11071);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3743__auto__ = (function (){var G__10939 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10939) : p1.call(null,G__10939));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__10940 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10940) : p2.call(null,G__10940));
}
});
var sp2__2 = (function (x,y){
var or__3743__auto__ = (function (){var G__10942 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10942) : p1.call(null,G__10942));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__10944 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10944) : p1.call(null,G__10944));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__10946 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10946) : p2.call(null,G__10946));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var G__10947 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10947) : p2.call(null,G__10947));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3743__auto__ = (function (){var G__10949 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10949) : p1.call(null,G__10949));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__10951 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10951) : p1.call(null,G__10951));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__10953 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10953) : p1.call(null,G__10953));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var or__3743__auto____$3 = (function (){var G__10955 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10955) : p2.call(null,G__10955));
})();
if(cljs.core.truth_(or__3743__auto____$3)){
return or__3743__auto____$3;
} else {
var or__3743__auto____$4 = (function (){var G__10957 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10957) : p2.call(null,G__10957));
})();
if(cljs.core.truth_(or__3743__auto____$4)){
return or__3743__auto____$4;
} else {
var G__10958 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10958) : p2.call(null,G__10958));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__11073__delegate = function (x,y,z,args){
var or__3743__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.some(((function (or__3743__auto__){
return (function (p1__10694_SHARP_){
var or__3743__auto____$1 = (function (){var G__10960 = p1__10694_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10960) : p1.call(null,G__10960));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var G__10961 = p1__10694_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10961) : p2.call(null,G__10961));
}
});})(or__3743__auto__))
,args);
}
};
var G__11073 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11074__i = 0, G__11074__a = new Array(arguments.length -  3);
while (G__11074__i < G__11074__a.length) {G__11074__a[G__11074__i] = arguments[G__11074__i + 3]; ++G__11074__i;}
  args = new cljs.core.IndexedSeq(G__11074__a,0);
} 
return G__11073__delegate.call(this,x,y,z,args);};
G__11073.cljs$lang$maxFixedArity = 3;
G__11073.cljs$lang$applyTo = (function (arglist__11075){
var x = cljs.core.first(arglist__11075);
arglist__11075 = cljs.core.next(arglist__11075);
var y = cljs.core.first(arglist__11075);
arglist__11075 = cljs.core.next(arglist__11075);
var z = cljs.core.first(arglist__11075);
var args = cljs.core.rest(arglist__11075);
return G__11073__delegate(x,y,z,args);
});
G__11073.cljs$core$IFn$_invoke$arity$variadic = G__11073__delegate;
return G__11073;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__11076 = null;
if (arguments.length > 3) {
var G__11077__i = 0, G__11077__a = new Array(arguments.length -  3);
while (G__11077__i < G__11077__a.length) {G__11077__a[G__11077__i] = arguments[G__11077__i + 3]; ++G__11077__i;}
G__11076 = new cljs.core.IndexedSeq(G__11077__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11076);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3743__auto__ = (function (){var G__11007 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11007) : p1.call(null,G__11007));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__11009 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11009) : p2.call(null,G__11009));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var G__11010 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11010) : p3.call(null,G__11010));
}
}
});
var sp3__2 = (function (x,y){
var or__3743__auto__ = (function (){var G__11012 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11012) : p1.call(null,G__11012));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__11014 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11014) : p2.call(null,G__11014));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__11016 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11016) : p3.call(null,G__11016));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var or__3743__auto____$3 = (function (){var G__11018 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11018) : p1.call(null,G__11018));
})();
if(cljs.core.truth_(or__3743__auto____$3)){
return or__3743__auto____$3;
} else {
var or__3743__auto____$4 = (function (){var G__11020 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11020) : p2.call(null,G__11020));
})();
if(cljs.core.truth_(or__3743__auto____$4)){
return or__3743__auto____$4;
} else {
var G__11021 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11021) : p3.call(null,G__11021));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3743__auto__ = (function (){var G__11023 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11023) : p1.call(null,G__11023));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__11025 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11025) : p2.call(null,G__11025));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__11027 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11027) : p3.call(null,G__11027));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var or__3743__auto____$3 = (function (){var G__11029 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11029) : p1.call(null,G__11029));
})();
if(cljs.core.truth_(or__3743__auto____$3)){
return or__3743__auto____$3;
} else {
var or__3743__auto____$4 = (function (){var G__11031 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11031) : p2.call(null,G__11031));
})();
if(cljs.core.truth_(or__3743__auto____$4)){
return or__3743__auto____$4;
} else {
var or__3743__auto____$5 = (function (){var G__11033 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11033) : p3.call(null,G__11033));
})();
if(cljs.core.truth_(or__3743__auto____$5)){
return or__3743__auto____$5;
} else {
var or__3743__auto____$6 = (function (){var G__11035 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11035) : p1.call(null,G__11035));
})();
if(cljs.core.truth_(or__3743__auto____$6)){
return or__3743__auto____$6;
} else {
var or__3743__auto____$7 = (function (){var G__11037 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11037) : p2.call(null,G__11037));
})();
if(cljs.core.truth_(or__3743__auto____$7)){
return or__3743__auto____$7;
} else {
var G__11038 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11038) : p3.call(null,G__11038));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__11078__delegate = function (x,y,z,args){
var or__3743__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.some(((function (or__3743__auto__){
return (function (p1__10695_SHARP_){
var or__3743__auto____$1 = (function (){var G__11040 = p1__10695_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__11040) : p1.call(null,G__11040));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var G__11042 = p1__10695_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__11042) : p2.call(null,G__11042));
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
var G__11043 = p1__10695_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__11043) : p3.call(null,G__11043));
}
}
});})(or__3743__auto__))
,args);
}
};
var G__11078 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11079__i = 0, G__11079__a = new Array(arguments.length -  3);
while (G__11079__i < G__11079__a.length) {G__11079__a[G__11079__i] = arguments[G__11079__i + 3]; ++G__11079__i;}
  args = new cljs.core.IndexedSeq(G__11079__a,0);
} 
return G__11078__delegate.call(this,x,y,z,args);};
G__11078.cljs$lang$maxFixedArity = 3;
G__11078.cljs$lang$applyTo = (function (arglist__11080){
var x = cljs.core.first(arglist__11080);
arglist__11080 = cljs.core.next(arglist__11080);
var y = cljs.core.first(arglist__11080);
arglist__11080 = cljs.core.next(arglist__11080);
var z = cljs.core.first(arglist__11080);
var args = cljs.core.rest(arglist__11080);
return G__11078__delegate(x,y,z,args);
});
G__11078.cljs$core$IFn$_invoke$arity$variadic = G__11078__delegate;
return G__11078;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__11081 = null;
if (arguments.length > 3) {
var G__11082__i = 0, G__11082__a = new Array(arguments.length -  3);
while (G__11082__i < G__11082__a.length) {G__11082__a[G__11082__i] = arguments[G__11082__i + 3]; ++G__11082__i;}
G__11081 = new cljs.core.IndexedSeq(G__11082__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__11083__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__10696_SHARP_){
var G__11059 = x;
return (p1__10696_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10696_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11059) : p1__10696_SHARP_.call(null,G__11059));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__10697_SHARP_){
var or__3743__auto__ = (function (){var G__11061 = x;
return (p1__10697_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10697_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11061) : p1__10697_SHARP_.call(null,G__11061));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var G__11062 = y;
return (p1__10697_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10697_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11062) : p1__10697_SHARP_.call(null,G__11062));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__10698_SHARP_){
var or__3743__auto__ = (function (){var G__11064 = x;
return (p1__10698_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10698_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11064) : p1__10698_SHARP_.call(null,G__11064));
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var G__11066 = y;
return (p1__10698_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10698_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11066) : p1__10698_SHARP_.call(null,G__11066));
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var G__11067 = z;
return (p1__10698_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10698_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11067) : p1__10698_SHARP_.call(null,G__11067));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__11084__delegate = function (x,y,z,args){
var or__3743__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.some(((function (or__3743__auto__,ps__$1){
return (function (p1__10699_SHARP_){
return cljs.core.some(p1__10699_SHARP_,args);
});})(or__3743__auto__,ps__$1))
,ps__$1);
}
};
var G__11084 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11085__i = 0, G__11085__a = new Array(arguments.length -  3);
while (G__11085__i < G__11085__a.length) {G__11085__a[G__11085__i] = arguments[G__11085__i + 3]; ++G__11085__i;}
  args = new cljs.core.IndexedSeq(G__11085__a,0);
} 
return G__11084__delegate.call(this,x,y,z,args);};
G__11084.cljs$lang$maxFixedArity = 3;
G__11084.cljs$lang$applyTo = (function (arglist__11086){
var x = cljs.core.first(arglist__11086);
arglist__11086 = cljs.core.next(arglist__11086);
var y = cljs.core.first(arglist__11086);
arglist__11086 = cljs.core.next(arglist__11086);
var z = cljs.core.first(arglist__11086);
var args = cljs.core.rest(arglist__11086);
return G__11084__delegate(x,y,z,args);
});
G__11084.cljs$core$IFn$_invoke$arity$variadic = G__11084__delegate;
return G__11084;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__11087 = null;
if (arguments.length > 3) {
var G__11088__i = 0, G__11088__a = new Array(arguments.length -  3);
while (G__11088__i < G__11088__a.length) {G__11088__a[G__11088__i] = arguments[G__11088__i + 3]; ++G__11088__i;}
G__11087 = new cljs.core.IndexedSeq(G__11088__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__11083 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__11089__i = 0, G__11089__a = new Array(arguments.length -  3);
while (G__11089__i < G__11089__a.length) {G__11089__a[G__11089__i] = arguments[G__11089__i + 3]; ++G__11089__i;}
  ps = new cljs.core.IndexedSeq(G__11089__a,0);
} 
return G__11083__delegate.call(this,p1,p2,p3,ps);};
G__11083.cljs$lang$maxFixedArity = 3;
G__11083.cljs$lang$applyTo = (function (arglist__11090){
var p1 = cljs.core.first(arglist__11090);
arglist__11090 = cljs.core.next(arglist__11090);
var p2 = cljs.core.first(arglist__11090);
arglist__11090 = cljs.core.next(arglist__11090);
var p3 = cljs.core.first(arglist__11090);
var ps = cljs.core.rest(arglist__11090);
return G__11083__delegate(p1,p2,p3,ps);
});
G__11083.cljs$core$IFn$_invoke$arity$variadic = G__11083__delegate;
return G__11083;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__11091 = null;
if (arguments.length > 3) {
var G__11092__i = 0, G__11092__a = new Array(arguments.length -  3);
while (G__11092__i < G__11092__a.length) {G__11092__a[G__11092__i] = arguments[G__11092__i + 3]; ++G__11092__i;}
G__11091 = new cljs.core.IndexedSeq(G__11092__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__11091);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__11147 = null;
var G__11147__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11147__1 = (function (result){
var G__11133 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11133) : rf.call(null,G__11133));
});
var G__11147__2 = (function (result,input){
var G__11134 = result;
var G__11135 = (function (){var G__11136 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11136) : f.call(null,G__11136));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11134,G__11135) : rf.call(null,G__11134,G__11135));
});
var G__11147__3 = (function() { 
var G__11148__delegate = function (result,input,inputs){
var G__11137 = result;
var G__11138 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11137,G__11138) : rf.call(null,G__11137,G__11138));
};
var G__11148 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__11149__i = 0, G__11149__a = new Array(arguments.length -  2);
while (G__11149__i < G__11149__a.length) {G__11149__a[G__11149__i] = arguments[G__11149__i + 2]; ++G__11149__i;}
  inputs = new cljs.core.IndexedSeq(G__11149__a,0);
} 
return G__11148__delegate.call(this,result,input,inputs);};
G__11148.cljs$lang$maxFixedArity = 2;
G__11148.cljs$lang$applyTo = (function (arglist__11150){
var result = cljs.core.first(arglist__11150);
arglist__11150 = cljs.core.next(arglist__11150);
var input = cljs.core.first(arglist__11150);
var inputs = cljs.core.rest(arglist__11150);
return G__11148__delegate(result,input,inputs);
});
G__11148.cljs$core$IFn$_invoke$arity$variadic = G__11148__delegate;
return G__11148;
})()
;
G__11147 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__11147__0.call(this);
case 1:
return G__11147__1.call(this,result);
case 2:
return G__11147__2.call(this,result,input);
default:
var G__11151 = null;
if (arguments.length > 2) {
var G__11152__i = 0, G__11152__a = new Array(arguments.length -  2);
while (G__11152__i < G__11152__a.length) {G__11152__a[G__11152__i] = arguments[G__11152__i + 2]; ++G__11152__i;}
G__11151 = new cljs.core.IndexedSeq(G__11152__a,0);
}
return G__11147__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__11151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11147.cljs$lang$maxFixedArity = 2;
G__11147.cljs$lang$applyTo = G__11147__3.cljs$lang$applyTo;
G__11147.cljs$core$IFn$_invoke$arity$0 = G__11147__0;
G__11147.cljs$core$IFn$_invoke$arity$1 = G__11147__1;
G__11147.cljs$core$IFn$_invoke$arity$2 = G__11147__2;
G__11147.cljs$core$IFn$_invoke$arity$variadic = G__11147__3.cljs$core$IFn$_invoke$arity$variadic;
return G__11147;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___11153 = size;
var i_11154 = (0);
while(true){
if((i_11154 < n__4630__auto___11153)){
cljs.core.chunk_append(b,(function (){var G__11139 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11154);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11139) : f.call(null,G__11139));
})());

var G__11155 = (i_11154 + (1));
i_11154 = G__11155;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__11140 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11140) : f.call(null,G__11140));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__11141 = cljs.core.first(s1);
var G__11142 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11141,G__11142) : f.call(null,G__11141,G__11142));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__11143 = cljs.core.first(s1);
var G__11144 = cljs.core.first(s2);
var G__11145 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11143,G__11144,G__11145) : f.call(null,G__11143,G__11144,G__11145));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__11156__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__11093_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__11093_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__11156 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__11157__i = 0, G__11157__a = new Array(arguments.length -  4);
while (G__11157__i < G__11157__a.length) {G__11157__a[G__11157__i] = arguments[G__11157__i + 4]; ++G__11157__i;}
  colls = new cljs.core.IndexedSeq(G__11157__a,0);
} 
return G__11156__delegate.call(this,f,c1,c2,c3,colls);};
G__11156.cljs$lang$maxFixedArity = 4;
G__11156.cljs$lang$applyTo = (function (arglist__11158){
var f = cljs.core.first(arglist__11158);
arglist__11158 = cljs.core.next(arglist__11158);
var c1 = cljs.core.first(arglist__11158);
arglist__11158 = cljs.core.next(arglist__11158);
var c2 = cljs.core.first(arglist__11158);
arglist__11158 = cljs.core.next(arglist__11158);
var c3 = cljs.core.first(arglist__11158);
var colls = cljs.core.rest(arglist__11158);
return G__11156__delegate(f,c1,c2,c3,colls);
});
G__11156.cljs$core$IFn$_invoke$arity$variadic = G__11156__delegate;
return G__11156;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__11159 = null;
if (arguments.length > 4) {
var G__11160__i = 0, G__11160__a = new Array(arguments.length -  4);
while (G__11160__i < G__11160__a.length) {G__11160__a[G__11160__i] = arguments[G__11160__i + 4]; ++G__11160__i;}
G__11159 = new cljs.core.IndexedSeq(G__11160__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__11159);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__11169 = null;
var G__11169__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11169__1 = (function (result){
var G__11166 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11166) : rf.call(null,G__11166));
});
var G__11169__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__11167 = result;
var G__11168 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11167,G__11168) : rf.call(null,G__11167,G__11168));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__11169 = function(result,input){
switch(arguments.length){
case 0:
return G__11169__0.call(this);
case 1:
return G__11169__1.call(this,result);
case 2:
return G__11169__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11169.cljs$core$IFn$_invoke$arity$0 = G__11169__0;
G__11169.cljs$core$IFn$_invoke$arity$1 = G__11169__1;
G__11169.cljs$core$IFn$_invoke$arity$2 = G__11169__2;
return G__11169;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__11176 = null;
var G__11176__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11176__1 = (function (result){
var G__11173 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11173) : rf.call(null,G__11173));
});
var G__11176__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__11174 = result;
var G__11175 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11174,G__11175) : rf.call(null,G__11174,G__11175));
}
});
G__11176 = function(result,input){
switch(arguments.length){
case 0:
return G__11176__0.call(this);
case 1:
return G__11176__1.call(this,result);
case 2:
return G__11176__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11176.cljs$core$IFn$_invoke$arity$0 = G__11176__0;
G__11176.cljs$core$IFn$_invoke$arity$1 = G__11176__1;
G__11176.cljs$core$IFn$_invoke$arity$2 = G__11176__2;
return G__11176;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__11177 = (n__$1 - (1));
var G__11178 = cljs.core.rest(s);
n__$1 = G__11177;
coll__$1 = G__11178;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__11181 = cljs.core.next(s);
var G__11182 = cljs.core.next(lead);
s = G__11181;
lead = G__11182;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__11195 = null;
var G__11195__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11195__1 = (function (result){
var G__11189 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11189) : rf.call(null,G__11189));
});
var G__11195__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3731__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3731__auto__)){
var G__11190 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11190) : pred.call(null,G__11190));
} else {
return and__3731__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__11191 = result;
var G__11192 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11191,G__11192) : rf.call(null,G__11191,G__11192));
}
});
G__11195 = function(result,input){
switch(arguments.length){
case 0:
return G__11195__0.call(this);
case 1:
return G__11195__1.call(this,result);
case 2:
return G__11195__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11195.cljs$core$IFn$_invoke$arity$0 = G__11195__0;
G__11195.cljs$core$IFn$_invoke$arity$1 = G__11195__1;
G__11195.cljs$core$IFn$_invoke$arity$2 = G__11195__2;
return G__11195;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3731__auto__ = s;
if(and__3731__auto__){
var G__11194 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__11194) : pred__$1.call(null,G__11194));
} else {
return and__3731__auto__;
}
})())){
var G__11196 = pred__$1;
var G__11197 = cljs.core.rest(s);
pred__$1 = G__11196;
coll__$1 = G__11197;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__11206 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11206) : f.call(null,G__11206));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__11209__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__11209 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__11210__i = 0, G__11210__a = new Array(arguments.length -  2);
while (G__11210__i < G__11210__a.length) {G__11210__a[G__11210__i] = arguments[G__11210__i + 2]; ++G__11210__i;}
  colls = new cljs.core.IndexedSeq(G__11210__a,0);
} 
return G__11209__delegate.call(this,c1,c2,colls);};
G__11209.cljs$lang$maxFixedArity = 2;
G__11209.cljs$lang$applyTo = (function (arglist__11211){
var c1 = cljs.core.first(arglist__11211);
arglist__11211 = cljs.core.next(arglist__11211);
var c2 = cljs.core.first(arglist__11211);
var colls = cljs.core.rest(arglist__11211);
return G__11209__delegate(c1,c2,colls);
});
G__11209.cljs$core$IFn$_invoke$arity$variadic = G__11209__delegate;
return G__11209;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__11212 = null;
if (arguments.length > 2) {
var G__11213__i = 0, G__11213__a = new Array(arguments.length -  2);
while (G__11213__i < G__11213__a.length) {G__11213__a[G__11213__i] = arguments[G__11213__i + 2]; ++G__11213__i;}
G__11212 = new cljs.core.IndexedSeq(G__11213__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__11212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__11222__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__11222 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__11223__i = 0, G__11223__a = new Array(arguments.length -  1);
while (G__11223__i < G__11223__a.length) {G__11223__a[G__11223__i] = arguments[G__11223__i + 1]; ++G__11223__i;}
  colls = new cljs.core.IndexedSeq(G__11223__a,0);
} 
return G__11222__delegate.call(this,f,colls);};
G__11222.cljs$lang$maxFixedArity = 1;
G__11222.cljs$lang$applyTo = (function (arglist__11224){
var f = cljs.core.first(arglist__11224);
var colls = cljs.core.rest(arglist__11224);
return G__11222__delegate(f,colls);
});
G__11222.cljs$core$IFn$_invoke$arity$variadic = G__11222__delegate;
return G__11222;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__11225 = null;
if (arguments.length > 1) {
var G__11226__i = 0, G__11226__a = new Array(arguments.length -  1);
while (G__11226__i < G__11226__a.length) {G__11226__a[G__11226__i] = arguments[G__11226__i + 1]; ++G__11226__i;}
G__11225 = new cljs.core.IndexedSeq(G__11226__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11225);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__11245 = null;
var G__11245__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11245__1 = (function (result){
var G__11239 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11239) : rf.call(null,G__11239));
});
var G__11245__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__11240 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11240) : pred.call(null,G__11240));
})())){
var G__11241 = result;
var G__11242 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11241,G__11242) : rf.call(null,G__11241,G__11242));
} else {
return result;
}
});
G__11245 = function(result,input){
switch(arguments.length){
case 0:
return G__11245__0.call(this);
case 1:
return G__11245__1.call(this,result);
case 2:
return G__11245__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11245.cljs$core$IFn$_invoke$arity$0 = G__11245__0;
G__11245.cljs$core$IFn$_invoke$arity$1 = G__11245__1;
G__11245.cljs$core$IFn$_invoke$arity$2 = G__11245__2;
return G__11245;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4630__auto___11246 = size;
var i_11247 = (0);
while(true){
if((i_11247 < n__4630__auto___11246)){
if(cljs.core.truth_((function (){var G__11243 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11247);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11243) : pred.call(null,G__11243));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11247));
} else {
}

var G__11248 = (i_11247 + (1));
i_11247 = G__11248;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__11244 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11244) : pred.call(null,G__11244));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__11255 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__11255) : branch_QMARK_.call(null,G__11255));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__11256 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__11256) : children.call(null,G__11256));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__11257_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__11257_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__11260 = to;
if(G__11260){
var bit__4417__auto__ = (G__11260.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4417__auto__) || (G__11260.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__11261 = to;
if(G__11261){
var bit__4417__auto__ = (G__11261.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4417__auto__) || (G__11261.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__11263 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11263) : f.call(null,G__11263));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__11264__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__11264 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__11265__i = 0, G__11265__a = new Array(arguments.length -  4);
while (G__11265__i < G__11265__a.length) {G__11265__a[G__11265__i] = arguments[G__11265__i + 4]; ++G__11265__i;}
  colls = new cljs.core.IndexedSeq(G__11265__a,0);
} 
return G__11264__delegate.call(this,f,c1,c2,c3,colls);};
G__11264.cljs$lang$maxFixedArity = 4;
G__11264.cljs$lang$applyTo = (function (arglist__11266){
var f = cljs.core.first(arglist__11266);
arglist__11266 = cljs.core.next(arglist__11266);
var c1 = cljs.core.first(arglist__11266);
arglist__11266 = cljs.core.next(arglist__11266);
var c2 = cljs.core.first(arglist__11266);
arglist__11266 = cljs.core.next(arglist__11266);
var c3 = cljs.core.first(arglist__11266);
var colls = cljs.core.rest(arglist__11266);
return G__11264__delegate(f,c1,c2,c3,colls);
});
G__11264.cljs$core$IFn$_invoke$arity$variadic = G__11264__delegate;
return G__11264;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__11267 = null;
if (arguments.length > 4) {
var G__11268__i = 0, G__11268__a = new Array(arguments.length -  4);
while (G__11268__i < G__11268__a.length) {G__11268__a[G__11268__i] = arguments[G__11268__i + 4]; ++G__11268__i;}
G__11267 = new cljs.core.IndexedSeq(G__11268__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__11267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__11270 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11270) : pred.call(null,G__11270));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__11285 = m__$1;
if(G__11285){
var bit__4424__auto__ = (G__11285.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4424__auto__) || (G__11285.cljs$core$ILookup$)){
return true;
} else {
if((!G__11285.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__11285);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__11285);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__11286 = sentinel;
var G__11287 = m__$2;
var G__11288 = cljs.core.next(ks__$1);
sentinel = G__11286;
m__$1 = G__11287;
ks__$1 = G__11288;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__11289,v){
var vec__11294 = p__11289;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11294,(0),null);
var ks = cljs.core.nthnext(vec__11294,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__11295,f){
var vec__11333 = p__11295;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11333,(0),null);
var ks = cljs.core.nthnext(vec__11333,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11334 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11334) : f.call(null,G__11334));
})());
}
});
var update_in__4 = (function (m,p__11296,f,a){
var vec__11335 = p__11296;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11335,(0),null);
var ks = cljs.core.nthnext(vec__11335,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11336 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11337 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11336,G__11337) : f.call(null,G__11336,G__11337));
})());
}
});
var update_in__5 = (function (m,p__11297,f,a,b){
var vec__11338 = p__11297;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11338,(0),null);
var ks = cljs.core.nthnext(vec__11338,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11339 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11340 = a;
var G__11341 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11339,G__11340,G__11341) : f.call(null,G__11339,G__11340,G__11341));
})());
}
});
var update_in__6 = (function (m,p__11298,f,a,b,c){
var vec__11342 = p__11298;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11342,(0),null);
var ks = cljs.core.nthnext(vec__11342,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11343 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11344 = a;
var G__11345 = b;
var G__11346 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11343,G__11344,G__11345,G__11346) : f.call(null,G__11343,G__11344,G__11345,G__11346));
})());
}
});
var update_in__7 = (function() { 
var G__11348__delegate = function (m,p__11299,f,a,b,c,args){
var vec__11347 = p__11299;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11347,(0),null);
var ks = cljs.core.nthnext(vec__11347,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__11348 = function (m,p__11299,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__11349__i = 0, G__11349__a = new Array(arguments.length -  6);
while (G__11349__i < G__11349__a.length) {G__11349__a[G__11349__i] = arguments[G__11349__i + 6]; ++G__11349__i;}
  args = new cljs.core.IndexedSeq(G__11349__a,0);
} 
return G__11348__delegate.call(this,m,p__11299,f,a,b,c,args);};
G__11348.cljs$lang$maxFixedArity = 6;
G__11348.cljs$lang$applyTo = (function (arglist__11350){
var m = cljs.core.first(arglist__11350);
arglist__11350 = cljs.core.next(arglist__11350);
var p__11299 = cljs.core.first(arglist__11350);
arglist__11350 = cljs.core.next(arglist__11350);
var f = cljs.core.first(arglist__11350);
arglist__11350 = cljs.core.next(arglist__11350);
var a = cljs.core.first(arglist__11350);
arglist__11350 = cljs.core.next(arglist__11350);
var b = cljs.core.first(arglist__11350);
arglist__11350 = cljs.core.next(arglist__11350);
var c = cljs.core.first(arglist__11350);
var args = cljs.core.rest(arglist__11350);
return G__11348__delegate(m,p__11299,f,a,b,c,args);
});
G__11348.cljs$core$IFn$_invoke$arity$variadic = G__11348__delegate;
return G__11348;
})()
;
update_in = function(m,p__11299,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__11299,f);
case 4:
return update_in__4.call(this,m,p__11299,f,a);
case 5:
return update_in__5.call(this,m,p__11299,f,a,b);
case 6:
return update_in__6.call(this,m,p__11299,f,a,b,c);
default:
var G__11351 = null;
if (arguments.length > 6) {
var G__11352__i = 0, G__11352__a = new Array(arguments.length -  6);
while (G__11352__i < G__11352__a.length) {G__11352__a[G__11352__i] = arguments[G__11352__i + 6]; ++G__11352__i;}
G__11351 = new cljs.core.IndexedSeq(G__11352__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__11299,f,a,b,c, G__11351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11363 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11363) : f.call(null,G__11363));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11364 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11365 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11364,G__11365) : f.call(null,G__11364,G__11365));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11366 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11367 = x;
var G__11368 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11366,G__11367,G__11368) : f.call(null,G__11366,G__11367,G__11368));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11369 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11370 = x;
var G__11371 = y;
var G__11372 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11369,G__11370,G__11371,G__11372) : f.call(null,G__11369,G__11370,G__11371,G__11372));
})());
});
var update__7 = (function() { 
var G__11373__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__11373 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__11374__i = 0, G__11374__a = new Array(arguments.length -  6);
while (G__11374__i < G__11374__a.length) {G__11374__a[G__11374__i] = arguments[G__11374__i + 6]; ++G__11374__i;}
  more = new cljs.core.IndexedSeq(G__11374__a,0);
} 
return G__11373__delegate.call(this,m,k,f,x,y,z,more);};
G__11373.cljs$lang$maxFixedArity = 6;
G__11373.cljs$lang$applyTo = (function (arglist__11375){
var m = cljs.core.first(arglist__11375);
arglist__11375 = cljs.core.next(arglist__11375);
var k = cljs.core.first(arglist__11375);
arglist__11375 = cljs.core.next(arglist__11375);
var f = cljs.core.first(arglist__11375);
arglist__11375 = cljs.core.next(arglist__11375);
var x = cljs.core.first(arglist__11375);
arglist__11375 = cljs.core.next(arglist__11375);
var y = cljs.core.first(arglist__11375);
arglist__11375 = cljs.core.next(arglist__11375);
var z = cljs.core.first(arglist__11375);
var more = cljs.core.rest(arglist__11375);
return G__11373__delegate(m,k,f,x,y,z,more);
});
G__11373.cljs$core$IFn$_invoke$arity$variadic = G__11373__delegate;
return G__11373;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__11376 = null;
if (arguments.length > 6) {
var G__11377__i = 0, G__11377__a = new Array(arguments.length -  6);
while (G__11377__i < G__11377__a.length) {G__11377__a[G__11377__i] = arguments[G__11377__i + 6]; ++G__11377__i;}
G__11376 = new cljs.core.IndexedSeq(G__11377__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__11376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__11378 = (ll - (5));
var G__11379 = r;
ll = G__11378;
ret = G__11379;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__11384 = cljs.core.pv_aget(node,(0));
var G__11385 = (level - (5));
node = G__11384;
level = G__11385;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__11386 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__11387 = (level - (5));
node = G__11386;
level = G__11387;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__11397 = init__$2;
var G__11398 = (j + i);
var G__11399 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11397,G__11398,G__11399) : f.call(null,G__11397,G__11398,G__11399));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__11410 = (j + (1));
var G__11411 = init__$3;
j = G__11410;
init__$2 = G__11411;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11400 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11400) : cljs.core.deref.call(null,G__11400));
} else {
var G__11412 = (i + len);
var G__11413 = init__$2;
i = G__11412;
init__$1 = G__11413;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__11401 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__11401) : cljs.core.tv_editable_root.call(null,G__11401));
})(),(function (){var G__11402 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__11402) : cljs.core.tv_editable_tail.call(null,G__11402));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__11403 = init__$2;
var G__11404 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11403,G__11404) : f.call(null,G__11403,G__11404));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__11414 = (j + (1));
var G__11415 = init__$3;
j = G__11414;
init__$2 = G__11415;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11405 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11405) : cljs.core.deref.call(null,G__11405));
} else {
var G__11416 = (i + len);
var G__11417 = init__$2;
i = G__11416;
init__$1 = G__11417;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__11406 = coll__$1;
var G__11407 = cljs.core.first_array_for_longvec(coll__$1);
var G__11408 = (0);
var G__11409 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11406,G__11407,G__11408,G__11409) : cljs.core.chunked_seq.call(null,G__11406,G__11407,G__11408,G__11409));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4630__auto___11418 = len;
var i_11419 = (0);
while(true){
if((i_11419 < n__4630__auto___11418)){
(new_tail[i_11419] = (self__.tail[i_11419]));

var G__11420 = (i_11419 + (1));
i_11419 = G__11420;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__11421 = null;
var G__11421__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__11421__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__11421 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11421__2.call(this,self__,k);
case 3:
return G__11421__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11421.cljs$core$IFn$_invoke$arity$2 = G__11421__2;
G__11421.cljs$core$IFn$_invoke$arity$3 = G__11421__3;
return G__11421;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args11396){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11396)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__11422 = (i + (1));
var G__11423 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__11422;
out = G__11423;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11424__i = 0, G__11424__a = new Array(arguments.length -  0);
while (G__11424__i < G__11424__a.length) {G__11424__a[G__11424__i] = arguments[G__11424__i + 0]; ++G__11424__i;}
  args = new cljs.core.IndexedSeq(G__11424__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__11425){
var args = cljs.core.seq(arglist__11425);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__11426 = self__.vec;
var G__11427 = self__.node;
var G__11428 = self__.i;
var G__11429 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11426,G__11427,G__11428,G__11429) : cljs.core.chunked_seq.call(null,G__11426,G__11427,G__11428,G__11429));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__11430 = self__.vec;
var G__11431 = (self__.i + self__.off);
var G__11432 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11430,G__11431,G__11432) : cljs.core.subvec.call(null,G__11430,G__11431,G__11432));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__11433 = self__.vec;
var G__11434 = (self__.i + self__.off);
var G__11435 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__11433,G__11434,G__11435) : cljs.core.subvec.call(null,G__11433,G__11434,G__11435));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__11436 = self__.vec;
var G__11437 = self__.node;
var G__11438 = self__.i;
var G__11439 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11436,G__11437,G__11438,G__11439) : cljs.core.chunked_seq.call(null,G__11436,G__11437,G__11438,G__11439));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__11440 = self__.vec;
var G__11441 = cljs.core.unchecked_array_for(self__.vec,end);
var G__11442 = end;
var G__11443 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11440,G__11441,G__11442,G__11443) : cljs.core.chunked_seq.call(null,G__11440,G__11441,G__11442,G__11443));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__11444 = self__.vec;
var G__11445 = self__.node;
var G__11446 = self__.i;
var G__11447 = self__.off;
var G__11448 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__11444,G__11445,G__11446,G__11447,G__11448) : cljs.core.chunked_seq.call(null,G__11444,G__11445,G__11446,G__11447,G__11448));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__11449 = self__.vec;
var G__11450 = cljs.core.unchecked_array_for(self__.vec,end);
var G__11451 = end;
var G__11452 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__11449,G__11450,G__11451,G__11452) : cljs.core.chunked_seq.call(null,G__11449,G__11450,G__11451,G__11452));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__11454 = self__.meta;
var G__11455 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__11456 = self__.start;
var G__11457 = (function (){var x__4060__auto__ = self__.end;
var y__4061__auto__ = (v_pos + (1));
return ((x__4060__auto__ > y__4061__auto__) ? x__4060__auto__ : y__4061__auto__);
})();
var G__11458 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11454,G__11455,G__11456,G__11457,G__11458) : cljs.core.build_subvec.call(null,G__11454,G__11455,G__11456,G__11457,G__11458));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__11459 = self__.meta;
var G__11460 = self__.v;
var G__11461 = self__.start;
var G__11462 = (self__.end - (1));
var G__11463 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11459,G__11460,G__11461,G__11462,G__11463) : cljs.core.build_subvec.call(null,G__11459,G__11460,G__11461,G__11462,G__11463));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__11465 = meta__$1;
var G__11466 = self__.v;
var G__11467 = self__.start;
var G__11468 = self__.end;
var G__11469 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11465,G__11466,G__11467,G__11468,G__11469) : cljs.core.build_subvec.call(null,G__11465,G__11466,G__11467,G__11468,G__11469));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11470 = self__.meta;
var G__11471 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__11472 = self__.start;
var G__11473 = (self__.end + (1));
var G__11474 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__11470,G__11471,G__11472,G__11473,G__11474) : cljs.core.build_subvec.call(null,G__11470,G__11471,G__11472,G__11473,G__11474));
});

cljs.core.Subvec.prototype.call = (function() {
var G__11475 = null;
var G__11475__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__11475__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__11475 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11475__2.call(this,self__,k);
case 3:
return G__11475__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11475.cljs$core$IFn$_invoke$arity$2 = G__11475__2;
G__11475.cljs$core$IFn$_invoke$arity$3 = G__11475__3;
return G__11475;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args11453){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11453)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__11476 = meta;
var G__11477 = v.v;
var G__11478 = (v.start + start);
var G__11479 = (v.start + end);
var G__11480 = __hash;
meta = G__11476;
v = G__11477;
start = G__11478;
end = G__11479;
__hash = G__11480;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj11487 = {};
return obj11487;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__11495 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__11496 = (level - (5));
node = G__11495;
level = G__11496;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__11500 = null;
var G__11500__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11500__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11500 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11500__2.call(this,self__,k);
case 3:
return G__11500__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11500.cljs$core$IFn$_invoke$arity$2 = G__11500__2;
G__11500.cljs$core$IFn$_invoke$arity$3 = G__11500__3;
return G__11500;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args11497){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11497)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3743__auto__ = self__.front;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3743__auto__ = self__.rear;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__11501 = (i + incr);
i = G__11501;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__11502 = (i + (1));
var G__11503 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__11502;
out = G__11503;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj11507 = {};
return obj11507;
})();
var l = ks.length;
var i_11508 = (0);
while(true){
if((i_11508 < l)){
var k_11509 = (ks[i_11508]);
(new_obj[k_11509] = (obj[k_11509]));

var G__11510 = (i_11508 + (1));
i_11508 = G__11510;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3731__auto__ = (function (){var G__11514 = k;
return goog.isString(G__11514);
})();
if(cljs.core.truth_(and__3731__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3731__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__11515 = init__$1;
var G__11516 = k;
var G__11517 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11515,G__11516,G__11517) : f.call(null,G__11515,G__11516,G__11517));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11518 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11518) : cljs.core.deref.call(null,G__11518));
} else {
var G__11524 = cljs.core.rest(keys__$1);
var G__11525 = init__$2;
keys__$1 = G__11524;
init__$1 = G__11525;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3731__auto__ = (function (){var G__11520 = k;
return goog.isString(G__11520);
})();
if(cljs.core.truth_(and__3731__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3731__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__11521 = k;
return goog.isString(G__11521);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3731__auto__ = (function (){var G__11523 = k;
return goog.isString(G__11523);
})();
if(cljs.core.truth_(and__3731__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3731__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__11511_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__11511_SHARP_,(self__.strobj[p1__11511_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__11526 = null;
var G__11526__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11526__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11526 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11526__2.call(this,self__,k);
case 3:
return G__11526__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11526.cljs$core$IFn$_invoke$arity$2 = G__11526__2;
G__11526.cljs$core$IFn$_invoke$arity$3 = G__11526__3;
return G__11526;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args11512){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11512)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj11528 = {};
return obj11528;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__11529 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11529,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11529,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__11530 = (i + (2));
i = G__11530;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__11531 = (i + (2));
i = G__11531;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__11532 = (i + (2));
i = G__11532;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__11533 = (i + (2));
i = G__11533;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__11534 = (i + (2));
i = G__11534;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3743__auto__ = (function (){var G__11538 = k;
return goog.isString(G__11538);
})();
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_11539 = (0);
while(true){
if((i_11539 < l)){
(narr[i_11539] = (arr[i_11539]));

var G__11540 = (i_11539 + (1));
i_11539 = G__11540;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11542 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11542) : cljs.core.keys.call(null,G__11542));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11543 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11543) : cljs.core.vals.call(null,G__11543));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11544 = cljs.core.seq(coll);
var chunk__11545 = null;
var count__11546 = (0);
var i__11547 = (0);
while(true){
if((i__11547 < count__11546)){
var vec__11548 = chunk__11545.cljs$core$IIndexed$_nth$arity$2(null,i__11547);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11548,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11548,(1),null);
var G__11549_11562 = v;
var G__11550_11563 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11549_11562,G__11550_11563) : f.call(null,G__11549_11562,G__11550_11563));

var G__11564 = seq__11544;
var G__11565 = chunk__11545;
var G__11566 = count__11546;
var G__11567 = (i__11547 + (1));
seq__11544 = G__11564;
chunk__11545 = G__11565;
count__11546 = G__11566;
i__11547 = G__11567;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11544);
if(temp__4126__auto__){
var seq__11544__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11544__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__11544__$1);
var G__11568 = cljs.core.chunk_rest(seq__11544__$1);
var G__11569 = c__4530__auto__;
var G__11570 = cljs.core.count(c__4530__auto__);
var G__11571 = (0);
seq__11544 = G__11568;
chunk__11545 = G__11569;
count__11546 = G__11570;
i__11547 = G__11571;
continue;
} else {
var vec__11551 = cljs.core.first(seq__11544__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11551,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11551,(1),null);
var G__11552_11572 = v;
var G__11553_11573 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11552_11572,G__11553_11573) : f.call(null,G__11552_11572,G__11553_11573));

var G__11574 = cljs.core.next(seq__11544__$1);
var G__11575 = null;
var G__11576 = (0);
var G__11577 = (0);
seq__11544 = G__11574;
chunk__11545 = G__11575;
count__11546 = G__11576;
i__11547 = G__11577;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__11554 = init__$1;
var G__11555 = (self__.arr[i]);
var G__11556 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11554,G__11555,G__11556) : f.call(null,G__11554,G__11555,G__11556));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11557 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11557) : cljs.core.deref.call(null,G__11557));
} else {
var G__11578 = (i + (2));
var G__11579 = init__$2;
i = G__11578;
init__$1 = G__11579;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__11558 = other;
if(G__11558){
var bit__4417__auto__ = (G__11558.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4417__auto__) || (G__11558.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__11580 = (i + (2));
i = G__11580;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj11560 = {};
return obj11560;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__11581 = (s + (2));
var G__11582 = d;
s = G__11581;
d = G__11582;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__11583 = (s + (2));
var G__11584 = (d + (2));
s = G__11583;
d = G__11584;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__11561 = cljs.core.aclone(self__.arr);
(G__11561[(idx + (1))] = v);

return G__11561;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11585 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11586 = cljs.core.next(es);
ret = G__11585;
es = G__11586;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__11587 = null;
var G__11587__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11587__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11587 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11587__2.call(this,self__,k);
case 3:
return G__11587__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11587.cljs$core$IFn$_invoke$arity$2 = G__11587__2;
G__11587.cljs$core$IFn$_invoke$arity$3 = G__11587__3;
return G__11587;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args11541){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11541)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11588 = (i + (2));
var G__11589 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11588;
ret = G__11589;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__11590_11598 = self__.arr;
G__11590_11598.pop();

G__11590_11598.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__11591 = self__.len;
var G__11592 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__11591,G__11592) : cljs.core.array__GT_transient_hash_map.call(null,G__11591,G__11592));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__11593 = o;
if(G__11593){
var bit__4424__auto__ = (G__11593.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4424__auto__) || (G__11593.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11593.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11593);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11593);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__11594 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11594) : cljs.core.key.call(null,G__11594));
})(),(function (){var G__11595 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11595) : cljs.core.val.call(null,G__11595));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11599 = cljs.core.next(es);
var G__11600 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__11596 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11596) : cljs.core.key.call(null,G__11596));
})(),(function (){var G__11597 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11597) : cljs.core.val.call(null,G__11597));
})());
es = G__11599;
tcoll__$2 = G__11600;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__11601 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__11602 = (i + (2));
out = G__11601;
i = G__11602;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__11605 = cljs.core.aclone(arr);
(G__11605[i] = a);

return G__11605;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__11606 = cljs.core.aclone(arr);
(G__11606[i] = a);

(G__11606[j] = b);

return G__11606;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__11611 = init__$1;
var G__11612 = k;
var G__11613 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11611,G__11612,G__11613) : f.call(null,G__11611,G__11612,G__11613));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11614 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11614) : cljs.core.deref.call(null,G__11614));
} else {
var G__11615 = (i + (2));
var G__11616 = init__$2;
i = G__11615;
init__$1 = G__11616;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11617 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11617) : cljs.core.create_inode_seq.call(null,G__11617));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11631 = (0);
var j_11632 = (0);
while(true){
if((i_11631 < (32))){
if((((self__.bitmap >>> i_11631) & (1)) === (0))){
var G__11633 = (i_11631 + (1));
var G__11634 = j_11632;
i_11631 = G__11633;
j_11632 = G__11634;
continue;
} else {
(nodes[i_11631] = ((!(((self__.arr[j_11632]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_11632])),(self__.arr[j_11632]),(self__.arr[(j_11632 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11632 + (1))])));

var G__11635 = (i_11631 + (1));
var G__11636 = (j_11632 + (2));
i_11631 = G__11635;
j_11632 = G__11636;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11618 = edit__$1;
var G__11619 = (shift + (5));
var G__11620 = key_or_nil;
var G__11621 = val_or_node;
var G__11622 = hash;
var G__11623 = key;
var G__11624 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624) : cljs.core.create_node.call(null,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11637 = (0);
var j_11638 = (0);
while(true){
if((i_11637 < (32))){
if((((self__.bitmap >>> i_11637) & (1)) === (0))){
var G__11639 = (i_11637 + (1));
var G__11640 = j_11638;
i_11637 = G__11639;
j_11638 = G__11640;
continue;
} else {
(nodes[i_11637] = ((!(((self__.arr[j_11638]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_11638])),(self__.arr[j_11638]),(self__.arr[(j_11638 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11638 + (1))])));

var G__11641 = (i_11637 + (1));
var G__11642 = (j_11638 + (2));
i_11637 = G__11641;
j_11638 = G__11642;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11625 = (shift + (5));
var G__11626 = key_or_nil;
var G__11627 = val_or_node;
var G__11628 = hash;
var G__11629 = key;
var G__11630 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__11625,G__11626,G__11627,G__11628,G__11629,G__11630) : cljs.core.create_node.call(null,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__11643 = (i + (1));
var G__11644 = (j + (2));
var G__11645 = (bitmap | ((1) << i));
i = G__11643;
j = G__11644;
bitmap = G__11645;
continue;
} else {
var G__11646 = (i + (1));
var G__11647 = j;
var G__11648 = bitmap;
i = G__11646;
j = G__11647;
bitmap = G__11648;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11649 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__11649) : cljs.core.create_array_node_seq.call(null,G__11649));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11650 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11650) : cljs.core.deref.call(null,G__11650));
} else {
var G__11651 = (i + (1));
var G__11652 = init__$2;
i = G__11651;
init__$1 = G__11652;
continue;
}
} else {
var G__11653 = (i + (1));
var G__11654 = init__$1;
i = G__11653;
init__$1 = G__11654;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__11655 = (i + (2));
i = G__11655;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11656 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11656) : cljs.core.create_inode_seq.call(null,G__11656));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__11657 = self__.nodes;
var G__11658 = (self__.i + (2));
var G__11659 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11657,G__11658,G__11659) : cljs.core.create_inode_seq.call(null,G__11657,G__11658,G__11659));
} else {
var G__11660 = self__.nodes;
var G__11661 = self__.i;
var G__11662 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11660,G__11661,G__11662) : cljs.core.create_inode_seq.call(null,G__11660,G__11661,G__11662));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__11666 = (j + (2));
j = G__11666;
continue;
}
} else {
var G__11667 = (j + (2));
j = G__11667;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11668 = null;
var G__11669 = self__.nodes;
var G__11670 = self__.i;
var G__11671 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__11668,G__11669,G__11670,G__11671) : cljs.core.create_array_node_seq.call(null,G__11668,G__11669,G__11670,G__11671));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__11676 = (j + (1));
j = G__11676;
continue;
}
} else {
var G__11677 = (j + (1));
j = G__11677;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11679 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11679) : cljs.core.keys.call(null,G__11679));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11680 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11680) : cljs.core.vals.call(null,G__11680));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11681 = cljs.core.seq(coll);
var chunk__11682 = null;
var count__11683 = (0);
var i__11684 = (0);
while(true){
if((i__11684 < count__11683)){
var vec__11685 = chunk__11682.cljs$core$IIndexed$_nth$arity$2(null,i__11684);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11685,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11685,(1),null);
var G__11686_11697 = v;
var G__11687_11698 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11686_11697,G__11687_11698) : f.call(null,G__11686_11697,G__11687_11698));

var G__11699 = seq__11681;
var G__11700 = chunk__11682;
var G__11701 = count__11683;
var G__11702 = (i__11684 + (1));
seq__11681 = G__11699;
chunk__11682 = G__11700;
count__11683 = G__11701;
i__11684 = G__11702;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11681);
if(temp__4126__auto__){
var seq__11681__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11681__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__11681__$1);
var G__11703 = cljs.core.chunk_rest(seq__11681__$1);
var G__11704 = c__4530__auto__;
var G__11705 = cljs.core.count(c__4530__auto__);
var G__11706 = (0);
seq__11681 = G__11703;
chunk__11682 = G__11704;
count__11683 = G__11705;
i__11684 = G__11706;
continue;
} else {
var vec__11688 = cljs.core.first(seq__11681__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11688,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11688,(1),null);
var G__11689_11707 = v;
var G__11690_11708 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11689_11707,G__11690_11708) : f.call(null,G__11689_11707,G__11690_11708));

var G__11709 = cljs.core.next(seq__11681__$1);
var G__11710 = null;
var G__11711 = (0);
var G__11712 = (0);
seq__11681 = G__11709;
chunk__11682 = G__11710;
count__11683 = G__11711;
i__11684 = G__11712;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__11691 = init;
var G__11692 = null;
var G__11693 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11691,G__11692,G__11693) : f.call(null,G__11691,G__11692,G__11693));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11694 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11694) : cljs.core.deref.call(null,G__11694));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj11696 = {};
return obj11696;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11713 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11714 = cljs.core.next(es);
ret = G__11713;
es = G__11714;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__11715 = null;
var G__11715__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11715__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11715 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11715__2.call(this,self__,k);
case 3:
return G__11715__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11715.cljs$core$IFn$_invoke$arity$2 = G__11715__2;
G__11715.cljs$core$IFn$_invoke$arity$3 = G__11715__3;
return G__11715;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args11678){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11678)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11716 = (i + (1));
var G__11717 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__11716;
out = G__11717;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__11718 = o;
if(G__11718){
var bit__4424__auto__ = (G__11718.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4424__auto__) || (G__11718.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11718.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11718);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11718);
}
})()){
return tcoll.assoc_BANG_((function (){var G__11719 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11719) : cljs.core.key.call(null,G__11719));
})(),(function (){var G__11720 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11720) : cljs.core.val.call(null,G__11720));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11723 = cljs.core.next(es);
var G__11724 = tcoll__$1.assoc_BANG_((function (){var G__11721 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11721) : cljs.core.key.call(null,G__11721));
})(),(function (){var G__11722 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11722) : cljs.core.val.call(null,G__11722));
})());
es = G__11723;
tcoll__$1 = G__11724;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__11725 = ((ascending_QMARK_)?t.left:t.right);
var G__11726 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__11725;
stack__$1 = G__11726;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11739 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11739) : cljs.core.deref.call(null,G__11739));
} else {
var init__$2 = (function (){var G__11740 = init__$1;
var G__11741 = node.key;
var G__11742 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11740,G__11741,G__11742) : f.call(null,G__11740,G__11741,G__11742));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11743 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11743) : cljs.core.deref.call(null,G__11743));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__11744 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11744) : cljs.core.deref.call(null,G__11744));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__11746 = null;
var G__11746__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11746__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11746 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11746__2.call(this,self__,k);
case 3:
return G__11746__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11746.cljs$core$IFn$_invoke$arity$2 = G__11746__2;
G__11746.cljs$core$IFn$_invoke$arity$3 = G__11746__3;
return G__11746;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args11745){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11745)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__11748 = null;
var G__11748__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11748__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11748 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11748__2.call(this,self__,k);
case 3:
return G__11748__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11748.cljs$core$IFn$_invoke$arity$2 = G__11748__2;
G__11748.cljs$core$IFn$_invoke$arity$3 = G__11748__3;
return G__11748;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args11747){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11747)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__11761 = k;
var G__11762 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11761,G__11762) : comp.call(null,G__11761,G__11762));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__11781 = k;
var G__11782 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11781,G__11782) : comp.call(null,G__11781,G__11782));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__11793 = k;
var G__11794 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11793,G__11794) : comp.call(null,G__11793,G__11794));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11796 = cljs.core.seq(coll);
var chunk__11797 = null;
var count__11798 = (0);
var i__11799 = (0);
while(true){
if((i__11799 < count__11798)){
var vec__11800 = chunk__11797.cljs$core$IIndexed$_nth$arity$2(null,i__11799);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11800,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11800,(1),null);
var G__11801_11813 = v;
var G__11802_11814 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11801_11813,G__11802_11814) : f.call(null,G__11801_11813,G__11802_11814));

var G__11815 = seq__11796;
var G__11816 = chunk__11797;
var G__11817 = count__11798;
var G__11818 = (i__11799 + (1));
seq__11796 = G__11815;
chunk__11797 = G__11816;
count__11798 = G__11817;
i__11799 = G__11818;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11796);
if(temp__4126__auto__){
var seq__11796__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11796__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__11796__$1);
var G__11819 = cljs.core.chunk_rest(seq__11796__$1);
var G__11820 = c__4530__auto__;
var G__11821 = cljs.core.count(c__4530__auto__);
var G__11822 = (0);
seq__11796 = G__11819;
chunk__11797 = G__11820;
count__11798 = G__11821;
i__11799 = G__11822;
continue;
} else {
var vec__11803 = cljs.core.first(seq__11796__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11803,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11803,(1),null);
var G__11804_11823 = v;
var G__11805_11824 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11804_11823,G__11805_11824) : f.call(null,G__11804_11823,G__11805_11824));

var G__11825 = cljs.core.next(seq__11796__$1);
var G__11826 = null;
var G__11827 = (0);
var G__11828 = (0);
seq__11796 = G__11825;
chunk__11797 = G__11826;
count__11798 = G__11827;
i__11799 = G__11828;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11806 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11806) : cljs.core.keys.call(null,G__11806));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11807 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11807) : cljs.core.vals.call(null,G__11807));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11808 = k;
var G__11809 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11808,G__11809) : self__.comp.call(null,G__11808,G__11809));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__11829 = t.left;
t = G__11829;
continue;
} else {
var G__11830 = t.right;
t = G__11830;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11831 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11832 = cljs.core.next(es);
ret = G__11831;
es = G__11832;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__11833 = null;
var G__11833__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11833__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11833 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11833__2.call(this,self__,k);
case 3:
return G__11833__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11833.cljs$core$IFn$_invoke$arity$2 = G__11833__2;
G__11833.cljs$core$IFn$_invoke$arity$3 = G__11833__3;
return G__11833;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args11795){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11795)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11810 = k;
var G__11811 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11810,G__11811) : self__.comp.call(null,G__11810,G__11811));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__11834 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11835 = t.left;
stack = G__11834;
t = G__11835;
continue;
} else {
var G__11836 = stack;
var G__11837 = t.right;
stack = G__11836;
t = G__11837;
continue;
}
} else {
if((c > (0))){
var G__11838 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11839 = t.right;
stack = G__11838;
t = G__11839;
continue;
} else {
var G__11840 = stack;
var G__11841 = t.left;
stack = G__11840;
t = G__11841;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__11812 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11812) : cljs.core.key.call(null,G__11812));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__11842 = cljs.core.nnext(in$);
var G__11843 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11842;
out = G__11843;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11844__i = 0, G__11844__a = new Array(arguments.length -  0);
while (G__11844__i < G__11844__a.length) {G__11844__a[G__11844__i] = arguments[G__11844__i + 0]; ++G__11844__i;}
  keyvals = new cljs.core.IndexedSeq(G__11844__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__11845){
var keyvals = cljs.core.seq(arglist__11845);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11846__i = 0, G__11846__a = new Array(arguments.length -  0);
while (G__11846__i < G__11846__a.length) {G__11846__a[G__11846__i] = arguments[G__11846__i + 0]; ++G__11846__i;}
  keyvals = new cljs.core.IndexedSeq(G__11846__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__11847){
var keyvals = cljs.core.seq(arglist__11847);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj11851 = {};
return obj11851;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__11852 = cljs.core.nnext(kvs);
kvs = G__11852;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11853__i = 0, G__11853__a = new Array(arguments.length -  0);
while (G__11853__i < G__11853__a.length) {G__11853__a[G__11853__i] = arguments[G__11853__i + 0]; ++G__11853__i;}
  keyvals = new cljs.core.IndexedSeq(G__11853__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__11854){
var keyvals = cljs.core.seq(arglist__11854);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__11855 = cljs.core.nnext(in$);
var G__11856 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11855;
out = G__11856;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11857__i = 0, G__11857__a = new Array(arguments.length -  0);
while (G__11857__i < G__11857__a.length) {G__11857__a[G__11857__i] = arguments[G__11857__i + 0]; ++G__11857__i;}
  keyvals = new cljs.core.IndexedSeq(G__11857__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__11858){
var keyvals = cljs.core.seq(arglist__11858);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__11859 = cljs.core.nnext(in$);
var G__11860 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11859;
out = G__11860;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__11861__i = 0, G__11861__a = new Array(arguments.length -  1);
while (G__11861__i < G__11861__a.length) {G__11861__a[G__11861__i] = arguments[G__11861__i + 1]; ++G__11861__i;}
  keyvals = new cljs.core.IndexedSeq(G__11861__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__11862){
var comparator = cljs.core.first(arglist__11862);
var keyvals = cljs.core.rest(arglist__11862);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11863 = self__.mseq;
if(G__11863){
var bit__4424__auto__ = (G__11863.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4424__auto__) || (G__11863.cljs$core$INext$)){
return true;
} else {
if((!G__11863.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11863);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11863);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11864 = self__.mseq;
if(G__11864){
var bit__4424__auto__ = (G__11864.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4424__auto__) || (G__11864.cljs$core$INext$)){
return true;
} else {
if((!G__11864.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11864);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11864);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11865 = self__.mseq;
if(G__11865){
var bit__4424__auto__ = (G__11865.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4424__auto__) || (G__11865.cljs$core$INext$)){
return true;
} else {
if((!G__11865.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11865);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11865);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11866 = self__.mseq;
if(G__11866){
var bit__4424__auto__ = (G__11866.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4424__auto__) || (G__11866.cljs$core$INext$)){
return true;
} else {
if((!G__11866.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11866);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11866);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__11867_SHARP_,p2__11868_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3743__auto__ = p1__11867_SHARP_;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__11868_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__11869__i = 0, G__11869__a = new Array(arguments.length -  0);
while (G__11869__i < G__11869__a.length) {G__11869__a[G__11869__i] = arguments[G__11869__i + 0]; ++G__11869__i;}
  maps = new cljs.core.IndexedSeq(G__11869__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__11870){
var maps = cljs.core.seq(arglist__11870);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11873 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11874 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11873,G__11874) : f.call(null,G__11873,G__11874));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3743__auto__ = m1;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__11875__i = 0, G__11875__a = new Array(arguments.length -  1);
while (G__11875__i < G__11875__a.length) {G__11875__a[G__11875__i] = arguments[G__11875__i + 1]; ++G__11875__i;}
  maps = new cljs.core.IndexedSeq(G__11875__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__11876){
var f = cljs.core.first(arglist__11876);
var maps = cljs.core.rest(arglist__11876);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__11877 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__11878 = cljs.core.next(keys);
ret = G__11877;
keys = G__11878;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11881 = cljs.core.seq(coll);
var chunk__11882 = null;
var count__11883 = (0);
var i__11884 = (0);
while(true){
if((i__11884 < count__11883)){
var vec__11885 = chunk__11882.cljs$core$IIndexed$_nth$arity$2(null,i__11884);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11885,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11885,(1),null);
var G__11886_11891 = v;
var G__11887_11892 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11886_11891,G__11887_11892) : f.call(null,G__11886_11891,G__11887_11892));

var G__11893 = seq__11881;
var G__11894 = chunk__11882;
var G__11895 = count__11883;
var G__11896 = (i__11884 + (1));
seq__11881 = G__11893;
chunk__11882 = G__11894;
count__11883 = G__11895;
i__11884 = G__11896;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11881);
if(temp__4126__auto__){
var seq__11881__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11881__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__11881__$1);
var G__11897 = cljs.core.chunk_rest(seq__11881__$1);
var G__11898 = c__4530__auto__;
var G__11899 = cljs.core.count(c__4530__auto__);
var G__11900 = (0);
seq__11881 = G__11897;
chunk__11882 = G__11898;
count__11883 = G__11899;
i__11884 = G__11900;
continue;
} else {
var vec__11888 = cljs.core.first(seq__11881__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11888,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11888,(1),null);
var G__11889_11901 = v;
var G__11890_11902 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11889_11901,G__11890_11902) : f.call(null,G__11889_11901,G__11890_11902));

var G__11903 = cljs.core.next(seq__11881__$1);
var G__11904 = null;
var G__11905 = (0);
var G__11906 = (0);
seq__11881 = G__11903;
chunk__11882 = G__11904;
count__11883 = G__11905;
i__11884 = G__11906;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11879_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11879_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__11907 = null;
var G__11907__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11907__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11907 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11907__2.call(this,self__,k);
case 3:
return G__11907__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11907.cljs$core$IFn$_invoke$arity$2 = G__11907__2;
G__11907.cljs$core$IFn$_invoke$arity$3 = G__11907__3;
return G__11907;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args11880){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11880)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11908 = (i + (1));
var G__11909 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__11908;
out = G__11909;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__11910 = (i + (1));
var G__11911 = cljs.core._conj_BANG_(out,(items[i]));
i = G__11910;
out = G__11911;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__11913 = null;
var G__11913__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__11913__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__11913 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11913__2.call(this,self__,k);
case 3:
return G__11913__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11913.cljs$core$IFn$_invoke$arity$2 = G__11913__2;
G__11913.cljs$core$IFn$_invoke$arity$3 = G__11913__3;
return G__11913;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args11912){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11912)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11916 = cljs.core.seq(coll);
var chunk__11917 = null;
var count__11918 = (0);
var i__11919 = (0);
while(true){
if((i__11919 < count__11918)){
var vec__11920 = chunk__11917.cljs$core$IIndexed$_nth$arity$2(null,i__11919);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11920,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11920,(1),null);
var G__11921_11926 = v;
var G__11922_11927 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11921_11926,G__11922_11927) : f.call(null,G__11921_11926,G__11922_11927));

var G__11928 = seq__11916;
var G__11929 = chunk__11917;
var G__11930 = count__11918;
var G__11931 = (i__11919 + (1));
seq__11916 = G__11928;
chunk__11917 = G__11929;
count__11918 = G__11930;
i__11919 = G__11931;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11916);
if(temp__4126__auto__){
var seq__11916__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11916__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__11916__$1);
var G__11932 = cljs.core.chunk_rest(seq__11916__$1);
var G__11933 = c__4530__auto__;
var G__11934 = cljs.core.count(c__4530__auto__);
var G__11935 = (0);
seq__11916 = G__11932;
chunk__11917 = G__11933;
count__11918 = G__11934;
i__11919 = G__11935;
continue;
} else {
var vec__11923 = cljs.core.first(seq__11916__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11923,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11923,(1),null);
var G__11924_11936 = v;
var G__11925_11937 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11924_11936,G__11925_11937) : f.call(null,G__11924_11936,G__11925_11937));

var G__11938 = cljs.core.next(seq__11916__$1);
var G__11939 = null;
var G__11940 = (0);
var G__11941 = (0);
seq__11916 = G__11938;
chunk__11917 = G__11939;
count__11918 = G__11940;
i__11919 = G__11941;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11914_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11914_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__11942 = null;
var G__11942__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11942__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11942 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11942__2.call(this,self__,k);
case 3:
return G__11942__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11942.cljs$core$IFn$_invoke$arity$2 = G__11942__2;
G__11942.cljs$core$IFn$_invoke$arity$3 = G__11942__3;
return G__11942;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args11915){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11915)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4624__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4624__auto__.length)){
var G__11943 = (i + (1));
var G__11944 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__11943;
res = G__11944;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__11945 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__11946 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__11945;
out = G__11946;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__11947__delegate = function (keys){
return cljs.core.set(keys);
};
var G__11947 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11948__i = 0, G__11948__a = new Array(arguments.length -  0);
while (G__11948__i < G__11948__a.length) {G__11948__a[G__11948__i] = arguments[G__11948__i + 0]; ++G__11948__i;}
  keys = new cljs.core.IndexedSeq(G__11948__a,0);
} 
return G__11947__delegate.call(this,keys);};
G__11947.cljs$lang$maxFixedArity = 0;
G__11947.cljs$lang$applyTo = (function (arglist__11949){
var keys = cljs.core.seq(arglist__11949);
return G__11947__delegate(keys);
});
G__11947.cljs$core$IFn$_invoke$arity$variadic = G__11947__delegate;
return G__11947;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__11950 = null;
if (arguments.length > 0) {
var G__11951__i = 0, G__11951__a = new Array(arguments.length -  0);
while (G__11951__i < G__11951__a.length) {G__11951__a[G__11951__i] = arguments[G__11951__i + 0]; ++G__11951__i;}
G__11950 = new cljs.core.IndexedSeq(G__11951__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__11950);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11952__i = 0, G__11952__a = new Array(arguments.length -  0);
while (G__11952__i < G__11952__a.length) {G__11952__a[G__11952__i] = arguments[G__11952__i + 0]; ++G__11952__i;}
  keys = new cljs.core.IndexedSeq(G__11952__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__11953){
var keys = cljs.core.seq(arglist__11953);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__11954__i = 0, G__11954__a = new Array(arguments.length -  1);
while (G__11954__i < G__11954__a.length) {G__11954__a[G__11954__i] = arguments[G__11954__i + 1]; ++G__11954__i;}
  keys = new cljs.core.IndexedSeq(G__11954__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__11955){
var comparator = cljs.core.first(arglist__11955);
var keys = cljs.core.rest(arglist__11955);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__11956_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11956_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__11956_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11957_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11957_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__11957_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__11968,seen__$1){
while(true){
var vec__11969 = p__11968;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11969,(0),null);
var xs__$1 = vec__11969;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__11970 = cljs.core.rest(s);
var G__11971 = seen__$1;
p__11968 = G__11970;
seen__$1 = G__11971;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__11972 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__11973 = cljs.core.next(s__$1);
ret = G__11972;
s__$1 = G__11973;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__11975 = x;
if(G__11975){
var bit__4417__auto__ = (G__11975.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4417__auto__) || (G__11975.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__11976 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__11977 = cljs.core.next(ks);
var G__11978 = cljs.core.next(vs);
map = G__11976;
ks = G__11977;
vs = G__11978;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__11989 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11989) : k.call(null,G__11989));
})() > (function (){var G__11990 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11990) : k.call(null,G__11990));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__11991__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11979_SHARP_,p2__11980_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__11979_SHARP_,p2__11980_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11991 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11992__i = 0, G__11992__a = new Array(arguments.length -  3);
while (G__11992__i < G__11992__a.length) {G__11992__a[G__11992__i] = arguments[G__11992__i + 3]; ++G__11992__i;}
  more = new cljs.core.IndexedSeq(G__11992__a,0);
} 
return G__11991__delegate.call(this,k,x,y,more);};
G__11991.cljs$lang$maxFixedArity = 3;
G__11991.cljs$lang$applyTo = (function (arglist__11993){
var k = cljs.core.first(arglist__11993);
arglist__11993 = cljs.core.next(arglist__11993);
var x = cljs.core.first(arglist__11993);
arglist__11993 = cljs.core.next(arglist__11993);
var y = cljs.core.first(arglist__11993);
var more = cljs.core.rest(arglist__11993);
return G__11991__delegate(k,x,y,more);
});
G__11991.cljs$core$IFn$_invoke$arity$variadic = G__11991__delegate;
return G__11991;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__11994 = null;
if (arguments.length > 3) {
var G__11995__i = 0, G__11995__a = new Array(arguments.length -  3);
while (G__11995__i < G__11995__a.length) {G__11995__a[G__11995__i] = arguments[G__11995__i + 3]; ++G__11995__i;}
G__11994 = new cljs.core.IndexedSeq(G__11995__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11994);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__12006 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__12006) : k.call(null,G__12006));
})() < (function (){var G__12007 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__12007) : k.call(null,G__12007));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__12008__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11996_SHARP_,p2__11997_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__11996_SHARP_,p2__11997_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__12008 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__12009__i = 0, G__12009__a = new Array(arguments.length -  3);
while (G__12009__i < G__12009__a.length) {G__12009__a[G__12009__i] = arguments[G__12009__i + 3]; ++G__12009__i;}
  more = new cljs.core.IndexedSeq(G__12009__a,0);
} 
return G__12008__delegate.call(this,k,x,y,more);};
G__12008.cljs$lang$maxFixedArity = 3;
G__12008.cljs$lang$applyTo = (function (arglist__12010){
var k = cljs.core.first(arglist__12010);
arglist__12010 = cljs.core.next(arglist__12010);
var x = cljs.core.first(arglist__12010);
arglist__12010 = cljs.core.next(arglist__12010);
var y = cljs.core.first(arglist__12010);
var more = cljs.core.rest(arglist__12010);
return G__12008__delegate(k,x,y,more);
});
G__12008.cljs$core$IFn$_invoke$arity$variadic = G__12008__delegate;
return G__12008;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__12011 = null;
if (arguments.length > 3) {
var G__12012__i = 0, G__12012__a = new Array(arguments.length -  3);
while (G__12012__i < G__12012__a.length) {G__12012__a[G__12012__i] = arguments[G__12012__i + 3]; ++G__12012__i;}
G__12011 = new cljs.core.IndexedSeq(G__12012__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__12011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__12029 = null;
var G__12029__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12029__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__12024 = result;
var G__12025 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12024,G__12025) : rf.call(null,G__12024,G__12025));
})());
})());
var G__12026 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12026) : rf.call(null,G__12026));
});
var G__12029__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__12027 = result;
var G__12028 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12027,G__12028) : rf.call(null,G__12027,G__12028));
} else {
return result;
}
});
G__12029 = function(result,input){
switch(arguments.length){
case 0:
return G__12029__0.call(this);
case 1:
return G__12029__1.call(this,result);
case 2:
return G__12029__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12029.cljs$core$IFn$_invoke$arity$0 = G__12029__0;
G__12029.cljs$core$IFn$_invoke$arity$1 = G__12029__1;
G__12029.cljs$core$IFn$_invoke$arity$2 = G__12029__2;
return G__12029;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__12042 = null;
var G__12042__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12042__1 = (function (result){
var G__12037 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12037) : rf.call(null,G__12037));
});
var G__12042__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__12038 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12038) : pred.call(null,G__12038));
})())){
var G__12039 = result;
var G__12040 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12039,G__12040) : rf.call(null,G__12039,G__12040));
} else {
return cljs.core.reduced(result);
}
});
G__12042 = function(result,input){
switch(arguments.length){
case 0:
return G__12042__0.call(this);
case 1:
return G__12042__1.call(this,result);
case 2:
return G__12042__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12042.cljs$core$IFn$_invoke$arity$0 = G__12042__0;
G__12042.cljs$core$IFn$_invoke$arity$1 = G__12042__1;
G__12042.cljs$core$IFn$_invoke$arity$2 = G__12042__2;
return G__12042;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__12041 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12041) : pred.call(null,G__12041));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__12047 = (function (){var G__12049 = cljs.core._entry_key(sc,e);
var G__12050 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__12049,G__12050) : comp.call(null,G__12049,G__12050));
})();
var G__12048 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__12047,G__12048) : test.call(null,G__12047,G__12048));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__12054 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12054,(0),null);
var s = vec__12054;
if(cljs.core.truth_((function (){var G__12055 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__12055) : include.call(null,G__12055));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__12056 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12056,(0),null);
var s = vec__12056;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__12060 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12060,(0),null);
var s = vec__12060;
if(cljs.core.truth_((function (){var G__12061 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__12061) : include.call(null,G__12061));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__12062 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12062,(0),null);
var s = vec__12062;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__12063 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12063) : Math.ceil.call(null,G__12063));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4164__auto__ = self__.__hash;
if(!((h__4164__auto__ == null))){
return h__4164__auto__;
} else {
var h__4164__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4164__auto____$1;

return h__4164__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__12064 = ret;
var G__12065 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12064,G__12065) : f.call(null,G__12064,G__12065));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__12066 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12066) : cljs.core.deref.call(null,G__12066));
} else {
var G__12067 = (i + self__.step);
var G__12068 = ret__$1;
i = G__12067;
ret = G__12068;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__12086 = null;
var G__12086__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12086__1 = (function (result){
var G__12083 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12083) : rf.call(null,G__12083));
});
var G__12086__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__12084 = result;
var G__12085 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12084,G__12085) : rf.call(null,G__12084,G__12085));
} else {
return result;
}
});
G__12086 = function(result,input){
switch(arguments.length){
case 0:
return G__12086__0.call(this);
case 1:
return G__12086__1.call(this,result);
case 2:
return G__12086__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12086.cljs$core$IFn$_invoke$arity$0 = G__12086__0;
G__12086.cljs$core$IFn$_invoke$arity$1 = G__12086__1;
G__12086.cljs$core$IFn$_invoke$arity$2 = G__12086__2;
return G__12086;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__12108 = null;
var G__12108__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12108__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__12099 = result;
var G__12100 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12099,G__12100) : rf.call(null,G__12099,G__12100));
})());
})());
var G__12101 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12101) : rf.call(null,G__12101));
});
var G__12108__2 = (function (result,input){
var pval = (function (){var G__12102 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12102) : cljs.core.deref.call(null,G__12102));
})();
var val = (function (){var G__12103 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12103) : f.call(null,G__12103));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__12104 = result;
var G__12105 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12104,G__12105) : rf.call(null,G__12104,G__12105));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__12108 = function(result,input){
switch(arguments.length){
case 0:
return G__12108__0.call(this);
case 1:
return G__12108__1.call(this,result);
case 2:
return G__12108__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12108.cljs$core$IFn$_invoke$arity$0 = G__12108__0;
G__12108.cljs$core$IFn$_invoke$arity$1 = G__12108__1;
G__12108.cljs$core$IFn$_invoke$arity$2 = G__12108__2;
return G__12108;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__12106 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12106) : f.call(null,G__12106));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__12087_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__12107 = p1__12087_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12107) : f.call(null,G__12107));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__12117 = init;
var G__12118 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12117,G__12118) : f.call(null,G__12117,G__12118));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__12213 = null;
var G__12213__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__12213__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12171 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12171) : f.call(null,G__12171));
})()],null));
});
var G__12213__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12172 = x;
var G__12173 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12172,G__12173) : f.call(null,G__12172,G__12173));
})()],null));
});
var G__12213__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12174 = x;
var G__12175 = y;
var G__12176 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12174,G__12175,G__12176) : f.call(null,G__12174,G__12175,G__12176));
})()],null));
});
var G__12213__4 = (function() { 
var G__12214__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__12214 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12215__i = 0, G__12215__a = new Array(arguments.length -  3);
while (G__12215__i < G__12215__a.length) {G__12215__a[G__12215__i] = arguments[G__12215__i + 3]; ++G__12215__i;}
  args = new cljs.core.IndexedSeq(G__12215__a,0);
} 
return G__12214__delegate.call(this,x,y,z,args);};
G__12214.cljs$lang$maxFixedArity = 3;
G__12214.cljs$lang$applyTo = (function (arglist__12216){
var x = cljs.core.first(arglist__12216);
arglist__12216 = cljs.core.next(arglist__12216);
var y = cljs.core.first(arglist__12216);
arglist__12216 = cljs.core.next(arglist__12216);
var z = cljs.core.first(arglist__12216);
var args = cljs.core.rest(arglist__12216);
return G__12214__delegate(x,y,z,args);
});
G__12214.cljs$core$IFn$_invoke$arity$variadic = G__12214__delegate;
return G__12214;
})()
;
G__12213 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12213__0.call(this);
case 1:
return G__12213__1.call(this,x);
case 2:
return G__12213__2.call(this,x,y);
case 3:
return G__12213__3.call(this,x,y,z);
default:
var G__12217 = null;
if (arguments.length > 3) {
var G__12218__i = 0, G__12218__a = new Array(arguments.length -  3);
while (G__12218__i < G__12218__a.length) {G__12218__a[G__12218__i] = arguments[G__12218__i + 3]; ++G__12218__i;}
G__12217 = new cljs.core.IndexedSeq(G__12218__a,0);
}
return G__12213__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12213.cljs$lang$maxFixedArity = 3;
G__12213.cljs$lang$applyTo = G__12213__4.cljs$lang$applyTo;
G__12213.cljs$core$IFn$_invoke$arity$0 = G__12213__0;
G__12213.cljs$core$IFn$_invoke$arity$1 = G__12213__1;
G__12213.cljs$core$IFn$_invoke$arity$2 = G__12213__2;
G__12213.cljs$core$IFn$_invoke$arity$3 = G__12213__3;
G__12213.cljs$core$IFn$_invoke$arity$variadic = G__12213__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12213;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__12219 = null;
var G__12219__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__12219__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12177 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12177) : f.call(null,G__12177));
})(),(function (){var G__12178 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12178) : g.call(null,G__12178));
})()],null));
});
var G__12219__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12179 = x;
var G__12180 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12179,G__12180) : f.call(null,G__12179,G__12180));
})(),(function (){var G__12181 = x;
var G__12182 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12181,G__12182) : g.call(null,G__12181,G__12182));
})()],null));
});
var G__12219__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12183 = x;
var G__12184 = y;
var G__12185 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12183,G__12184,G__12185) : f.call(null,G__12183,G__12184,G__12185));
})(),(function (){var G__12186 = x;
var G__12187 = y;
var G__12188 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12186,G__12187,G__12188) : g.call(null,G__12186,G__12187,G__12188));
})()],null));
});
var G__12219__4 = (function() { 
var G__12220__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__12220 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12221__i = 0, G__12221__a = new Array(arguments.length -  3);
while (G__12221__i < G__12221__a.length) {G__12221__a[G__12221__i] = arguments[G__12221__i + 3]; ++G__12221__i;}
  args = new cljs.core.IndexedSeq(G__12221__a,0);
} 
return G__12220__delegate.call(this,x,y,z,args);};
G__12220.cljs$lang$maxFixedArity = 3;
G__12220.cljs$lang$applyTo = (function (arglist__12222){
var x = cljs.core.first(arglist__12222);
arglist__12222 = cljs.core.next(arglist__12222);
var y = cljs.core.first(arglist__12222);
arglist__12222 = cljs.core.next(arglist__12222);
var z = cljs.core.first(arglist__12222);
var args = cljs.core.rest(arglist__12222);
return G__12220__delegate(x,y,z,args);
});
G__12220.cljs$core$IFn$_invoke$arity$variadic = G__12220__delegate;
return G__12220;
})()
;
G__12219 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12219__0.call(this);
case 1:
return G__12219__1.call(this,x);
case 2:
return G__12219__2.call(this,x,y);
case 3:
return G__12219__3.call(this,x,y,z);
default:
var G__12223 = null;
if (arguments.length > 3) {
var G__12224__i = 0, G__12224__a = new Array(arguments.length -  3);
while (G__12224__i < G__12224__a.length) {G__12224__a[G__12224__i] = arguments[G__12224__i + 3]; ++G__12224__i;}
G__12223 = new cljs.core.IndexedSeq(G__12224__a,0);
}
return G__12219__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12219.cljs$lang$maxFixedArity = 3;
G__12219.cljs$lang$applyTo = G__12219__4.cljs$lang$applyTo;
G__12219.cljs$core$IFn$_invoke$arity$0 = G__12219__0;
G__12219.cljs$core$IFn$_invoke$arity$1 = G__12219__1;
G__12219.cljs$core$IFn$_invoke$arity$2 = G__12219__2;
G__12219.cljs$core$IFn$_invoke$arity$3 = G__12219__3;
G__12219.cljs$core$IFn$_invoke$arity$variadic = G__12219__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12219;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__12225 = null;
var G__12225__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__12225__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12189 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12189) : f.call(null,G__12189));
})(),(function (){var G__12190 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12190) : g.call(null,G__12190));
})(),(function (){var G__12191 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12191) : h.call(null,G__12191));
})()],null));
});
var G__12225__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12192 = x;
var G__12193 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12192,G__12193) : f.call(null,G__12192,G__12193));
})(),(function (){var G__12194 = x;
var G__12195 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12194,G__12195) : g.call(null,G__12194,G__12195));
})(),(function (){var G__12196 = x;
var G__12197 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12196,G__12197) : h.call(null,G__12196,G__12197));
})()],null));
});
var G__12225__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__12198 = x;
var G__12199 = y;
var G__12200 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12198,G__12199,G__12200) : f.call(null,G__12198,G__12199,G__12200));
})(),(function (){var G__12201 = x;
var G__12202 = y;
var G__12203 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12201,G__12202,G__12203) : g.call(null,G__12201,G__12202,G__12203));
})(),(function (){var G__12204 = x;
var G__12205 = y;
var G__12206 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12204,G__12205,G__12206) : h.call(null,G__12204,G__12205,G__12206));
})()],null));
});
var G__12225__4 = (function() { 
var G__12226__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__12226 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12227__i = 0, G__12227__a = new Array(arguments.length -  3);
while (G__12227__i < G__12227__a.length) {G__12227__a[G__12227__i] = arguments[G__12227__i + 3]; ++G__12227__i;}
  args = new cljs.core.IndexedSeq(G__12227__a,0);
} 
return G__12226__delegate.call(this,x,y,z,args);};
G__12226.cljs$lang$maxFixedArity = 3;
G__12226.cljs$lang$applyTo = (function (arglist__12228){
var x = cljs.core.first(arglist__12228);
arglist__12228 = cljs.core.next(arglist__12228);
var y = cljs.core.first(arglist__12228);
arglist__12228 = cljs.core.next(arglist__12228);
var z = cljs.core.first(arglist__12228);
var args = cljs.core.rest(arglist__12228);
return G__12226__delegate(x,y,z,args);
});
G__12226.cljs$core$IFn$_invoke$arity$variadic = G__12226__delegate;
return G__12226;
})()
;
G__12225 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12225__0.call(this);
case 1:
return G__12225__1.call(this,x);
case 2:
return G__12225__2.call(this,x,y);
case 3:
return G__12225__3.call(this,x,y,z);
default:
var G__12229 = null;
if (arguments.length > 3) {
var G__12230__i = 0, G__12230__a = new Array(arguments.length -  3);
while (G__12230__i < G__12230__a.length) {G__12230__a[G__12230__i] = arguments[G__12230__i + 3]; ++G__12230__i;}
G__12229 = new cljs.core.IndexedSeq(G__12230__a,0);
}
return G__12225__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12225.cljs$lang$maxFixedArity = 3;
G__12225.cljs$lang$applyTo = G__12225__4.cljs$lang$applyTo;
G__12225.cljs$core$IFn$_invoke$arity$0 = G__12225__0;
G__12225.cljs$core$IFn$_invoke$arity$1 = G__12225__1;
G__12225.cljs$core$IFn$_invoke$arity$2 = G__12225__2;
G__12225.cljs$core$IFn$_invoke$arity$3 = G__12225__3;
G__12225.cljs$core$IFn$_invoke$arity$variadic = G__12225__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12225;
})()
});
var juxt__4 = (function() { 
var G__12231__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__12232 = null;
var G__12232__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12119_SHARP_,p2__12120_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12119_SHARP_,(function (){return (p2__12120_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__12120_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__12120_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12232__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12121_SHARP_,p2__12122_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12121_SHARP_,(function (){var G__12207 = x;
return (p2__12122_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__12122_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12207) : p2__12122_SHARP_.call(null,G__12207));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12232__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12123_SHARP_,p2__12124_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12123_SHARP_,(function (){var G__12208 = x;
var G__12209 = y;
return (p2__12124_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__12124_SHARP_.cljs$core$IFn$_invoke$arity$2(G__12208,G__12209) : p2__12124_SHARP_.call(null,G__12208,G__12209));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12232__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12125_SHARP_,p2__12126_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12125_SHARP_,(function (){var G__12210 = x;
var G__12211 = y;
var G__12212 = z;
return (p2__12126_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__12126_SHARP_.cljs$core$IFn$_invoke$arity$3(G__12210,G__12211,G__12212) : p2__12126_SHARP_.call(null,G__12210,G__12211,G__12212));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__12232__4 = (function() { 
var G__12233__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__12127_SHARP_,p2__12128_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12127_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__12128_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__12233 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12234__i = 0, G__12234__a = new Array(arguments.length -  3);
while (G__12234__i < G__12234__a.length) {G__12234__a[G__12234__i] = arguments[G__12234__i + 3]; ++G__12234__i;}
  args = new cljs.core.IndexedSeq(G__12234__a,0);
} 
return G__12233__delegate.call(this,x,y,z,args);};
G__12233.cljs$lang$maxFixedArity = 3;
G__12233.cljs$lang$applyTo = (function (arglist__12235){
var x = cljs.core.first(arglist__12235);
arglist__12235 = cljs.core.next(arglist__12235);
var y = cljs.core.first(arglist__12235);
arglist__12235 = cljs.core.next(arglist__12235);
var z = cljs.core.first(arglist__12235);
var args = cljs.core.rest(arglist__12235);
return G__12233__delegate(x,y,z,args);
});
G__12233.cljs$core$IFn$_invoke$arity$variadic = G__12233__delegate;
return G__12233;
})()
;
G__12232 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12232__0.call(this);
case 1:
return G__12232__1.call(this,x);
case 2:
return G__12232__2.call(this,x,y);
case 3:
return G__12232__3.call(this,x,y,z);
default:
var G__12236 = null;
if (arguments.length > 3) {
var G__12237__i = 0, G__12237__a = new Array(arguments.length -  3);
while (G__12237__i < G__12237__a.length) {G__12237__a[G__12237__i] = arguments[G__12237__i + 3]; ++G__12237__i;}
G__12236 = new cljs.core.IndexedSeq(G__12237__a,0);
}
return G__12232__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12236);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12232.cljs$lang$maxFixedArity = 3;
G__12232.cljs$lang$applyTo = G__12232__4.cljs$lang$applyTo;
G__12232.cljs$core$IFn$_invoke$arity$0 = G__12232__0;
G__12232.cljs$core$IFn$_invoke$arity$1 = G__12232__1;
G__12232.cljs$core$IFn$_invoke$arity$2 = G__12232__2;
G__12232.cljs$core$IFn$_invoke$arity$3 = G__12232__3;
G__12232.cljs$core$IFn$_invoke$arity$variadic = G__12232__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12232;
})()
;})(fs__$1))
};
var G__12231 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__12238__i = 0, G__12238__a = new Array(arguments.length -  3);
while (G__12238__i < G__12238__a.length) {G__12238__a[G__12238__i] = arguments[G__12238__i + 3]; ++G__12238__i;}
  fs = new cljs.core.IndexedSeq(G__12238__a,0);
} 
return G__12231__delegate.call(this,f,g,h,fs);};
G__12231.cljs$lang$maxFixedArity = 3;
G__12231.cljs$lang$applyTo = (function (arglist__12239){
var f = cljs.core.first(arglist__12239);
arglist__12239 = cljs.core.next(arglist__12239);
var g = cljs.core.first(arglist__12239);
arglist__12239 = cljs.core.next(arglist__12239);
var h = cljs.core.first(arglist__12239);
var fs = cljs.core.rest(arglist__12239);
return G__12231__delegate(f,g,h,fs);
});
G__12231.cljs$core$IFn$_invoke$arity$variadic = G__12231__delegate;
return G__12231;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__12240 = null;
if (arguments.length > 3) {
var G__12241__i = 0, G__12241__a = new Array(arguments.length -  3);
while (G__12241__i < G__12241__a.length) {G__12241__a[G__12241__i] = arguments[G__12241__i + 3]; ++G__12241__i;}
G__12240 = new cljs.core.IndexedSeq(G__12241__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__12240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__12242 = cljs.core.next(coll);
coll = G__12242;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__12243 = (n - (1));
var G__12244 = cljs.core.next(coll);
n = G__12243;
coll = G__12244;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__12248 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12248,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12248,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12248,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_12256 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__12257_12263 = cljs.core.first(coll);
var G__12258_12264 = writer;
var G__12259_12265 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12257_12263,G__12258_12264,G__12259_12265) : print_one.call(null,G__12257_12263,G__12258_12264,G__12259_12265));
} else {
}

var coll_12266__$1 = cljs.core.next(coll);
var n_12267 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_12266__$1) && (((n_12267 == null)) || (!((n_12267 === (0)))))){
cljs.core._write(writer,sep);

var G__12260_12268 = cljs.core.first(coll_12266__$1);
var G__12261_12269 = writer;
var G__12262_12270 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12260_12268,G__12261_12269,G__12262_12270) : print_one.call(null,G__12260_12268,G__12261_12269,G__12262_12270));

var G__12271 = cljs.core.next(coll_12266__$1);
var G__12272 = (n_12267 - (1));
coll_12266__$1 = G__12271;
n_12267 = G__12272;
continue;
} else {
if((cljs.core.seq(coll_12266__$1)) && ((n_12267 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_12256;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__12277 = cljs.core.seq(ss);
var chunk__12278 = null;
var count__12279 = (0);
var i__12280 = (0);
while(true){
if((i__12280 < count__12279)){
var s = chunk__12278.cljs$core$IIndexed$_nth$arity$2(null,i__12280);
cljs.core._write(writer,s);

var G__12281 = seq__12277;
var G__12282 = chunk__12278;
var G__12283 = count__12279;
var G__12284 = (i__12280 + (1));
seq__12277 = G__12281;
chunk__12278 = G__12282;
count__12279 = G__12283;
i__12280 = G__12284;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__12277);
if(temp__4126__auto__){
var seq__12277__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12277__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__12277__$1);
var G__12285 = cljs.core.chunk_rest(seq__12277__$1);
var G__12286 = c__4530__auto__;
var G__12287 = cljs.core.count(c__4530__auto__);
var G__12288 = (0);
seq__12277 = G__12285;
chunk__12278 = G__12286;
count__12279 = G__12287;
i__12280 = G__12288;
continue;
} else {
var s = cljs.core.first(seq__12277__$1);
cljs.core._write(writer,s);

var G__12289 = cljs.core.next(seq__12277__$1);
var G__12290 = null;
var G__12291 = (0);
var G__12292 = (0);
seq__12277 = G__12289;
chunk__12278 = G__12290;
count__12279 = G__12291;
i__12280 = G__12292;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__12293__i = 0, G__12293__a = new Array(arguments.length -  1);
while (G__12293__i < G__12293__a.length) {G__12293__a[G__12293__i] = arguments[G__12293__i + 1]; ++G__12293__i;}
  ss = new cljs.core.IndexedSeq(G__12293__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__12294){
var writer = cljs.core.first(arglist__12294);
var ss = cljs.core.rest(arglist__12294);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj12296 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj12296;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__12299 = "[\\\\\"\b\f\n\r\t]";
var G__12300 = "g";
return RegExp(G__12299,G__12300);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3731__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3731__auto__)){
var and__3731__auto____$1 = (function (){var G__12314 = obj;
if(G__12314){
var bit__4424__auto__ = (G__12314.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4424__auto__) || (G__12314.cljs$core$IMeta$)){
return true;
} else {
if((!G__12314.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12314);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12314);
}
})();
if(and__3731__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__12315 = obj;
if(G__12315){
var bit__4417__auto__ = (G__12315.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4417__auto__) || (G__12315.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__12316 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__12317 = pr_writer;
var G__12318 = writer;
var G__12319 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__12316,G__12317,G__12318,G__12319) : cljs.core.print_map.call(null,G__12316,G__12317,G__12318,G__12319));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__12320 = obj;
return goog.isString(G__12320);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__12322 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__12322;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__12321 = obj;
if(G__12321){
var bit__4424__auto__ = (G__12321.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4424__auto__) || (G__12321.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__12321.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__12321);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__12321);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__12327 = cljs.core.seq(cljs.core.next(objs));
var chunk__12328 = null;
var count__12329 = (0);
var i__12330 = (0);
while(true){
if((i__12330 < count__12329)){
var obj = chunk__12328.cljs$core$IIndexed$_nth$arity$2(null,i__12330);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__12331 = seq__12327;
var G__12332 = chunk__12328;
var G__12333 = count__12329;
var G__12334 = (i__12330 + (1));
seq__12327 = G__12331;
chunk__12328 = G__12332;
count__12329 = G__12333;
i__12330 = G__12334;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__12327);
if(temp__4126__auto__){
var seq__12327__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12327__$1)){
var c__4530__auto__ = cljs.core.chunk_first(seq__12327__$1);
var G__12335 = cljs.core.chunk_rest(seq__12327__$1);
var G__12336 = c__4530__auto__;
var G__12337 = cljs.core.count(c__4530__auto__);
var G__12338 = (0);
seq__12327 = G__12335;
chunk__12328 = G__12336;
count__12329 = G__12337;
i__12330 = G__12338;
continue;
} else {
var obj = cljs.core.first(seq__12327__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__12339 = cljs.core.next(seq__12327__$1);
var G__12340 = null;
var G__12341 = (0);
var G__12342 = (0);
seq__12327 = G__12339;
chunk__12328 = G__12340;
count__12329 = G__12341;
i__12330 = G__12342;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12343__i = 0, G__12343__a = new Array(arguments.length -  0);
while (G__12343__i < G__12343__a.length) {G__12343__a[G__12343__i] = arguments[G__12343__i + 0]; ++G__12343__i;}
  objs = new cljs.core.IndexedSeq(G__12343__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__12344){
var objs = cljs.core.seq(arglist__12344);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12345__i = 0, G__12345__a = new Array(arguments.length -  0);
while (G__12345__i < G__12345__a.length) {G__12345__a[G__12345__i] = arguments[G__12345__i + 0]; ++G__12345__i;}
  objs = new cljs.core.IndexedSeq(G__12345__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__12346){
var objs = cljs.core.seq(arglist__12346);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12347__i = 0, G__12347__a = new Array(arguments.length -  0);
while (G__12347__i < G__12347__a.length) {G__12347__a[G__12347__i] = arguments[G__12347__i + 0]; ++G__12347__i;}
  objs = new cljs.core.IndexedSeq(G__12347__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__12348){
var objs = cljs.core.seq(arglist__12348);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12349__i = 0, G__12349__a = new Array(arguments.length -  0);
while (G__12349__i < G__12349__a.length) {G__12349__a[G__12349__i] = arguments[G__12349__i + 0]; ++G__12349__i;}
  objs = new cljs.core.IndexedSeq(G__12349__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__12350){
var objs = cljs.core.seq(arglist__12350);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12351__i = 0, G__12351__a = new Array(arguments.length -  0);
while (G__12351__i < G__12351__a.length) {G__12351__a[G__12351__i] = arguments[G__12351__i + 0]; ++G__12351__i;}
  objs = new cljs.core.IndexedSeq(G__12351__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__12352){
var objs = cljs.core.seq(arglist__12352);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12353__i = 0, G__12353__a = new Array(arguments.length -  0);
while (G__12353__i < G__12353__a.length) {G__12353__a[G__12353__i] = arguments[G__12353__i + 0]; ++G__12353__i;}
  objs = new cljs.core.IndexedSeq(G__12353__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__12354){
var objs = cljs.core.seq(arglist__12354);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12355__i = 0, G__12355__a = new Array(arguments.length -  0);
while (G__12355__i < G__12355__a.length) {G__12355__a[G__12355__i] = arguments[G__12355__i + 0]; ++G__12355__i;}
  objs = new cljs.core.IndexedSeq(G__12355__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__12356){
var objs = cljs.core.seq(arglist__12356);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__12357__i = 0, G__12357__a = new Array(arguments.length -  0);
while (G__12357__i < G__12357__a.length) {G__12357__a[G__12357__i] = arguments[G__12357__i + 0]; ++G__12357__i;}
  objs = new cljs.core.IndexedSeq(G__12357__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__12358){
var objs = cljs.core.seq(arglist__12358);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__12365_12371 = cljs.core.key(e);
var G__12366_12372 = w;
var G__12367_12373 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12365_12371,G__12366_12372,G__12367_12373) : print_one.call(null,G__12365_12371,G__12366_12372,G__12367_12373));

cljs.core._write(w," ");

var G__12368 = cljs.core.val(e);
var G__12369 = w;
var G__12370 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12368,G__12369,G__12370) : print_one.call(null,G__12368,G__12369,G__12370));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__12374__i = 0, G__12374__a = new Array(arguments.length -  2);
while (G__12374__i < G__12374__a.length) {G__12374__a[G__12374__i] = arguments[G__12374__i + 2]; ++G__12374__i;}
  args = new cljs.core.IndexedSeq(G__12374__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__12375){
var iref = cljs.core.first(arglist__12375);
arglist__12375 = cljs.core.next(arglist__12375);
var f = cljs.core.first(arglist__12375);
var args = cljs.core.rest(arglist__12375);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__12378 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12378) : cljs.core.atom.call(null,G__12378));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__12380 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12380) : cljs.core.deref.call(null,G__12380));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__12381_SHARP_,p2__12382_SHARP_){
var ret = (function (){var G__12385 = p1__12381_SHARP_;
var G__12386 = p2__12382_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12385,G__12386) : rf.call(null,G__12385,G__12386));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__12389 = null;
var G__12389__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12389__1 = (function (result){
var G__12388 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12388) : rf.call(null,G__12388));
});
var G__12389__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__12389 = function(result,input){
switch(arguments.length){
case 0:
return G__12389__0.call(this);
case 1:
return G__12389__1.call(this,result);
case 2:
return G__12389__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12389.cljs$core$IFn$_invoke$arity$0 = G__12389__0;
G__12389.cljs$core$IFn$_invoke$arity$1 = G__12389__1;
G__12389.cljs$core$IFn$_invoke$arity$2 = G__12389__2;
return G__12389;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__12398 = null;
var G__12398__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12398__1 = (function (result){
var G__12394 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12394) : rf.call(null,G__12394));
});
var G__12398__2 = (function (result,input){
var prior = (function (){var G__12395 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12395) : cljs.core.deref.call(null,G__12395));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__12396 = result;
var G__12397 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12396,G__12397) : rf.call(null,G__12396,G__12397));
}
});
G__12398 = function(result,input){
switch(arguments.length){
case 0:
return G__12398__0.call(this);
case 1:
return G__12398__1.call(this,result);
case 2:
return G__12398__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12398.cljs$core$IFn$_invoke$arity$0 = G__12398__0;
G__12398.cljs$core$IFn$_invoke$arity$1 = G__12398__1;
G__12398.cljs$core$IFn$_invoke$arity$2 = G__12398__2;
return G__12398;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4721__auto__ = this;
return cljs.core.es6_iterator(this__4721__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__12400_SHARP_,p2__12399_SHARP_){
var G__12402 = p2__12399_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__12402) : proc.call(null,G__12402));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj12404 = {};
return obj12404;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._clj__GT_js[(function (){var G__12408 = x__4387__auto__;
return goog.typeOf(G__12408);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._key__GT_js[(function (){var G__12412 = x__4387__auto__;
return goog.typeOf(G__12412);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__12415 = k;
if(G__12415){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto__ = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return G__12415.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__12415.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12415);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12415);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__12416 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__12416) : cljs.core.clj__GT_js.call(null,G__12416));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__12432 = x;
if(G__12432){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto__ = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return G__12432.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__12432.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12432);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__12432);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj12434 = {};
return obj12434;
})();
var seq__12435_12445 = cljs.core.seq(x);
var chunk__12436_12446 = null;
var count__12437_12447 = (0);
var i__12438_12448 = (0);
while(true){
if((i__12438_12448 < count__12437_12447)){
var vec__12439_12449 = chunk__12436_12446.cljs$core$IIndexed$_nth$arity$2(null,i__12438_12448);
var k_12450 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12439_12449,(0),null);
var v_12451 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12439_12449,(1),null);
(m[cljs.core.key__GT_js(k_12450)] = clj__GT_js(v_12451));

var G__12452 = seq__12435_12445;
var G__12453 = chunk__12436_12446;
var G__12454 = count__12437_12447;
var G__12455 = (i__12438_12448 + (1));
seq__12435_12445 = G__12452;
chunk__12436_12446 = G__12453;
count__12437_12447 = G__12454;
i__12438_12448 = G__12455;
continue;
} else {
var temp__4126__auto___12456 = cljs.core.seq(seq__12435_12445);
if(temp__4126__auto___12456){
var seq__12435_12457__$1 = temp__4126__auto___12456;
if(cljs.core.chunked_seq_QMARK_(seq__12435_12457__$1)){
var c__4530__auto___12458 = cljs.core.chunk_first(seq__12435_12457__$1);
var G__12459 = cljs.core.chunk_rest(seq__12435_12457__$1);
var G__12460 = c__4530__auto___12458;
var G__12461 = cljs.core.count(c__4530__auto___12458);
var G__12462 = (0);
seq__12435_12445 = G__12459;
chunk__12436_12446 = G__12460;
count__12437_12447 = G__12461;
i__12438_12448 = G__12462;
continue;
} else {
var vec__12440_12463 = cljs.core.first(seq__12435_12457__$1);
var k_12464 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12440_12463,(0),null);
var v_12465 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12440_12463,(1),null);
(m[cljs.core.key__GT_js(k_12464)] = clj__GT_js(v_12465));

var G__12466 = cljs.core.next(seq__12435_12457__$1);
var G__12467 = null;
var G__12468 = (0);
var G__12469 = (0);
seq__12435_12445 = G__12466;
chunk__12436_12446 = G__12467;
count__12437_12447 = G__12468;
i__12438_12448 = G__12469;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__12441_12470 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__12442_12471 = null;
var count__12443_12472 = (0);
var i__12444_12473 = (0);
while(true){
if((i__12444_12473 < count__12443_12472)){
var x_12474__$1 = chunk__12442_12471.cljs$core$IIndexed$_nth$arity$2(null,i__12444_12473);
arr.push(x_12474__$1);

var G__12475 = seq__12441_12470;
var G__12476 = chunk__12442_12471;
var G__12477 = count__12443_12472;
var G__12478 = (i__12444_12473 + (1));
seq__12441_12470 = G__12475;
chunk__12442_12471 = G__12476;
count__12443_12472 = G__12477;
i__12444_12473 = G__12478;
continue;
} else {
var temp__4126__auto___12479 = cljs.core.seq(seq__12441_12470);
if(temp__4126__auto___12479){
var seq__12441_12480__$1 = temp__4126__auto___12479;
if(cljs.core.chunked_seq_QMARK_(seq__12441_12480__$1)){
var c__4530__auto___12481 = cljs.core.chunk_first(seq__12441_12480__$1);
var G__12482 = cljs.core.chunk_rest(seq__12441_12480__$1);
var G__12483 = c__4530__auto___12481;
var G__12484 = cljs.core.count(c__4530__auto___12481);
var G__12485 = (0);
seq__12441_12470 = G__12482;
chunk__12442_12471 = G__12483;
count__12443_12472 = G__12484;
i__12444_12473 = G__12485;
continue;
} else {
var x_12486__$1 = cljs.core.first(seq__12441_12480__$1);
arr.push(x_12486__$1);

var G__12487 = cljs.core.next(seq__12441_12480__$1);
var G__12488 = null;
var G__12489 = (0);
var G__12490 = (0);
seq__12441_12470 = G__12487;
chunk__12442_12471 = G__12488;
count__12443_12472 = G__12489;
i__12444_12473 = G__12490;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj12492 = {};
return obj12492;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3731__auto__ = x;
if(and__3731__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3731__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4387__auto__ = (((x == null))?null:x);
return (function (){var or__3743__auto__ = (cljs.core._js__GT_clj[(function (){var G__12496 = x__4387__auto__;
return goog.typeOf(G__12496);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__12553__delegate = function (x,opts){
var map__12526 = opts;
var map__12526__$1 = ((cljs.core.seq_QMARK_(map__12526))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12526):map__12526);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12526__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__12526,map__12526__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__12542 = x__$1;
if(G__12542){
var bit__4424__auto__ = null;
if(cljs.core.truth_((function (){var or__3743__auto__ = bit__4424__auto__;
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return G__12542.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__12542.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12542);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12542);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4499__auto__ = ((function (map__12526,map__12526__$1,keywordize_keys,keyfn){
return (function iter__12543(s__12544){
return (new cljs.core.LazySeq(null,((function (map__12526,map__12526__$1,keywordize_keys,keyfn){
return (function (){
var s__12544__$1 = s__12544;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__12544__$1);
if(temp__4126__auto__){
var s__12544__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__12544__$2)){
var c__4497__auto__ = cljs.core.chunk_first(s__12544__$2);
var size__4498__auto__ = cljs.core.count(c__4497__auto__);
var b__12546 = cljs.core.chunk_buffer(size__4498__auto__);
if((function (){var i__12545 = (0);
while(true){
if((i__12545 < size__4498__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4497__auto__,i__12545);
cljs.core.chunk_append(b__12546,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12551 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12551) : keyfn.call(null,G__12551));
})(),thisfn((x__$1[k]))], null));

var G__12554 = (i__12545 + (1));
i__12545 = G__12554;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__12546),iter__12543(cljs.core.chunk_rest(s__12544__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__12546),null);
}
} else {
var k = cljs.core.first(s__12544__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12552 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12552) : keyfn.call(null,G__12552));
})(),thisfn((x__$1[k]))], null),iter__12543(cljs.core.rest(s__12544__$2)));
}
} else {
return null;
}
break;
}
});})(map__12526,map__12526__$1,keywordize_keys,keyfn))
,null,null));
});})(map__12526,map__12526__$1,keywordize_keys,keyfn))
;
return iter__4499__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__12526,map__12526__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__12553 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__12555__i = 0, G__12555__a = new Array(arguments.length -  1);
while (G__12555__i < G__12555__a.length) {G__12555__a[G__12555__i] = arguments[G__12555__i + 1]; ++G__12555__i;}
  opts = new cljs.core.IndexedSeq(G__12555__a,0);
} 
return G__12553__delegate.call(this,x,opts);};
G__12553.cljs$lang$maxFixedArity = 1;
G__12553.cljs$lang$applyTo = (function (arglist__12556){
var x = cljs.core.first(arglist__12556);
var opts = cljs.core.rest(arglist__12556);
return G__12553__delegate(x,opts);
});
G__12553.cljs$core$IFn$_invoke$arity$variadic = G__12553__delegate;
return G__12553;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__12557 = null;
if (arguments.length > 1) {
var G__12558__i = 0, G__12558__a = new Array(arguments.length -  1);
while (G__12558__i < G__12558__a.length) {G__12558__a[G__12558__i] = arguments[G__12558__i + 1]; ++G__12558__i;}
G__12557 = new cljs.core.IndexedSeq(G__12558__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__12561 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12561) : cljs.core.atom.call(null,G__12561));
})();
return ((function (mem){
return (function() { 
var G__12563__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__12562 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12562) : cljs.core.deref.call(null,G__12562));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__12563 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12564__i = 0, G__12564__a = new Array(arguments.length -  0);
while (G__12564__i < G__12564__a.length) {G__12564__a[G__12564__i] = arguments[G__12564__i + 0]; ++G__12564__i;}
  args = new cljs.core.IndexedSeq(G__12564__a,0);
} 
return G__12563__delegate.call(this,args);};
G__12563.cljs$lang$maxFixedArity = 0;
G__12563.cljs$lang$applyTo = (function (arglist__12565){
var args = cljs.core.seq(arglist__12565);
return G__12563__delegate(args);
});
G__12563.cljs$core$IFn$_invoke$arity$variadic = G__12563__delegate;
return G__12563;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__12567 = ret;
f = G__12567;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__12568__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__12568 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12569__i = 0, G__12569__a = new Array(arguments.length -  1);
while (G__12569__i < G__12569__a.length) {G__12569__a[G__12569__i] = arguments[G__12569__i + 1]; ++G__12569__i;}
  args = new cljs.core.IndexedSeq(G__12569__a,0);
} 
return G__12568__delegate.call(this,f,args);};
G__12568.cljs$lang$maxFixedArity = 1;
G__12568.cljs$lang$applyTo = (function (arglist__12570){
var f = cljs.core.first(arglist__12570);
var args = cljs.core.rest(arglist__12570);
return G__12568__delegate(f,args);
});
G__12568.cljs$core$IFn$_invoke$arity$variadic = G__12568__delegate;
return G__12568;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__12571 = null;
if (arguments.length > 1) {
var G__12572__i = 0, G__12572__a = new Array(arguments.length -  1);
while (G__12572__i < G__12572__a.length) {G__12572__a[G__12572__i] = arguments[G__12572__i + 1]; ++G__12572__i;}
G__12571 = new cljs.core.IndexedSeq(G__12572__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__12571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__12575 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12575) : Math.floor.call(null,G__12575));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__12577 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12577) : f.call(null,G__12577));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__12579 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12579) : cljs.core.atom.call(null,G__12579));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12580__i = 0, G__12580__a = new Array(arguments.length -  1);
while (G__12580__i < G__12580__a.length) {G__12580__a[G__12580__i] = arguments[G__12580__i + 1]; ++G__12580__i;}
  args = new cljs.core.IndexedSeq(G__12580__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__12581){
var f = cljs.core.first(arglist__12581);
var args = cljs.core.rest(arglist__12581);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12646 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12646) : cljs.core.deref.call(null,G__12646));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3743__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
var and__3731__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3731__auto__){
var and__3731__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3731__auto____$1){
var and__3731__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3731__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__12671 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__12669 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__12669) : child.call(null,G__12669));
})(),(function (){var G__12670 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__12670) : parent.call(null,G__12670));
})());
var G__12672 = (i + (1));
ret = G__12671;
i = G__12672;
continue;
}
break;
}
} else {
return and__3731__auto____$2;
}
} else {
return and__3731__auto____$1;
}
} else {
return and__3731__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__12676 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12676) : cljs.core.deref.call(null,G__12676));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__12680 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12680) : cljs.core.deref.call(null,G__12680));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__12684 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12684) : cljs.core.deref.call(null,G__12684));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__12693 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__12693) : targets.call(null,G__12693));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__12694 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__12694) : sources.call(null,G__12694));
})()));
});})(tp,td,ta))
;
var or__3743__auto__ = ((cljs.core.contains_QMARK_((function (){var G__12698 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__12698) : tp.call(null,G__12698));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__12699 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12699) : ta.call(null,G__12699));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__12700 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12700) : ta.call(null,G__12700));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__12707 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12707) : parentMap.call(null,G__12707));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__12708 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12708) : parentMap.call(null,G__12708));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__12701_SHARP_){
return cljs.core.cons(cljs.core.first(p1__12701_SHARP_),cljs.core.interpose(cljs.core.first(p1__12701_SHARP_),cljs.core.second(p1__12701_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__12709 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12709) : parentMap.call(null,G__12709));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__12702_SHARP_,p2__12703_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__12702_SHARP_,p2__12703_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__12712 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12712) : cljs.core.deref.call(null,G__12712));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__12713 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12713) : cljs.core.deref.call(null,G__12713));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__12729 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12729) : cljs.core.deref.call(null,G__12729));
})().call(null,x);
var or__3743__auto__ = (cljs.core.truth_((function (){var and__3731__auto__ = xprefs;
if(cljs.core.truth_(and__3731__auto__)){
var G__12731 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__12731) : xprefs.call(null,G__12731));
} else {
return and__3731__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__12732 = cljs.core.rest(ps);
ps = G__12732;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3743__auto____$1)){
return or__3743__auto____$1;
} else {
var or__3743__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__12733 = cljs.core.rest(ps);
ps = G__12733;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3743__auto____$2)){
return or__3743__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3743__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3743__auto__)){
return or__3743__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__12747){
var vec__12748 = p__12747;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12748,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12748,(1),null);
var e = vec__12748;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12749 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12749) : cljs.core.deref.call(null,G__12749));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3743__auto__ = (be == null);
if(or__3743__auto__){
return or__3743__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__12750 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12750) : cljs.core.deref.call(null,G__12750));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12751 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12751) : cljs.core.deref.call(null,G__12751));
})(),(function (){var G__12752 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12752) : cljs.core.deref.call(null,G__12752));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj12754 = {};
return obj12754;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._reset[(function (){var G__12758 = x__4387__auto__;
return goog.typeOf(G__12758);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._reset["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._add_method[(function (){var G__12762 = x__4387__auto__;
return goog.typeOf(G__12762);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._add_method["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._remove_method[(function (){var G__12766 = x__4387__auto__;
return goog.typeOf(G__12766);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._prefer_method[(function (){var G__12770 = x__4387__auto__;
return goog.typeOf(G__12770);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._get_method[(function (){var G__12774 = x__4387__auto__;
return goog.typeOf(G__12774);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._get_method["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._methods[(function (){var G__12778 = x__4387__auto__;
return goog.typeOf(G__12778);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._methods["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3731__auto__ = mf;
if(and__3731__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3731__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4387__auto__ = (((mf == null))?null:mf);
return (function (){var or__3743__auto__ = (cljs.core._prefers[(function (){var G__12782 = x__4387__auto__;
return goog.typeOf(G__12782);
})()]);
if(or__3743__auto__){
return or__3743__auto__;
} else {
var or__3743__auto____$1 = (cljs.core._prefers["_"]);
if(or__3743__auto____$1){
return or__3743__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12784 = this$__$1;
return goog.getUid(G__12784);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12785 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12785) : cljs.core.deref.call(null,G__12785));
})(),(function (){var G__12786 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12786) : cljs.core.deref.call(null,G__12786));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__12787 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12787) : cljs.core.deref.call(null,G__12787));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__12788 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12788) : cljs.core.deref.call(null,G__12788));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12789 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12789) : cljs.core.deref.call(null,G__12789));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12790 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12790) : cljs.core.deref.call(null,G__12790));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__13631 = null;
var G__13631__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__13631__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12791 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12791) : self__.dispatch_fn.call(null,G__12791));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12792 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12792) : target_fn.call(null,G__12792));
});
var G__13631__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12793 = a;
var G__12794 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12793,G__12794) : self__.dispatch_fn.call(null,G__12793,G__12794));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12795 = a;
var G__12796 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12795,G__12796) : target_fn.call(null,G__12795,G__12796));
});
var G__13631__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12797 = a;
var G__12798 = b;
var G__12799 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12797,G__12798,G__12799) : self__.dispatch_fn.call(null,G__12797,G__12798,G__12799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12800 = a;
var G__12801 = b;
var G__12802 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12800,G__12801,G__12802) : target_fn.call(null,G__12800,G__12801,G__12802));
});
var G__13631__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12803 = a;
var G__12804 = b;
var G__12805 = c;
var G__12806 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12803,G__12804,G__12805,G__12806) : self__.dispatch_fn.call(null,G__12803,G__12804,G__12805,G__12806));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12807 = a;
var G__12808 = b;
var G__12809 = c;
var G__12810 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12807,G__12808,G__12809,G__12810) : target_fn.call(null,G__12807,G__12808,G__12809,G__12810));
});
var G__13631__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12811 = a;
var G__12812 = b;
var G__12813 = c;
var G__12814 = d;
var G__12815 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12811,G__12812,G__12813,G__12814,G__12815) : self__.dispatch_fn.call(null,G__12811,G__12812,G__12813,G__12814,G__12815));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12816 = a;
var G__12817 = b;
var G__12818 = c;
var G__12819 = d;
var G__12820 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12816,G__12817,G__12818,G__12819,G__12820) : target_fn.call(null,G__12816,G__12817,G__12818,G__12819,G__12820));
});
var G__13631__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12821 = a;
var G__12822 = b;
var G__12823 = c;
var G__12824 = d;
var G__12825 = e;
var G__12826 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12821,G__12822,G__12823,G__12824,G__12825,G__12826) : self__.dispatch_fn.call(null,G__12821,G__12822,G__12823,G__12824,G__12825,G__12826));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12827 = a;
var G__12828 = b;
var G__12829 = c;
var G__12830 = d;
var G__12831 = e;
var G__12832 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12827,G__12828,G__12829,G__12830,G__12831,G__12832) : target_fn.call(null,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832));
});
var G__13631__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12833 = a;
var G__12834 = b;
var G__12835 = c;
var G__12836 = d;
var G__12837 = e;
var G__12838 = f;
var G__12839 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12833,G__12834,G__12835,G__12836,G__12837,G__12838,G__12839) : self__.dispatch_fn.call(null,G__12833,G__12834,G__12835,G__12836,G__12837,G__12838,G__12839));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12840 = a;
var G__12841 = b;
var G__12842 = c;
var G__12843 = d;
var G__12844 = e;
var G__12845 = f;
var G__12846 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846) : target_fn.call(null,G__12840,G__12841,G__12842,G__12843,G__12844,G__12845,G__12846));
});
var G__13631__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12847 = a;
var G__12848 = b;
var G__12849 = c;
var G__12850 = d;
var G__12851 = e;
var G__12852 = f;
var G__12853 = g;
var G__12854 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854) : self__.dispatch_fn.call(null,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853,G__12854));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12855 = a;
var G__12856 = b;
var G__12857 = c;
var G__12858 = d;
var G__12859 = e;
var G__12860 = f;
var G__12861 = g;
var G__12862 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12855,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862) : target_fn.call(null,G__12855,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862));
});
var G__13631__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12863 = a;
var G__12864 = b;
var G__12865 = c;
var G__12866 = d;
var G__12867 = e;
var G__12868 = f;
var G__12869 = g;
var G__12870 = h;
var G__12871 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12863,G__12864,G__12865,G__12866,G__12867,G__12868,G__12869,G__12870,G__12871) : self__.dispatch_fn.call(null,G__12863,G__12864,G__12865,G__12866,G__12867,G__12868,G__12869,G__12870,G__12871));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12872 = a;
var G__12873 = b;
var G__12874 = c;
var G__12875 = d;
var G__12876 = e;
var G__12877 = f;
var G__12878 = g;
var G__12879 = h;
var G__12880 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880) : target_fn.call(null,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877,G__12878,G__12879,G__12880));
});
var G__13631__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12881 = a;
var G__12882 = b;
var G__12883 = c;
var G__12884 = d;
var G__12885 = e;
var G__12886 = f;
var G__12887 = g;
var G__12888 = h;
var G__12889 = i;
var G__12890 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890) : self__.dispatch_fn.call(null,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888,G__12889,G__12890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12891 = a;
var G__12892 = b;
var G__12893 = c;
var G__12894 = d;
var G__12895 = e;
var G__12896 = f;
var G__12897 = g;
var G__12898 = h;
var G__12899 = i;
var G__12900 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900) : target_fn.call(null,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900));
});
var G__13631__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12901 = a;
var G__12902 = b;
var G__12903 = c;
var G__12904 = d;
var G__12905 = e;
var G__12906 = f;
var G__12907 = g;
var G__12908 = h;
var G__12909 = i;
var G__12910 = j;
var G__12911 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911) : self__.dispatch_fn.call(null,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12912 = a;
var G__12913 = b;
var G__12914 = c;
var G__12915 = d;
var G__12916 = e;
var G__12917 = f;
var G__12918 = g;
var G__12919 = h;
var G__12920 = i;
var G__12921 = j;
var G__12922 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922) : target_fn.call(null,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922));
});
var G__13631__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12923 = a;
var G__12924 = b;
var G__12925 = c;
var G__12926 = d;
var G__12927 = e;
var G__12928 = f;
var G__12929 = g;
var G__12930 = h;
var G__12931 = i;
var G__12932 = j;
var G__12933 = k;
var G__12934 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12923,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934) : self__.dispatch_fn.call(null,G__12923,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12935 = a;
var G__12936 = b;
var G__12937 = c;
var G__12938 = d;
var G__12939 = e;
var G__12940 = f;
var G__12941 = g;
var G__12942 = h;
var G__12943 = i;
var G__12944 = j;
var G__12945 = k;
var G__12946 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946) : target_fn.call(null,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946));
});
var G__13631__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12947 = a;
var G__12948 = b;
var G__12949 = c;
var G__12950 = d;
var G__12951 = e;
var G__12952 = f;
var G__12953 = g;
var G__12954 = h;
var G__12955 = i;
var G__12956 = j;
var G__12957 = k;
var G__12958 = l;
var G__12959 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959) : self__.dispatch_fn.call(null,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12960 = a;
var G__12961 = b;
var G__12962 = c;
var G__12963 = d;
var G__12964 = e;
var G__12965 = f;
var G__12966 = g;
var G__12967 = h;
var G__12968 = i;
var G__12969 = j;
var G__12970 = k;
var G__12971 = l;
var G__12972 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972) : target_fn.call(null,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972));
});
var G__13631__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12973 = a;
var G__12974 = b;
var G__12975 = c;
var G__12976 = d;
var G__12977 = e;
var G__12978 = f;
var G__12979 = g;
var G__12980 = h;
var G__12981 = i;
var G__12982 = j;
var G__12983 = k;
var G__12984 = l;
var G__12985 = m;
var G__12986 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986) : self__.dispatch_fn.call(null,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12987 = a;
var G__12988 = b;
var G__12989 = c;
var G__12990 = d;
var G__12991 = e;
var G__12992 = f;
var G__12993 = g;
var G__12994 = h;
var G__12995 = i;
var G__12996 = j;
var G__12997 = k;
var G__12998 = l;
var G__12999 = m;
var G__13000 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000) : target_fn.call(null,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000));
});
var G__13631__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13001 = a;
var G__13002 = b;
var G__13003 = c;
var G__13004 = d;
var G__13005 = e;
var G__13006 = f;
var G__13007 = g;
var G__13008 = h;
var G__13009 = i;
var G__13010 = j;
var G__13011 = k;
var G__13012 = l;
var G__13013 = m;
var G__13014 = n;
var G__13015 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015) : self__.dispatch_fn.call(null,G__13001,G__13002,G__13003,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13016 = a;
var G__13017 = b;
var G__13018 = c;
var G__13019 = d;
var G__13020 = e;
var G__13021 = f;
var G__13022 = g;
var G__13023 = h;
var G__13024 = i;
var G__13025 = j;
var G__13026 = k;
var G__13027 = l;
var G__13028 = m;
var G__13029 = n;
var G__13030 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030) : target_fn.call(null,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030));
});
var G__13631__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13031 = a;
var G__13032 = b;
var G__13033 = c;
var G__13034 = d;
var G__13035 = e;
var G__13036 = f;
var G__13037 = g;
var G__13038 = h;
var G__13039 = i;
var G__13040 = j;
var G__13041 = k;
var G__13042 = l;
var G__13043 = m;
var G__13044 = n;
var G__13045 = o;
var G__13046 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046) : self__.dispatch_fn.call(null,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13047 = a;
var G__13048 = b;
var G__13049 = c;
var G__13050 = d;
var G__13051 = e;
var G__13052 = f;
var G__13053 = g;
var G__13054 = h;
var G__13055 = i;
var G__13056 = j;
var G__13057 = k;
var G__13058 = l;
var G__13059 = m;
var G__13060 = n;
var G__13061 = o;
var G__13062 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062) : target_fn.call(null,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062));
});
var G__13631__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13063 = a;
var G__13064 = b;
var G__13065 = c;
var G__13066 = d;
var G__13067 = e;
var G__13068 = f;
var G__13069 = g;
var G__13070 = h;
var G__13071 = i;
var G__13072 = j;
var G__13073 = k;
var G__13074 = l;
var G__13075 = m;
var G__13076 = n;
var G__13077 = o;
var G__13078 = p;
var G__13079 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079) : self__.dispatch_fn.call(null,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074,G__13075,G__13076,G__13077,G__13078,G__13079));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13080 = a;
var G__13081 = b;
var G__13082 = c;
var G__13083 = d;
var G__13084 = e;
var G__13085 = f;
var G__13086 = g;
var G__13087 = h;
var G__13088 = i;
var G__13089 = j;
var G__13090 = k;
var G__13091 = l;
var G__13092 = m;
var G__13093 = n;
var G__13094 = o;
var G__13095 = p;
var G__13096 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096) : target_fn.call(null,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093,G__13094,G__13095,G__13096));
});
var G__13631__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13097 = a;
var G__13098 = b;
var G__13099 = c;
var G__13100 = d;
var G__13101 = e;
var G__13102 = f;
var G__13103 = g;
var G__13104 = h;
var G__13105 = i;
var G__13106 = j;
var G__13107 = k;
var G__13108 = l;
var G__13109 = m;
var G__13110 = n;
var G__13111 = o;
var G__13112 = p;
var G__13113 = q;
var G__13114 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114) : self__.dispatch_fn.call(null,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112,G__13113,G__13114));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13115 = a;
var G__13116 = b;
var G__13117 = c;
var G__13118 = d;
var G__13119 = e;
var G__13120 = f;
var G__13121 = g;
var G__13122 = h;
var G__13123 = i;
var G__13124 = j;
var G__13125 = k;
var G__13126 = l;
var G__13127 = m;
var G__13128 = n;
var G__13129 = o;
var G__13130 = p;
var G__13131 = q;
var G__13132 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132) : target_fn.call(null,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132));
});
var G__13631__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13133 = a;
var G__13134 = b;
var G__13135 = c;
var G__13136 = d;
var G__13137 = e;
var G__13138 = f;
var G__13139 = g;
var G__13140 = h;
var G__13141 = i;
var G__13142 = j;
var G__13143 = k;
var G__13144 = l;
var G__13145 = m;
var G__13146 = n;
var G__13147 = o;
var G__13148 = p;
var G__13149 = q;
var G__13150 = r;
var G__13151 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151) : self__.dispatch_fn.call(null,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13152 = a;
var G__13153 = b;
var G__13154 = c;
var G__13155 = d;
var G__13156 = e;
var G__13157 = f;
var G__13158 = g;
var G__13159 = h;
var G__13160 = i;
var G__13161 = j;
var G__13162 = k;
var G__13163 = l;
var G__13164 = m;
var G__13165 = n;
var G__13166 = o;
var G__13167 = p;
var G__13168 = q;
var G__13169 = r;
var G__13170 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170) : target_fn.call(null,G__13152,G__13153,G__13154,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170));
});
var G__13631__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__13171 = a;
var G__13172 = b;
var G__13173 = c;
var G__13174 = d;
var G__13175 = e;
var G__13176 = f;
var G__13177 = g;
var G__13178 = h;
var G__13179 = i;
var G__13180 = j;
var G__13181 = k;
var G__13182 = l;
var G__13183 = m;
var G__13184 = n;
var G__13185 = o;
var G__13186 = p;
var G__13187 = q;
var G__13188 = r;
var G__13189 = s;
var G__13190 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13171,G__13172,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190) : self__.dispatch_fn.call(null,G__13171,G__13172,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13191 = a;
var G__13192 = b;
var G__13193 = c;
var G__13194 = d;
var G__13195 = e;
var G__13196 = f;
var G__13197 = g;
var G__13198 = h;
var G__13199 = i;
var G__13200 = j;
var G__13201 = k;
var G__13202 = l;
var G__13203 = m;
var G__13204 = n;
var G__13205 = o;
var G__13206 = p;
var G__13207 = q;
var G__13208 = r;
var G__13209 = s;
var G__13210 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210) : target_fn.call(null,G__13191,G__13192,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210));
});
var G__13631__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__13631 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13631__1.call(this,self__);
case 2:
return G__13631__2.call(this,self__,a);
case 3:
return G__13631__3.call(this,self__,a,b);
case 4:
return G__13631__4.call(this,self__,a,b,c);
case 5:
return G__13631__5.call(this,self__,a,b,c,d);
case 6:
return G__13631__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13631__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13631__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13631__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13631__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13631__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13631__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13631__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13631__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13631__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13631__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13631__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13631__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13631__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13631__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13631__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13631__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13631.cljs$core$IFn$_invoke$arity$1 = G__13631__1;
G__13631.cljs$core$IFn$_invoke$arity$2 = G__13631__2;
G__13631.cljs$core$IFn$_invoke$arity$3 = G__13631__3;
G__13631.cljs$core$IFn$_invoke$arity$4 = G__13631__4;
G__13631.cljs$core$IFn$_invoke$arity$5 = G__13631__5;
G__13631.cljs$core$IFn$_invoke$arity$6 = G__13631__6;
G__13631.cljs$core$IFn$_invoke$arity$7 = G__13631__7;
G__13631.cljs$core$IFn$_invoke$arity$8 = G__13631__8;
G__13631.cljs$core$IFn$_invoke$arity$9 = G__13631__9;
G__13631.cljs$core$IFn$_invoke$arity$10 = G__13631__10;
G__13631.cljs$core$IFn$_invoke$arity$11 = G__13631__11;
G__13631.cljs$core$IFn$_invoke$arity$12 = G__13631__12;
G__13631.cljs$core$IFn$_invoke$arity$13 = G__13631__13;
G__13631.cljs$core$IFn$_invoke$arity$14 = G__13631__14;
G__13631.cljs$core$IFn$_invoke$arity$15 = G__13631__15;
G__13631.cljs$core$IFn$_invoke$arity$16 = G__13631__16;
G__13631.cljs$core$IFn$_invoke$arity$17 = G__13631__17;
G__13631.cljs$core$IFn$_invoke$arity$18 = G__13631__18;
G__13631.cljs$core$IFn$_invoke$arity$19 = G__13631__19;
G__13631.cljs$core$IFn$_invoke$arity$20 = G__13631__20;
G__13631.cljs$core$IFn$_invoke$arity$21 = G__13631__21;
G__13631.cljs$core$IFn$_invoke$arity$22 = G__13631__22;
return G__13631;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args12783){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12783)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13211 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__13211) : self__.dispatch_fn.call(null,G__13211));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13212 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__13212) : target_fn.call(null,G__13212));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13213 = a;
var G__13214 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__13213,G__13214) : self__.dispatch_fn.call(null,G__13213,G__13214));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13215 = a;
var G__13216 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__13215,G__13216) : target_fn.call(null,G__13215,G__13216));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13217 = a;
var G__13218 = b;
var G__13219 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__13217,G__13218,G__13219) : self__.dispatch_fn.call(null,G__13217,G__13218,G__13219));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13220 = a;
var G__13221 = b;
var G__13222 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__13220,G__13221,G__13222) : target_fn.call(null,G__13220,G__13221,G__13222));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13223 = a;
var G__13224 = b;
var G__13225 = c;
var G__13226 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__13223,G__13224,G__13225,G__13226) : self__.dispatch_fn.call(null,G__13223,G__13224,G__13225,G__13226));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13227 = a;
var G__13228 = b;
var G__13229 = c;
var G__13230 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__13227,G__13228,G__13229,G__13230) : target_fn.call(null,G__13227,G__13228,G__13229,G__13230));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13231 = a;
var G__13232 = b;
var G__13233 = c;
var G__13234 = d;
var G__13235 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__13231,G__13232,G__13233,G__13234,G__13235) : self__.dispatch_fn.call(null,G__13231,G__13232,G__13233,G__13234,G__13235));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13236 = a;
var G__13237 = b;
var G__13238 = c;
var G__13239 = d;
var G__13240 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__13236,G__13237,G__13238,G__13239,G__13240) : target_fn.call(null,G__13236,G__13237,G__13238,G__13239,G__13240));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13241 = a;
var G__13242 = b;
var G__13243 = c;
var G__13244 = d;
var G__13245 = e;
var G__13246 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__13241,G__13242,G__13243,G__13244,G__13245,G__13246) : self__.dispatch_fn.call(null,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13247 = a;
var G__13248 = b;
var G__13249 = c;
var G__13250 = d;
var G__13251 = e;
var G__13252 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__13247,G__13248,G__13249,G__13250,G__13251,G__13252) : target_fn.call(null,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13253 = a;
var G__13254 = b;
var G__13255 = c;
var G__13256 = d;
var G__13257 = e;
var G__13258 = f;
var G__13259 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__13253,G__13254,G__13255,G__13256,G__13257,G__13258,G__13259) : self__.dispatch_fn.call(null,G__13253,G__13254,G__13255,G__13256,G__13257,G__13258,G__13259));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13260 = a;
var G__13261 = b;
var G__13262 = c;
var G__13263 = d;
var G__13264 = e;
var G__13265 = f;
var G__13266 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266) : target_fn.call(null,G__13260,G__13261,G__13262,G__13263,G__13264,G__13265,G__13266));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13267 = a;
var G__13268 = b;
var G__13269 = c;
var G__13270 = d;
var G__13271 = e;
var G__13272 = f;
var G__13273 = g;
var G__13274 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__13267,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274) : self__.dispatch_fn.call(null,G__13267,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13275 = a;
var G__13276 = b;
var G__13277 = c;
var G__13278 = d;
var G__13279 = e;
var G__13280 = f;
var G__13281 = g;
var G__13282 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__13275,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282) : target_fn.call(null,G__13275,G__13276,G__13277,G__13278,G__13279,G__13280,G__13281,G__13282));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13283 = a;
var G__13284 = b;
var G__13285 = c;
var G__13286 = d;
var G__13287 = e;
var G__13288 = f;
var G__13289 = g;
var G__13290 = h;
var G__13291 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__13283,G__13284,G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291) : self__.dispatch_fn.call(null,G__13283,G__13284,G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13292 = a;
var G__13293 = b;
var G__13294 = c;
var G__13295 = d;
var G__13296 = e;
var G__13297 = f;
var G__13298 = g;
var G__13299 = h;
var G__13300 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__13292,G__13293,G__13294,G__13295,G__13296,G__13297,G__13298,G__13299,G__13300) : target_fn.call(null,G__13292,G__13293,G__13294,G__13295,G__13296,G__13297,G__13298,G__13299,G__13300));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13301 = a;
var G__13302 = b;
var G__13303 = c;
var G__13304 = d;
var G__13305 = e;
var G__13306 = f;
var G__13307 = g;
var G__13308 = h;
var G__13309 = i;
var G__13310 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310) : self__.dispatch_fn.call(null,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13311 = a;
var G__13312 = b;
var G__13313 = c;
var G__13314 = d;
var G__13315 = e;
var G__13316 = f;
var G__13317 = g;
var G__13318 = h;
var G__13319 = i;
var G__13320 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__13311,G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318,G__13319,G__13320) : target_fn.call(null,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318,G__13319,G__13320));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13321 = a;
var G__13322 = b;
var G__13323 = c;
var G__13324 = d;
var G__13325 = e;
var G__13326 = f;
var G__13327 = g;
var G__13328 = h;
var G__13329 = i;
var G__13330 = j;
var G__13331 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331) : self__.dispatch_fn.call(null,G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13332 = a;
var G__13333 = b;
var G__13334 = c;
var G__13335 = d;
var G__13336 = e;
var G__13337 = f;
var G__13338 = g;
var G__13339 = h;
var G__13340 = i;
var G__13341 = j;
var G__13342 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__13332,G__13333,G__13334,G__13335,G__13336,G__13337,G__13338,G__13339,G__13340,G__13341,G__13342) : target_fn.call(null,G__13332,G__13333,G__13334,G__13335,G__13336,G__13337,G__13338,G__13339,G__13340,G__13341,G__13342));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13343 = a;
var G__13344 = b;
var G__13345 = c;
var G__13346 = d;
var G__13347 = e;
var G__13348 = f;
var G__13349 = g;
var G__13350 = h;
var G__13351 = i;
var G__13352 = j;
var G__13353 = k;
var G__13354 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__13343,G__13344,G__13345,G__13346,G__13347,G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354) : self__.dispatch_fn.call(null,G__13343,G__13344,G__13345,G__13346,G__13347,G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13355 = a;
var G__13356 = b;
var G__13357 = c;
var G__13358 = d;
var G__13359 = e;
var G__13360 = f;
var G__13361 = g;
var G__13362 = h;
var G__13363 = i;
var G__13364 = j;
var G__13365 = k;
var G__13366 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__13355,G__13356,G__13357,G__13358,G__13359,G__13360,G__13361,G__13362,G__13363,G__13364,G__13365,G__13366) : target_fn.call(null,G__13355,G__13356,G__13357,G__13358,G__13359,G__13360,G__13361,G__13362,G__13363,G__13364,G__13365,G__13366));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13367 = a;
var G__13368 = b;
var G__13369 = c;
var G__13370 = d;
var G__13371 = e;
var G__13372 = f;
var G__13373 = g;
var G__13374 = h;
var G__13375 = i;
var G__13376 = j;
var G__13377 = k;
var G__13378 = l;
var G__13379 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__13367,G__13368,G__13369,G__13370,G__13371,G__13372,G__13373,G__13374,G__13375,G__13376,G__13377,G__13378,G__13379) : self__.dispatch_fn.call(null,G__13367,G__13368,G__13369,G__13370,G__13371,G__13372,G__13373,G__13374,G__13375,G__13376,G__13377,G__13378,G__13379));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13380 = a;
var G__13381 = b;
var G__13382 = c;
var G__13383 = d;
var G__13384 = e;
var G__13385 = f;
var G__13386 = g;
var G__13387 = h;
var G__13388 = i;
var G__13389 = j;
var G__13390 = k;
var G__13391 = l;
var G__13392 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__13380,G__13381,G__13382,G__13383,G__13384,G__13385,G__13386,G__13387,G__13388,G__13389,G__13390,G__13391,G__13392) : target_fn.call(null,G__13380,G__13381,G__13382,G__13383,G__13384,G__13385,G__13386,G__13387,G__13388,G__13389,G__13390,G__13391,G__13392));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13393 = a;
var G__13394 = b;
var G__13395 = c;
var G__13396 = d;
var G__13397 = e;
var G__13398 = f;
var G__13399 = g;
var G__13400 = h;
var G__13401 = i;
var G__13402 = j;
var G__13403 = k;
var G__13404 = l;
var G__13405 = m;
var G__13406 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__13393,G__13394,G__13395,G__13396,G__13397,G__13398,G__13399,G__13400,G__13401,G__13402,G__13403,G__13404,G__13405,G__13406) : self__.dispatch_fn.call(null,G__13393,G__13394,G__13395,G__13396,G__13397,G__13398,G__13399,G__13400,G__13401,G__13402,G__13403,G__13404,G__13405,G__13406));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13407 = a;
var G__13408 = b;
var G__13409 = c;
var G__13410 = d;
var G__13411 = e;
var G__13412 = f;
var G__13413 = g;
var G__13414 = h;
var G__13415 = i;
var G__13416 = j;
var G__13417 = k;
var G__13418 = l;
var G__13419 = m;
var G__13420 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413,G__13414,G__13415,G__13416,G__13417,G__13418,G__13419,G__13420) : target_fn.call(null,G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413,G__13414,G__13415,G__13416,G__13417,G__13418,G__13419,G__13420));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13421 = a;
var G__13422 = b;
var G__13423 = c;
var G__13424 = d;
var G__13425 = e;
var G__13426 = f;
var G__13427 = g;
var G__13428 = h;
var G__13429 = i;
var G__13430 = j;
var G__13431 = k;
var G__13432 = l;
var G__13433 = m;
var G__13434 = n;
var G__13435 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__13421,G__13422,G__13423,G__13424,G__13425,G__13426,G__13427,G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435) : self__.dispatch_fn.call(null,G__13421,G__13422,G__13423,G__13424,G__13425,G__13426,G__13427,G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13436 = a;
var G__13437 = b;
var G__13438 = c;
var G__13439 = d;
var G__13440 = e;
var G__13441 = f;
var G__13442 = g;
var G__13443 = h;
var G__13444 = i;
var G__13445 = j;
var G__13446 = k;
var G__13447 = l;
var G__13448 = m;
var G__13449 = n;
var G__13450 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__13436,G__13437,G__13438,G__13439,G__13440,G__13441,G__13442,G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450) : target_fn.call(null,G__13436,G__13437,G__13438,G__13439,G__13440,G__13441,G__13442,G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13451 = a;
var G__13452 = b;
var G__13453 = c;
var G__13454 = d;
var G__13455 = e;
var G__13456 = f;
var G__13457 = g;
var G__13458 = h;
var G__13459 = i;
var G__13460 = j;
var G__13461 = k;
var G__13462 = l;
var G__13463 = m;
var G__13464 = n;
var G__13465 = o;
var G__13466 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__13451,G__13452,G__13453,G__13454,G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461,G__13462,G__13463,G__13464,G__13465,G__13466) : self__.dispatch_fn.call(null,G__13451,G__13452,G__13453,G__13454,G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461,G__13462,G__13463,G__13464,G__13465,G__13466));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13467 = a;
var G__13468 = b;
var G__13469 = c;
var G__13470 = d;
var G__13471 = e;
var G__13472 = f;
var G__13473 = g;
var G__13474 = h;
var G__13475 = i;
var G__13476 = j;
var G__13477 = k;
var G__13478 = l;
var G__13479 = m;
var G__13480 = n;
var G__13481 = o;
var G__13482 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__13467,G__13468,G__13469,G__13470,G__13471,G__13472,G__13473,G__13474,G__13475,G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482) : target_fn.call(null,G__13467,G__13468,G__13469,G__13470,G__13471,G__13472,G__13473,G__13474,G__13475,G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13483 = a;
var G__13484 = b;
var G__13485 = c;
var G__13486 = d;
var G__13487 = e;
var G__13488 = f;
var G__13489 = g;
var G__13490 = h;
var G__13491 = i;
var G__13492 = j;
var G__13493 = k;
var G__13494 = l;
var G__13495 = m;
var G__13496 = n;
var G__13497 = o;
var G__13498 = p;
var G__13499 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492,G__13493,G__13494,G__13495,G__13496,G__13497,G__13498,G__13499) : self__.dispatch_fn.call(null,G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492,G__13493,G__13494,G__13495,G__13496,G__13497,G__13498,G__13499));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13500 = a;
var G__13501 = b;
var G__13502 = c;
var G__13503 = d;
var G__13504 = e;
var G__13505 = f;
var G__13506 = g;
var G__13507 = h;
var G__13508 = i;
var G__13509 = j;
var G__13510 = k;
var G__13511 = l;
var G__13512 = m;
var G__13513 = n;
var G__13514 = o;
var G__13515 = p;
var G__13516 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507,G__13508,G__13509,G__13510,G__13511,G__13512,G__13513,G__13514,G__13515,G__13516) : target_fn.call(null,G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507,G__13508,G__13509,G__13510,G__13511,G__13512,G__13513,G__13514,G__13515,G__13516));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13517 = a;
var G__13518 = b;
var G__13519 = c;
var G__13520 = d;
var G__13521 = e;
var G__13522 = f;
var G__13523 = g;
var G__13524 = h;
var G__13525 = i;
var G__13526 = j;
var G__13527 = k;
var G__13528 = l;
var G__13529 = m;
var G__13530 = n;
var G__13531 = o;
var G__13532 = p;
var G__13533 = q;
var G__13534 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526,G__13527,G__13528,G__13529,G__13530,G__13531,G__13532,G__13533,G__13534) : self__.dispatch_fn.call(null,G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526,G__13527,G__13528,G__13529,G__13530,G__13531,G__13532,G__13533,G__13534));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13535 = a;
var G__13536 = b;
var G__13537 = c;
var G__13538 = d;
var G__13539 = e;
var G__13540 = f;
var G__13541 = g;
var G__13542 = h;
var G__13543 = i;
var G__13544 = j;
var G__13545 = k;
var G__13546 = l;
var G__13547 = m;
var G__13548 = n;
var G__13549 = o;
var G__13550 = p;
var G__13551 = q;
var G__13552 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542,G__13543,G__13544,G__13545,G__13546,G__13547,G__13548,G__13549,G__13550,G__13551,G__13552) : target_fn.call(null,G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542,G__13543,G__13544,G__13545,G__13546,G__13547,G__13548,G__13549,G__13550,G__13551,G__13552));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13553 = a;
var G__13554 = b;
var G__13555 = c;
var G__13556 = d;
var G__13557 = e;
var G__13558 = f;
var G__13559 = g;
var G__13560 = h;
var G__13561 = i;
var G__13562 = j;
var G__13563 = k;
var G__13564 = l;
var G__13565 = m;
var G__13566 = n;
var G__13567 = o;
var G__13568 = p;
var G__13569 = q;
var G__13570 = r;
var G__13571 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564,G__13565,G__13566,G__13567,G__13568,G__13569,G__13570,G__13571) : self__.dispatch_fn.call(null,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564,G__13565,G__13566,G__13567,G__13568,G__13569,G__13570,G__13571));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13572 = a;
var G__13573 = b;
var G__13574 = c;
var G__13575 = d;
var G__13576 = e;
var G__13577 = f;
var G__13578 = g;
var G__13579 = h;
var G__13580 = i;
var G__13581 = j;
var G__13582 = k;
var G__13583 = l;
var G__13584 = m;
var G__13585 = n;
var G__13586 = o;
var G__13587 = p;
var G__13588 = q;
var G__13589 = r;
var G__13590 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590) : target_fn.call(null,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13591 = a;
var G__13592 = b;
var G__13593 = c;
var G__13594 = d;
var G__13595 = e;
var G__13596 = f;
var G__13597 = g;
var G__13598 = h;
var G__13599 = i;
var G__13600 = j;
var G__13601 = k;
var G__13602 = l;
var G__13603 = m;
var G__13604 = n;
var G__13605 = o;
var G__13606 = p;
var G__13607 = q;
var G__13608 = r;
var G__13609 = s;
var G__13610 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13591,G__13592,G__13593,G__13594,G__13595,G__13596,G__13597,G__13598,G__13599,G__13600,G__13601,G__13602,G__13603,G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610) : self__.dispatch_fn.call(null,G__13591,G__13592,G__13593,G__13594,G__13595,G__13596,G__13597,G__13598,G__13599,G__13600,G__13601,G__13602,G__13603,G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13611 = a;
var G__13612 = b;
var G__13613 = c;
var G__13614 = d;
var G__13615 = e;
var G__13616 = f;
var G__13617 = g;
var G__13618 = h;
var G__13619 = i;
var G__13620 = j;
var G__13621 = k;
var G__13622 = l;
var G__13623 = m;
var G__13624 = n;
var G__13625 = o;
var G__13626 = p;
var G__13627 = q;
var G__13628 = r;
var G__13629 = s;
var G__13630 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13611,G__13612,G__13613,G__13614,G__13615,G__13616,G__13617,G__13618,G__13619,G__13620,G__13621,G__13622,G__13623,G__13624,G__13625,G__13626,G__13627,G__13628,G__13629,G__13630) : target_fn.call(null,G__13611,G__13612,G__13613,G__13614,G__13615,G__13616,G__13617,G__13618,G__13619,G__13620,G__13621,G__13622,G__13623,G__13624,G__13625,G__13626,G__13627,G__13628,G__13629,G__13630));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13632 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__13632);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4330__auto__,writer__4331__auto__,opt__4332__auto__){
return cljs.core._write(writer__4331__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__13637 = x;
var G__13638 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13637,G__13638) : pred.call(null,G__13637,G__13638));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13639 = y;
var G__13640 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13639,G__13640) : pred.call(null,G__13639,G__13640));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map